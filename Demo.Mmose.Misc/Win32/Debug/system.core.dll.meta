  System.Core.resources - Embedded, ContainedInManifestFile, 
  System.Linq.resources - Embedded, ContainedInManifestFile, 
  System.Linq.Expressions.resources - Embedded, ContainedInManifestFile, 
  System.Res.resources - Embedded, ContainedInManifestFile, 
Assembly System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Assembly System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Assembly System.Security, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=SHA1, flags=None
Assembly System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Class Microsoft.Contracts.PureAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Contracts.ContractClassAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.Type): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type Type 'get ' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Contracts.InvariantMethodAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Contracts.RuntimeContractsAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Contracts.ImmutableAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Contracts.VerifyAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.Contracts.Contract: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    Assume(Boolean): PrivateScope, Public, Static, HideBySig
    Assume(Boolean, String): PrivateScope, Public, Static, HideBySig
    Assert(Boolean): PrivateScope, Public, Static, HideBySig
    Assert(Boolean, String): PrivateScope, Public, Static, HideBySig
    Requires(Boolean): PrivateScope, Public, Static, HideBySig
    Requires(Exception): PrivateScope, Public, Static, HideBySig
    DebugRequires(Boolean): PrivateScope, Public, Static, HideBySig
    Ensures(Boolean): PrivateScope, Public, Static, HideBySig
    Throws(): PrivateScope, Public, Static, HideBySig
    ThrowsEnsures(Boolean): PrivateScope, Public, Static, HideBySig
    AssertOnReturn(Boolean): PrivateScope, Public, Static, HideBySig
    AssertOnException(Boolean): PrivateScope, Public, Static, HideBySig
    Result(): PrivateScope, Public, Static, HideBySig
    Parameter(T&(Out)): PrivateScope, Public, Static, HideBySig
    Old(T): PrivateScope, Public, Static, HideBySig
    Invariant(Boolean): PrivateScope, Public, Static, HideBySig
    ForAll(Int32, Int32, Predicate`1): PrivateScope, Public, Static, HideBySig
    Exists(Int32, Int32, Predicate`1): PrivateScope, Public, Static, HideBySig
    RewriterEnsures(Boolean): PrivateScope, Public, Static, HideBySig
    RewriterInvariant(Boolean): PrivateScope, Public, Static, HideBySig
Class Microsoft.Contracts.Contract+PreconditionException: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Contracts.Contract+PostconditionException: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Contracts.Contract+InvariantException: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Contracts.Contract+AssertionException: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Contracts.Contract+AssumptionException: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct System.Diagnostics.Eventing.EventDescriptor: AutoLayout, AnsiClass, Class, Public, ExplicitLayout, Sealed, HasSecurity, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Byte, Byte, Byte, Byte, Int32, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 EventId 'get ' : 
    Byte Version 'get ' : 
    Byte Channel 'get ' : 
    Byte Level 'get ' : 
    Byte Opcode 'get ' : 
    Int32 Task 'get ' : 
    Int64 Keywords 'get ' : 
  Methods:
    get_EventId(): PrivateScope, Public, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_Channel(): PrivateScope, Public, HideBySig, SpecialName
    get_Level(): PrivateScope, Public, HideBySig, SpecialName
    get_Opcode(): PrivateScope, Public, HideBySig, SpecialName
    get_Task(): PrivateScope, Public, HideBySig, SpecialName
    get_Keywords(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.Eventing.EventProvider: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
    Void .ctor(System.Guid): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
  Interfaces:
    System.IDisposable
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Close(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    IsEnabled(): PrivateScope, Public, HideBySig
    IsEnabled(Byte, Int64): PrivateScope, Public, HideBySig
    GetLastWriteEventError(): PrivateScope, Public, Static, HideBySig
    WriteMessageEvent(String, Byte, Int64): PrivateScope, Public, HideBySig
    WriteMessageEvent(String): PrivateScope, Public, HideBySig
    WriteEvent(EventDescriptor&, Object[]): PrivateScope, Public, HideBySig
    WriteEvent(EventDescriptor&, String): PrivateScope, Public, HideBySig
    WriteTransferEvent(EventDescriptor&, Guid, Object[]): PrivateScope, Public, HideBySig
    SetActivityId(Guid&): PrivateScope, Public, Static, HideBySig
    CreateActivityId(): PrivateScope, Public, Static, HideBySig
Struct System.Diagnostics.Eventing.EventProvider+WriteEventErrorCode: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    WriteEventErrorCode NoError = 0 : Public, Static, Literal, HasDefault
    WriteEventErrorCode NoFreeBuffers = 1 : Public, Static, Literal, HasDefault
    WriteEventErrorCode EventTooBig = 2 : Public, Static, Literal, HasDefault
Class System.Diagnostics.Eventing.EventProviderTraceListener: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
  :System.Diagnostics.TraceListener
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Delimiter 'get set' : 
    Boolean IsThreadSafe 'get ' : 
  Methods:
    get_Delimiter(): PrivateScope, Public, HideBySig, SpecialName
    set_Delimiter(String): PrivateScope, Public, HideBySig, SpecialName
    Flush(): PrivateScope, Public, Final, Virtual, HideBySig
    get_IsThreadSafe(): PrivateScope, Public, Final, Virtual, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    Write(String): PrivateScope, Public, Final, Virtual, HideBySig
    WriteLine(String): PrivateScope, Public, Final, Virtual, HideBySig
    TraceData(TraceEventCache, String, TraceEventType, Int32, Object): PrivateScope, Public, Final, Virtual, HideBySig
    TraceData(TraceEventCache, String, TraceEventType, Int32, Object[]): PrivateScope, Public, Final, Virtual, HideBySig
    TraceEvent(TraceEventCache, String, TraceEventType, Int32): PrivateScope, Public, Final, Virtual, HideBySig
    TraceEvent(TraceEventCache, String, TraceEventType, Int32, String): PrivateScope, Public, Final, Virtual, HideBySig
    TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[]): PrivateScope, Public, Final, Virtual, HideBySig
    Fail(String, String): PrivateScope, Public, Virtual, HideBySig
    TraceTransfer(TraceEventCache, String, Int32, String, Guid): PrivateScope, Public, Final, Virtual, HideBySig
Class System.Management.Instrumentation.ManagementEntityAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get set' : 
    Boolean External 'get set' : 
    Boolean Singleton 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
    get_External(): PrivateScope, Public, HideBySig, SpecialName
    set_External(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Singleton(): PrivateScope, Public, HideBySig, SpecialName
    set_Singleton(Boolean): PrivateScope, Public, HideBySig, SpecialName
Struct System.Management.Instrumentation.ManagementHostingModel: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Management.Instrumentation.ManagementHostingModel Decoupled = 0 : Public, Static, Literal, HasDefault
    System.Management.Instrumentation.ManagementHostingModel NetworkService = 1 : Public, Static, Literal, HasDefault
    System.Management.Instrumentation.ManagementHostingModel LocalService = 2 : Public, Static, Literal, HasDefault
    System.Management.Instrumentation.ManagementHostingModel LocalSystem = 3 : Public, Static, Literal, HasDefault
Class System.Management.Instrumentation.WmiConfigurationAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String SecurityRestriction 'get set' : 
    System.String NamespaceSecurity 'get set' : 
    Boolean IdentifyLevel 'get set' : 
    System.Management.Instrumentation.ManagementHostingModel HostingModel 'get set' : 
    System.String HostingGroup 'get set' : 
    System.String Scope 'get ' : 
  Methods:
    get_SecurityRestriction(): PrivateScope, Public, HideBySig, SpecialName
    set_SecurityRestriction(String): PrivateScope, Public, HideBySig, SpecialName
    get_NamespaceSecurity(): PrivateScope, Public, HideBySig, SpecialName
    set_NamespaceSecurity(String): PrivateScope, Public, HideBySig, SpecialName
    get_IdentifyLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_IdentifyLevel(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_HostingModel(): PrivateScope, Public, HideBySig, SpecialName
    set_HostingModel(ManagementHostingModel): PrivateScope, Public, HideBySig, SpecialName
    get_HostingGroup(): PrivateScope, Public, HideBySig, SpecialName
    set_HostingGroup(String): PrivateScope, Public, HideBySig, SpecialName
    get_Scope(): PrivateScope, Public, HideBySig, SpecialName
Class System.Management.Instrumentation.ManagementMemberAttribute: AutoLayout, AnsiClass, Class, Public, Abstract, HasSecurity, BeforeFieldInit
  :System.Attribute
  Properties:
    System.String Name 'get set' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    set_Name(String): PrivateScope, Public, HideBySig, SpecialName
Class System.Management.Instrumentation.ManagementNewInstanceAttribute: AutoLayout, AnsiClass, Class, Public, Abstract, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.ManagementMemberAttribute
Class System.Management.Instrumentation.ManagementBindAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.ManagementNewInstanceAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type Schema 'get set' : 
  Methods:
    get_Schema(): PrivateScope, Public, HideBySig, SpecialName
    set_Schema(Type): PrivateScope, Public, HideBySig, SpecialName
Class System.Management.Instrumentation.ManagementCreateAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.ManagementNewInstanceAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Management.Instrumentation.ManagementRemoveAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.ManagementMemberAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type Schema 'get set' : 
  Methods:
    get_Schema(): PrivateScope, Public, HideBySig, SpecialName
    set_Schema(Type): PrivateScope, Public, HideBySig, SpecialName
Class System.Management.Instrumentation.ManagementEnumeratorAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.ManagementNewInstanceAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type Schema 'get set' : 
  Methods:
    get_Schema(): PrivateScope, Public, HideBySig, SpecialName
    set_Schema(Type): PrivateScope, Public, HideBySig, SpecialName
Class System.Management.Instrumentation.ManagementProbeAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.ManagementMemberAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type Schema 'get set' : 
  Methods:
    get_Schema(): PrivateScope, Public, HideBySig, SpecialName
    set_Schema(Type): PrivateScope, Public, HideBySig, SpecialName
Class System.Management.Instrumentation.ManagementTaskAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.ManagementMemberAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type Schema 'get set' : 
  Methods:
    get_Schema(): PrivateScope, Public, HideBySig, SpecialName
    set_Schema(Type): PrivateScope, Public, HideBySig, SpecialName
Class System.Management.Instrumentation.ManagementKeyAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.ManagementMemberAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Management.Instrumentation.ManagementReferenceAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Type 'get set' : 
  Methods:
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    set_Type(String): PrivateScope, Public, HideBySig, SpecialName
Struct System.Management.Instrumentation.ManagementConfigurationType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Management.Instrumentation.ManagementConfigurationType Apply = 0 : Public, Static, Literal, HasDefault
    System.Management.Instrumentation.ManagementConfigurationType OnCommit = 1 : Public, Static, Literal, HasDefault
Class System.Management.Instrumentation.ManagementConfigurationAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.ManagementMemberAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Management.Instrumentation.ManagementConfigurationType Mode 'get set' : 
    System.Type Schema 'get set' : 
  Methods:
    get_Mode(): PrivateScope, Public, HideBySig, SpecialName
    set_Mode(ManagementConfigurationType): PrivateScope, Public, HideBySig, SpecialName
    get_Schema(): PrivateScope, Public, HideBySig, SpecialName
    set_Schema(Type): PrivateScope, Public, HideBySig, SpecialName
Class System.Management.Instrumentation.ManagementCommitAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.ManagementMemberAttribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Management.Instrumentation.ManagementNameAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Attribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
Class System.Management.Instrumentation.InstrumentationBaseException: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Management.Instrumentation.InstrumentationException: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.InstrumentationBaseException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Management.Instrumentation.InstanceNotFoundException: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  :System.Management.Instrumentation.InstrumentationException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.Eventing.Reader.EventBookmark: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
  Properties:
    System.String BookmarkText 'get ' : 
  Methods:
    get_BookmarkText(): PrivateScope, Assembly, HideBySig, SpecialName
Struct System.Diagnostics.Eventing.Reader.EventLogType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.Eventing.Reader.EventLogType Administrative = 0 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.EventLogType Operational = 1 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.EventLogType Analytical = 2 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.EventLogType Debug = 3 : Public, Static, Literal, HasDefault
Struct System.Diagnostics.Eventing.Reader.EventLogIsolation: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.Eventing.Reader.EventLogIsolation Application = 0 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.EventLogIsolation System = 1 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.EventLogIsolation Custom = 2 : Public, Static, Literal, HasDefault
Struct System.Diagnostics.Eventing.Reader.EventLogMode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.Eventing.Reader.EventLogMode Circular = 0 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.EventLogMode AutoBackup = 1 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.EventLogMode Retain = 2 : Public, Static, Literal, HasDefault
Class System.Diagnostics.Eventing.Reader.EventLogConfiguration: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Diagnostics.Eventing.Reader.EventLogSession): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.String LogName 'get ' : 
    System.Diagnostics.Eventing.Reader.EventLogType LogType 'get ' : 
    System.Diagnostics.Eventing.Reader.EventLogIsolation LogIsolation 'get ' : 
    Boolean IsEnabled 'get set' : 
    Boolean IsClassicLog 'get ' : 
    System.String SecurityDescriptor 'get set' : 
    System.String LogFilePath 'get set' : 
    Int64 MaximumSizeInBytes 'get set' : 
    System.Diagnostics.Eventing.Reader.EventLogMode LogMode 'get set' : 
    System.String OwningProviderName 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.String] ProviderNames 'get ' : 
    System.Nullable`1[System.Int32] ProviderLevel 'get set' : 
    System.Nullable`1[System.Int64] ProviderKeywords 'get set' : 
    System.Nullable`1[System.Int32] ProviderBufferSize 'get ' : 
    System.Nullable`1[System.Int32] ProviderMinimumNumberOfBuffers 'get ' : 
    System.Nullable`1[System.Int32] ProviderMaximumNumberOfBuffers 'get ' : 
    System.Nullable`1[System.Int32] ProviderLatency 'get ' : 
    System.Nullable`1[System.Guid] ProviderControlGuid 'get ' : 
  Methods:
    get_LogName(): PrivateScope, Public, HideBySig, SpecialName
    get_LogType(): PrivateScope, Public, HideBySig, SpecialName
    get_LogIsolation(): PrivateScope, Public, HideBySig, SpecialName
    get_IsEnabled(): PrivateScope, Public, HideBySig, SpecialName
    set_IsEnabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_IsClassicLog(): PrivateScope, Public, HideBySig, SpecialName
    get_SecurityDescriptor(): PrivateScope, Public, HideBySig, SpecialName
    set_SecurityDescriptor(String): PrivateScope, Public, HideBySig, SpecialName
    get_LogFilePath(): PrivateScope, Public, HideBySig, SpecialName
    set_LogFilePath(String): PrivateScope, Public, HideBySig, SpecialName
    get_MaximumSizeInBytes(): PrivateScope, Public, HideBySig, SpecialName
    set_MaximumSizeInBytes(Int64): PrivateScope, Public, HideBySig, SpecialName
    get_LogMode(): PrivateScope, Public, HideBySig, SpecialName
    set_LogMode(EventLogMode): PrivateScope, Public, HideBySig, SpecialName
    get_OwningProviderName(): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderNames(): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderLevel(): PrivateScope, Public, HideBySig, SpecialName
    set_ProviderLevel(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderKeywords(): PrivateScope, Public, HideBySig, SpecialName
    set_ProviderKeywords(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderBufferSize(): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderMinimumNumberOfBuffers(): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderMaximumNumberOfBuffers(): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderLatency(): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderControlGuid(): PrivateScope, Public, HideBySig, SpecialName
    SaveChanges(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Diagnostics.Eventing.Reader.EventLogLink: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(UInt32, System.Diagnostics.Eventing.Reader.ProviderMetadata): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Boolean, System.String, UInt32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String LogName 'get ' : 
    Boolean IsImported 'get ' : 
    System.String DisplayName 'get ' : 
    UInt32 ChannelId 'get ' : 
  Methods:
    get_LogName(): PrivateScope, Public, HideBySig, SpecialName
    get_IsImported(): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayName(): PrivateScope, Public, HideBySig, SpecialName
    get_ChannelId(): PrivateScope, Assembly, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventLogStatus: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(System.String, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String LogName 'get ' : 
    Int32 StatusCode 'get ' : 
  Methods:
    get_LogName(): PrivateScope, Public, HideBySig, SpecialName
    get_StatusCode(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventProperty: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(System.Object): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventLogPropertySelector: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
    Void .ctor(System.Collections.Generic.IEnumerable`1[System.String]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.Diagnostics.Eventing.Reader.EventLogHandle Handle 'get ' : 
  Methods:
    get_Handle(): PrivateScope, Assembly, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Diagnostics.Eventing.Reader.EventRecord: AutoLayout, AnsiClass, Class, Public, Abstract, HasSecurity, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    Int32 Id   'get ' : 
    System.Nullable`1[System.Byte] Version 'get ' : 
    System.Nullable`1[System.Byte] Level 'get ' : 
    System.Nullable`1[System.Int32] Task 'get ' : 
    System.Nullable`1[System.Int16] Opcode 'get ' : 
    System.Nullable`1[System.Int64] Keywords 'get ' : 
    System.Nullable`1[System.Int64] RecordId 'get ' : 
    System.String ProviderName 'get ' : 
    System.Nullable`1[System.Guid] ProviderId 'get ' : 
    System.String LogName 'get ' : 
    System.Nullable`1[System.Int32] ProcessId 'get ' : 
    System.Nullable`1[System.Int32] ThreadId 'get ' : 
    System.String MachineName 'get ' : 
    System.Security.Principal.SecurityIdentifier UserId 'get ' : 
    System.Nullable`1[System.DateTime] TimeCreated 'get ' : 
    System.Nullable`1[System.Guid] ActivityId 'get ' : 
    System.Nullable`1[System.Guid] RelatedActivityId 'get ' : 
    System.Nullable`1[System.Int32] Qualifiers 'get ' : 
    System.String LevelDisplayName 'get ' : 
    System.String OpcodeDisplayName 'get ' : 
    System.String TaskDisplayName 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.String] KeywordsDisplayNames 'get ' : 
    System.Diagnostics.Eventing.Reader.EventBookmark Bookmark 'get ' : 
    System.Collections.Generic.IList`1[System.Diagnostics.Eventing.Reader.EventProperty] Properties 'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Version(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Level(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Task(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Opcode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Keywords(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_RecordId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ProviderName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ProviderId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_LogName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ProcessId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ThreadId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_MachineName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_UserId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_TimeCreated(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ActivityId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_RelatedActivityId(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Qualifiers(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    FormatDescription(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    FormatDescription(IEnumerable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_LevelDisplayName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_OpcodeDisplayName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_TaskDisplayName(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_KeywordsDisplayNames(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Bookmark(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Properties(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    ToXml(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Diagnostics.Eventing.Reader.EventKeyword: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(Int64, System.Diagnostics.Eventing.Reader.ProviderMetadata): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int64, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    Int64 Value 'get ' : 
    System.String DisplayName 'get ' : 
  Methods:
    PrepareData(): PrivateScope, Assembly, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayName(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventLevel: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(Int32, System.Diagnostics.Eventing.Reader.ProviderMetadata): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    Int32 Value 'get ' : 
    System.String DisplayName 'get ' : 
  Methods:
    PrepareData(): PrivateScope, Assembly, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayName(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventLogRecord: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
  :System.Diagnostics.Eventing.Reader.EventRecord
    Void .ctor(System.Diagnostics.Eventing.Reader.EventLogHandle, System.Diagnostics.Eventing.Reader.EventLogSession, System.Diagnostics.Eventing.Reader.ProviderMetadataCachedInformation): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Diagnostics.Eventing.Reader.EventLogHandle Handle 'get ' : 
    Int32 Id   'get ' : 
    System.Nullable`1[System.Byte] Version 'get ' : 
    System.Nullable`1[System.Int32] Qualifiers 'get ' : 
    System.Nullable`1[System.Byte] Level 'get ' : 
    System.Nullable`1[System.Int32] Task 'get ' : 
    System.Nullable`1[System.Int16] Opcode 'get ' : 
    System.Nullable`1[System.Int64] Keywords 'get ' : 
    System.Nullable`1[System.Int64] RecordId 'get ' : 
    System.String ProviderName 'get ' : 
    System.Nullable`1[System.Guid] ProviderId 'get ' : 
    System.String LogName 'get ' : 
    System.Nullable`1[System.Int32] ProcessId 'get ' : 
    System.Nullable`1[System.Int32] ThreadId 'get ' : 
    System.String MachineName 'get ' : 
    System.Security.Principal.SecurityIdentifier UserId 'get ' : 
    System.Nullable`1[System.DateTime] TimeCreated 'get ' : 
    System.Nullable`1[System.Guid] ActivityId 'get ' : 
    System.Nullable`1[System.Guid] RelatedActivityId 'get ' : 
    System.String ContainerLog 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.Int32] MatchedQueryIds 'get ' : 
    System.Diagnostics.Eventing.Reader.EventBookmark Bookmark 'get ' : 
    System.String LevelDisplayName 'get ' : 
    System.String OpcodeDisplayName 'get ' : 
    System.String TaskDisplayName 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.String] KeywordsDisplayNames 'get ' : 
    System.Collections.Generic.IList`1[System.Diagnostics.Eventing.Reader.EventProperty] Properties 'get ' : 
  Methods:
    get_Handle(): PrivateScope, Assembly, HideBySig, SpecialName
    PrepareSystemData(): PrivateScope, Assembly, HideBySig
    get_Id(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Qualifiers(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Level(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Task(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Opcode(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Keywords(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_RecordId(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ProviderName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ProviderId(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_LogName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ProcessId(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ThreadId(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_MachineName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_UserId(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_TimeCreated(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ActivityId(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_RelatedActivityId(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ContainerLog(): PrivateScope, Public, HideBySig, SpecialName
    get_MatchedQueryIds(): PrivateScope, Public, HideBySig, SpecialName
    get_Bookmark(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    FormatDescription(): PrivateScope, Public, Virtual, HideBySig
    FormatDescription(IEnumerable`1): PrivateScope, Public, Virtual, HideBySig
    get_LevelDisplayName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_OpcodeDisplayName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_TaskDisplayName(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_KeywordsDisplayNames(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Properties(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetPropertyValues(EventLogPropertySelector): PrivateScope, Public, HideBySig
    ToXml(): PrivateScope, Public, Virtual, HideBySig
    GetBookmarkHandleFromBookmark(EventBookmark): PrivateScope, Assembly, Static, HideBySig
Class System.Diagnostics.Eventing.Reader.EventLogReader: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Diagnostics.Eventing.Reader.PathType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Diagnostics.Eventing.Reader.EventLogQuery): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Diagnostics.Eventing.Reader.EventLogQuery, System.Diagnostics.Eventing.Reader.EventBookmark): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Int32 BatchSize 'get set' : 
    System.Collections.Generic.IList`1[System.Diagnostics.Eventing.Reader.EventLogStatus] LogStatus 'get ' : 
  Methods:
    get_BatchSize(): PrivateScope, Public, HideBySig, SpecialName
    set_BatchSize(Int32): PrivateScope, Public, HideBySig, SpecialName
    ReadEvent(): PrivateScope, Public, HideBySig
    ReadEvent(TimeSpan): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    SeekReset(): PrivateScope, Assembly, HideBySig
    SeekCommon(Int64): PrivateScope, Assembly, HideBySig
    Seek(EventBookmark): PrivateScope, Public, HideBySig
    Seek(EventBookmark, Int64): PrivateScope, Public, HideBySig
    Seek(SeekOrigin, Int64): PrivateScope, Public, HideBySig
    CancelReading(): PrivateScope, Public, HideBySig
    get_LogStatus(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventLogWatcher: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Diagnostics.Eventing.Reader.EventLogQuery): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Diagnostics.Eventing.Reader.EventLogQuery, System.Diagnostics.Eventing.Reader.EventBookmark): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Diagnostics.Eventing.Reader.EventLogQuery, System.Diagnostics.Eventing.Reader.EventBookmark, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Boolean Enabled 'get set' : 
  Events:
    System.EventHandler`1[System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs] EventRecordWritten: 
  Methods:
    add_EventRecordWritten(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    remove_EventRecordWritten(EventHandler`1): PrivateScope, Public, HideBySig, SpecialName
    get_Enabled(): PrivateScope, Public, HideBySig, SpecialName
    set_Enabled(Boolean): PrivateScope, Public, HideBySig, SpecialName
    StopSubscribing(): PrivateScope, Assembly, HideBySig
    StartSubscribing(): PrivateScope, Assembly, HideBySig
    SubscribedEventsAvailableCallback(Object, Boolean): PrivateScope, Assembly, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.EventArgs
    Void .ctor(System.Diagnostics.Eventing.Reader.EventLogRecord): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Exception): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Diagnostics.Eventing.Reader.EventRecord EventRecord 'get ' : 
    System.Exception EventException 'get ' : 
  Methods:
    get_EventRecord(): PrivateScope, Public, HideBySig, SpecialName
    get_EventException(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventLogQuery: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.String, System.Diagnostics.Eventing.Reader.PathType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Diagnostics.Eventing.Reader.PathType, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Diagnostics.Eventing.Reader.EventLogSession Session 'get set' : 
    Boolean TolerateQueryErrors 'get set' : 
    Boolean ReverseDirection 'get set' : 
    System.String Path 'get ' : 
    System.Diagnostics.Eventing.Reader.PathType ThePathType 'get ' : 
    System.String Query 'get ' : 
  Methods:
    get_Session(): PrivateScope, Public, HideBySig, SpecialName
    set_Session(EventLogSession): PrivateScope, Public, HideBySig, SpecialName
    get_TolerateQueryErrors(): PrivateScope, Public, HideBySig, SpecialName
    set_TolerateQueryErrors(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_ReverseDirection(): PrivateScope, Public, HideBySig, SpecialName
    set_ReverseDirection(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Path(): PrivateScope, Assembly, HideBySig, SpecialName
    get_ThePathType(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Query(): PrivateScope, Assembly, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventLogHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Runtime.InteropServices.SafeHandle
    Void .ctor(IntPtr, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsInvalid 'get ' : 
    System.Diagnostics.Eventing.Reader.EventLogHandle Zero 'get ' : 
  Methods:
    get_IsInvalid(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Zero(): PrivateScope, Public, Static, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventLogPermissionHolder: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetEventLogPermission(): PrivateScope, Public, Static, HideBySig
Struct System.Diagnostics.Eventing.Reader.SessionAuthentication: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.Eventing.Reader.SessionAuthentication Default = 0 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.SessionAuthentication Negotiate = 1 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.SessionAuthentication Kerberos = 2 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.SessionAuthentication Ntlm = 3 : Public, Static, Literal, HasDefault
Struct System.Diagnostics.Eventing.Reader.PathType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.Eventing.Reader.PathType LogName = 1 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.PathType FilePath = 2 : Public, Static, Literal, HasDefault
Class System.Diagnostics.Eventing.Reader.EventLogSession: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, System.String, System.Security.SecureString, System.Diagnostics.Eventing.Reader.SessionAuthentication): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    System.Diagnostics.Eventing.Reader.EventLogHandle renderContextHandleSystem : Assembly
    System.Diagnostics.Eventing.Reader.EventLogHandle renderContextHandleUser : Assembly
  Properties:
    System.Diagnostics.Eventing.Reader.EventLogHandle Handle 'get ' : 
    System.Diagnostics.Eventing.Reader.EventLogSession GlobalSession 'get ' : 
  Methods:
    SetupSystemContext(): PrivateScope, Assembly, HideBySig
    SetupUserContext(): PrivateScope, Assembly, HideBySig
    get_Handle(): PrivateScope, Assembly, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CancelCurrentOperations(): PrivateScope, Public, HideBySig
    get_GlobalSession(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetProviderNames(): PrivateScope, Public, HideBySig
    GetLogNames(): PrivateScope, Public, HideBySig
    GetLogInformation(String, PathType): PrivateScope, Public, HideBySig
    ExportLog(String, PathType, String, String): PrivateScope, Public, HideBySig
    ExportLog(String, PathType, String, String, Boolean): PrivateScope, Public, HideBySig
    ExportLogAndMessages(String, PathType, String, String): PrivateScope, Public, HideBySig
    ExportLogAndMessages(String, PathType, String, String, Boolean, CultureInfo): PrivateScope, Public, HideBySig
    ClearLog(String): PrivateScope, Public, HideBySig
    ClearLog(String, String): PrivateScope, Public, HideBySig
Class System.Diagnostics.Eventing.Reader.EventMetadata: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(UInt32, Byte, Byte, Byte, Byte, Int16, Int64, System.String, System.String, System.Diagnostics.Eventing.Reader.ProviderMetadata): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 Id   'get ' : 
    Byte Version 'get ' : 
    System.Diagnostics.Eventing.Reader.EventLogLink LogLink 'get ' : 
    System.Diagnostics.Eventing.Reader.EventLevel Level 'get ' : 
    System.Diagnostics.Eventing.Reader.EventOpcode Opcode 'get ' : 
    System.Diagnostics.Eventing.Reader.EventTask Task 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.Diagnostics.Eventing.Reader.EventKeyword] Keywords 'get ' : 
    System.String Template 'get ' : 
    System.String Description 'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_Version(): PrivateScope, Public, HideBySig, SpecialName
    get_LogLink(): PrivateScope, Public, HideBySig, SpecialName
    get_Level(): PrivateScope, Public, HideBySig, SpecialName
    get_Opcode(): PrivateScope, Public, HideBySig, SpecialName
    get_Task(): PrivateScope, Public, HideBySig, SpecialName
    get_Keywords(): PrivateScope, Public, HideBySig, SpecialName
    get_Template(): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventOpcode: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(Int32, System.Diagnostics.Eventing.Reader.ProviderMetadata): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    Int32 Value 'get ' : 
    System.String DisplayName 'get ' : 
  Methods:
    PrepareData(): PrivateScope, Assembly, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayName(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventTask: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(Int32, System.Diagnostics.Eventing.Reader.ProviderMetadata): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32, System.String, System.Guid): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
    Int32 Value 'get ' : 
    System.String DisplayName 'get ' : 
    System.Guid EventGuid 'get ' : 
  Methods:
    PrepareData(): PrivateScope, Assembly, HideBySig
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayName(): PrivateScope, Public, HideBySig, SpecialName
    get_EventGuid(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventLogException: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Message 'get ' : 
  Methods:
    Throw(Int32): PrivateScope, Assembly, Static, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    get_Message(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.EventLogNotFoundException: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  :System.Diagnostics.Eventing.Reader.EventLogException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.Eventing.Reader.EventLogReadingException: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  :System.Diagnostics.Eventing.Reader.EventLogException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.Eventing.Reader.EventLogProviderDisabledException: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  :System.Diagnostics.Eventing.Reader.EventLogException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.Eventing.Reader.EventLogInvalidDataException: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  :System.Diagnostics.Eventing.Reader.EventLogException
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class System.Diagnostics.Eventing.Reader.EventLogInformation: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(System.Diagnostics.Eventing.Reader.EventLogSession, System.String, System.Diagnostics.Eventing.Reader.PathType): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Nullable`1[System.DateTime] CreationTime 'get ' : 
    System.Nullable`1[System.DateTime] LastAccessTime 'get ' : 
    System.Nullable`1[System.DateTime] LastWriteTime 'get ' : 
    System.Nullable`1[System.Int64] FileSize 'get ' : 
    System.Nullable`1[System.Int32] Attributes 'get ' : 
    System.Nullable`1[System.Int64] RecordCount 'get ' : 
    System.Nullable`1[System.Int64] OldestRecordNumber 'get ' : 
    System.Nullable`1[System.Boolean] IsLogFull 'get ' : 
  Methods:
    get_CreationTime(): PrivateScope, Public, HideBySig, SpecialName
    get_LastAccessTime(): PrivateScope, Public, HideBySig, SpecialName
    get_LastWriteTime(): PrivateScope, Public, HideBySig, SpecialName
    get_FileSize(): PrivateScope, Public, HideBySig, SpecialName
    get_Attributes(): PrivateScope, Public, HideBySig, SpecialName
    get_RecordCount(): PrivateScope, Public, HideBySig, SpecialName
    get_OldestRecordNumber(): PrivateScope, Public, HideBySig, SpecialName
    get_IsLogFull(): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.NativeWrapper: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    EvtQuery(EventLogHandle, String, String, Int32): PrivateScope, Public, Static, HideBySig
    EvtSeek(EventLogHandle, Int64, EventLogHandle, Int32, EvtSeekFlags): PrivateScope, Public, Static, HideBySig
    EvtSubscribe(EventLogHandle, SafeWaitHandle, String, String, EventLogHandle, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    EvtNext(EventLogHandle, Int32, IntPtr[], Int32, Int32, Int32&): PrivateScope, Public, Static, HideBySig
    EvtCancel(EventLogHandle): PrivateScope, Public, Static, HideBySig
    EvtClose(IntPtr): PrivateScope, Public, Static, HideBySig
    EvtOpenProviderMetadata(EventLogHandle, String, String, Int32, Int32): PrivateScope, Public, Static, HideBySig
    EvtGetObjectArraySize(EventLogHandle): PrivateScope, Public, Static, HideBySig
    EvtOpenEventMetadataEnum(EventLogHandle, Int32): PrivateScope, Public, Static, HideBySig
    EvtNextEventMetadata(EventLogHandle, Int32): PrivateScope, Public, Static, HideBySig
    EvtOpenChannelEnum(EventLogHandle, Int32): PrivateScope, Public, Static, HideBySig
    EvtOpenProviderEnum(EventLogHandle, Int32): PrivateScope, Public, Static, HideBySig
    EvtOpenChannelConfig(EventLogHandle, String, Int32): PrivateScope, Public, Static, HideBySig
    EvtSaveChannelConfig(EventLogHandle, Int32): PrivateScope, Public, Static, HideBySig
    EvtOpenLog(EventLogHandle, String, PathType): PrivateScope, Public, Static, HideBySig
    EvtExportLog(EventLogHandle, String, String, String, Int32): PrivateScope, Public, Static, HideBySig
    EvtArchiveExportedLog(EventLogHandle, String, Int32, Int32): PrivateScope, Public, Static, HideBySig
    EvtClearLog(EventLogHandle, String, String, Int32): PrivateScope, Public, Static, HideBySig
    EvtCreateRenderContext(Int32, String[], EvtRenderContextFlags): PrivateScope, Public, Static, HideBySig
    EvtRender(EventLogHandle, EventLogHandle, EvtRenderFlags, StringBuilder): PrivateScope, Public, Static, HideBySig
    EvtOpenSession(EvtLoginClass, EvtRpcLogin&, Int32, Int32): PrivateScope, Public, Static, HideBySig
    EvtCreateBookmark(String): PrivateScope, Public, Static, HideBySig
    EvtUpdateBookmark(EventLogHandle, EventLogHandle): PrivateScope, Public, Static, HideBySig
    EvtGetEventInfo(EventLogHandle, EvtEventPropertyId): PrivateScope, Public, Static, HideBySig
    EvtGetQueryInfo(EventLogHandle, EvtQueryPropertyId): PrivateScope, Public, Static, HideBySig
    EvtGetPublisherMetadataProperty(EventLogHandle, EvtPublisherMetadataPropertyId): PrivateScope, Public, Static, HideBySig
    EvtGetPublisherMetadataPropertyHandle(EventLogHandle, EvtPublisherMetadataPropertyId): PrivateScope, Assembly, Static, HideBySig
    EvtFormatMessage(EventLogHandle, UInt32): PrivateScope, Public, Static, HideBySig
    EvtGetObjectArrayProperty(EventLogHandle, Int32, Int32): PrivateScope, Public, Static, HideBySig
    EvtGetEventMetadataProperty(EventLogHandle, EvtEventMetadataPropertyId): PrivateScope, Public, Static, HideBySig
    EvtGetChannelConfigProperty(EventLogHandle, EvtChannelConfigPropertyId): PrivateScope, Public, Static, HideBySig
    EvtSetChannelConfigProperty(EventLogHandle, EvtChannelConfigPropertyId, Object): PrivateScope, Public, Static, HideBySig
    EvtNextChannelPath(EventLogHandle, Boolean&): PrivateScope, Public, Static, HideBySig
    EvtNextPublisherId(EventLogHandle, Boolean&): PrivateScope, Public, Static, HideBySig
    EvtGetLogInfo(EventLogHandle, EvtLogPropertyId): PrivateScope, Public, Static, HideBySig
    EvtRenderBufferWithContextSystem(EventLogHandle, EventLogHandle, EvtRenderFlags, SystemProperties, Int32): PrivateScope, Public, Static, HideBySig
    EvtRenderBufferWithContextUserOrValues(EventLogHandle, EventLogHandle): PrivateScope, Public, Static, HideBySig
    EvtFormatMessageRenderName(EventLogHandle, EventLogHandle, EvtFormatMessageFlags): PrivateScope, Public, Static, HideBySig
    EvtFormatMessageRenderKeywords(EventLogHandle, EventLogHandle, EvtFormatMessageFlags): PrivateScope, Public, Static, HideBySig
    EvtRenderBookmark(EventLogHandle): PrivateScope, Public, Static, HideBySig
    EvtFormatMessageFormatDescription(EventLogHandle, EventLogHandle, String[]): PrivateScope, Public, Static, HideBySig
    ConvertToObject(EvtVariant, EvtVariantType): PrivateScope, Public, Static, HideBySig
    ConvertToString(EvtVariant): PrivateScope, Public, Static, HideBySig
    ConvertToAnsiString(EvtVariant): PrivateScope, Public, Static, HideBySig
    ConvertToSid(EvtVariant): PrivateScope, Public, Static, HideBySig
    ConvertToGuid(EvtVariant): PrivateScope, Public, Static, HideBySig
    ConvertFileTimeToDateTime(EvtVariant): PrivateScope, Public, Static, HideBySig
    ConvertToSafeHandle(EvtVariant): PrivateScope, Public, Static, HideBySig
    ConvertToIntArray(EvtVariant): PrivateScope, Public, Static, HideBySig
    ConvertToBinaryArray(EvtVariant): PrivateScope, Public, Static, HideBySig
    ConvertToStringArray(EvtVariant): PrivateScope, Public, Static, HideBySig
Class System.Diagnostics.Eventing.Reader.NativeWrapper+SystemProperties: AutoLayout, AnsiClass, Class, NestedPublic, HasSecurity, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Boolean filled : Public
    System.Nullable`1[System.UInt16] Id : Public
    System.Nullable`1[System.Byte] Version : Public
    System.Nullable`1[System.UInt16] Qualifiers : Public
    System.Nullable`1[System.Byte] Level : Public
    System.Nullable`1[System.UInt16] Task : Public
    System.Nullable`1[System.Byte] Opcode : Public
    System.Nullable`1[System.UInt64] Keywords : Public
    System.Nullable`1[System.UInt64] RecordId : Public
    System.String ProviderName : Public
    System.Nullable`1[System.Guid] ProviderId : Public
    System.String ChannelName : Public
    System.Nullable`1[System.UInt32] ProcessId : Public
    System.Nullable`1[System.UInt32] ThreadId : Public
    System.String ComputerName : Public
    System.Security.Principal.SecurityIdentifier UserId : Public
    System.Nullable`1[System.DateTime] TimeCreated : Public
    System.Nullable`1[System.Guid] ActivityId : Public
    System.Nullable`1[System.Guid] RelatedActivityId : Public
Class System.Diagnostics.Eventing.Reader.ProviderMetadata: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Diagnostics.Eventing.Reader.EventLogSession, System.Globalization.CultureInfo): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Diagnostics.Eventing.Reader.EventLogSession, System.Globalization.CultureInfo, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    System.Diagnostics.Eventing.Reader.EventLogHandle Handle 'get ' : 
    System.String Name 'get ' : 
    System.Guid Id 'get ' : 
    System.String MessageFilePath 'get ' : 
    System.String ResourceFilePath 'get ' : 
    System.String ParameterFilePath 'get ' : 
    System.Uri HelpLink 'get ' : 
    System.String DisplayName 'get ' : 
    System.Collections.Generic.IList`1[System.Diagnostics.Eventing.Reader.EventLogLink] LogLinks 'get ' : 
    System.Collections.Generic.IList`1[System.Diagnostics.Eventing.Reader.EventLevel] Levels 'get ' : 
    System.Collections.Generic.IList`1[System.Diagnostics.Eventing.Reader.EventOpcode] Opcodes 'get ' : 
    System.Collections.Generic.IList`1[System.Diagnostics.Eventing.Reader.EventKeyword] Keywords 'get ' : 
    System.Collections.Generic.IList`1[System.Diagnostics.Eventing.Reader.EventTask] Tasks 'get ' : 
    System.Collections.Generic.IEnumerable`1[System.Diagnostics.Eventing.Reader.EventMetadata] Events 'get ' : 
  Methods:
    get_Handle(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_MessageFilePath(): PrivateScope, Public, HideBySig, SpecialName
    get_ResourceFilePath(): PrivateScope, Public, HideBySig, SpecialName
    get_ParameterFilePath(): PrivateScope, Public, HideBySig, SpecialName
    get_HelpLink(): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayName(): PrivateScope, Public, HideBySig, SpecialName
    get_LogLinks(): PrivateScope, Public, HideBySig, SpecialName
    FindStandardLevelDisplayName(String, UInt32): PrivateScope, Assembly, HideBySig
    FindStandardOpcodeDisplayName(String, UInt32): PrivateScope, Assembly, HideBySig
    FindStandardKeywordDisplayName(String, Int64): PrivateScope, Assembly, HideBySig
    FindStandardTaskDisplayName(String, UInt32): PrivateScope, Assembly, HideBySig
    GetProviderListProperty(EventLogHandle, EvtPublisherMetadataPropertyId): PrivateScope, Assembly, HideBySig
    get_Levels(): PrivateScope, Public, HideBySig, SpecialName
    get_Opcodes(): PrivateScope, Public, HideBySig, SpecialName
    get_Keywords(): PrivateScope, Public, HideBySig, SpecialName
    get_Tasks(): PrivateScope, Public, HideBySig, SpecialName
    get_Events(): PrivateScope, Public, HideBySig, SpecialName
    CheckReleased(): PrivateScope, Assembly, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct System.Diagnostics.Eventing.Reader.ProviderMetadata+ObjectTypeName: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ObjectTypeName Level = 0 : Public, Static, Literal, HasDefault
    ObjectTypeName Opcode = 1 : Public, Static, Literal, HasDefault
    ObjectTypeName Task = 2 : Public, Static, Literal, HasDefault
    ObjectTypeName Keyword = 3 : Public, Static, Literal, HasDefault
Class System.Diagnostics.Eventing.Reader.ProviderMetadataCachedInformation: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(System.Diagnostics.Eventing.Reader.EventLogSession, System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetFormatDescription(String, EventLogHandle): PrivateScope, Public, HideBySig
    GetFormatDescription(String, EventLogHandle, String[]): PrivateScope, Public, HideBySig
    GetLevelDisplayName(String, EventLogHandle): PrivateScope, Public, HideBySig
    GetOpcodeDisplayName(String, EventLogHandle): PrivateScope, Public, HideBySig
    GetTaskDisplayName(String, EventLogHandle): PrivateScope, Public, HideBySig
    GetKeywordDisplayNames(String, EventLogHandle): PrivateScope, Public, HideBySig
Class System.Diagnostics.Eventing.Reader.CoTaskMemUnicodeSafeHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Runtime.InteropServices.SafeHandle
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr, Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsInvalid 'get ' : 
    System.Diagnostics.Eventing.Reader.CoTaskMemUnicodeSafeHandle Zero 'get ' : 
  Methods:
    SetMemory(IntPtr): PrivateScope, Assembly, HideBySig
    GetMemory(): PrivateScope, Assembly, HideBySig
    get_IsInvalid(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Zero(): PrivateScope, Public, Static, HideBySig, SpecialName
Class System.Diagnostics.Eventing.Reader.CoTaskMemSafeHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Runtime.InteropServices.SafeHandle
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsInvalid 'get ' : 
    System.Diagnostics.Eventing.Reader.CoTaskMemSafeHandle Zero 'get ' : 
  Methods:
    SetMemory(IntPtr): PrivateScope, Assembly, HideBySig
    GetMemory(): PrivateScope, Assembly, HideBySig
    get_IsInvalid(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Zero(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct System.Diagnostics.Eventing.Reader.StandardEventLevel: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.Eventing.Reader.StandardEventLevel LogAlways = 0 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventLevel Critical = 1 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventLevel Error = 2 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventLevel Warning = 3 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventLevel Informational = 4 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventLevel Verbose = 5 : Public, Static, Literal, HasDefault
Struct System.Diagnostics.Eventing.Reader.StandardEventTask: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.Eventing.Reader.StandardEventTask None = 0 : Public, Static, Literal, HasDefault
Struct System.Diagnostics.Eventing.Reader.StandardEventOpcode: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.Eventing.Reader.StandardEventOpcode Info = 0 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventOpcode Start = 1 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventOpcode Stop = 2 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventOpcode DataCollectionStart = 3 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventOpcode DataCollectionStop = 4 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventOpcode Extension = 5 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventOpcode Reply = 6 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventOpcode Resume = 7 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventOpcode Suspend = 8 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventOpcode Send = 9 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventOpcode Receive = 240 : Public, Static, Literal, HasDefault
Struct System.Diagnostics.Eventing.Reader.StandardEventKeywords: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int64 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.Eventing.Reader.StandardEventKeywords None = 0 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventKeywords WdiContext = 562949953421312 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventKeywords WdiDiagnostic = 1125899906842624 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventKeywords Sqm = 2251799813685248 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventKeywords AuditFailure = 4503599627370496 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventKeywords AuditSuccess = 9007199254740992 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventKeywords CorrelationHint = 4503599627370496 : Public, Static, Literal, HasDefault
    System.Diagnostics.Eventing.Reader.StandardEventKeywords EventLogClassic = 36028797018963968 : Public, Static, Literal, HasDefault
Class System.Action: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Action`2[T1,T2]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1
  Type parameter: T2
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Action`3[T1,T2,T3]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1
  Type parameter: T2
  Type parameter: T3
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Action`4[T1,T2,T3,T4]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1
  Type parameter: T2
  Type parameter: T3
  Type parameter: T4
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Func`1[TResult]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: TResult
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Func`2[T,TResult]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T
  Type parameter: TResult
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Func`3[T1,T2,TResult]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1
  Type parameter: T2
  Type parameter: TResult
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Func`4[T1,T2,T3,TResult]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1
  Type parameter: T2
  Type parameter: T3
  Type parameter: TResult
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.Func`5[T1,T2,T3,T4,TResult]: AutoLayout, AnsiClass, Class, Public, Sealed
  Type parameter: T1
  Type parameter: T2
  Type parameter: T3
  Type parameter: T4
  Type parameter: TResult
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(T1, T2, T3, T4): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(T1, T2, T3, T4, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct System.Linq.Expressions.ExpressionType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Linq.Expressions.ExpressionType Add = 0 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType AddChecked = 1 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType And = 2 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType AndAlso = 3 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType ArrayLength = 4 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType ArrayIndex = 5 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Call = 6 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Coalesce = 7 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Conditional = 8 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Constant = 9 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Convert = 10 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType ConvertChecked = 11 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Divide = 12 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Equal = 13 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType ExclusiveOr = 14 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType GreaterThan = 15 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType GreaterThanOrEqual = 16 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Invoke = 17 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Lambda = 18 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType LeftShift = 19 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType LessThan = 20 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType LessThanOrEqual = 21 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType ListInit = 22 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType MemberAccess = 23 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType MemberInit = 24 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Modulo = 25 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Multiply = 26 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType MultiplyChecked = 27 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Negate = 28 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType UnaryPlus = 29 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType NegateChecked = 30 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType New = 31 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType NewArrayInit = 32 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType NewArrayBounds = 33 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Not = 34 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType NotEqual = 35 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Or = 36 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType OrElse = 37 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Parameter = 38 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Power = 39 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Quote = 40 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType RightShift = 41 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType Subtract = 42 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType SubtractChecked = 43 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType TypeAs = 44 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.ExpressionType TypeIs = 45 : Public, Static, Literal, HasDefault
Class System.Linq.Expressions.Expression: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    System.Linq.Expressions.ExpressionType NodeType 'get ' : 
    System.Type Type 'get ' : 
  Methods:
    GetNullableType(Type): PrivateScope, Assembly, Static, HideBySig
    IsNullableType(Type): PrivateScope, Assembly, Static, HideBySig
    GetNonNullableType(Type): PrivateScope, Assembly, Static, HideBySig
    ListBind(MethodInfo, ElementInit[]): PrivateScope, Public, Static, HideBySig
    ListBind(MethodInfo, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    MemberInit(NewExpression, MemberBinding[]): PrivateScope, Public, Static, HideBySig
    MemberInit(NewExpression, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    MemberBind(MemberInfo, MemberBinding[]): PrivateScope, Public, Static, HideBySig
    MemberBind(MemberInfo, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    MemberBind(MethodInfo, MemberBinding[]): PrivateScope, Public, Static, HideBySig
    MemberBind(MethodInfo, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Modulo(Expression, Expression): PrivateScope, Public, Static, HideBySig
    Modulo(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    Multiply(Expression, Expression): PrivateScope, Public, Static, HideBySig
    Multiply(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    MultiplyChecked(Expression, Expression): PrivateScope, Public, Static, HideBySig
    MultiplyChecked(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    UnaryPlus(Expression): PrivateScope, Public, Static, HideBySig
    UnaryPlus(Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    Negate(Expression): PrivateScope, Public, Static, HideBySig
    Negate(Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    NegateChecked(Expression): PrivateScope, Public, Static, HideBySig
    NegateChecked(Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    NotEqual(Expression, Expression): PrivateScope, Public, Static, HideBySig
    NotEqual(Expression, Expression, Boolean, MethodInfo): PrivateScope, Public, Static, HideBySig
    New(ConstructorInfo, Expression[]): PrivateScope, Public, Static, HideBySig
    New(ConstructorInfo, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    New(ConstructorInfo, IEnumerable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    New(ConstructorInfo, IEnumerable`1, MemberInfo[]): PrivateScope, Public, Static, HideBySig
    New(ConstructorInfo): PrivateScope, Public, Static, HideBySig
    New(Type): PrivateScope, Public, Static, HideBySig
    NewArrayBounds(Type, Expression[]): PrivateScope, Public, Static, HideBySig
    NewArrayBounds(Type, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    NewArrayInit(Type, Expression[]): PrivateScope, Public, Static, HideBySig
    NewArrayInit(Type, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Not(Expression): PrivateScope, Public, Static, HideBySig
    Not(Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    Or(Expression, Expression): PrivateScope, Public, Static, HideBySig
    Or(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    OrElse(Expression, Expression): PrivateScope, Public, Static, HideBySig
    OrElse(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    Parameter(Type, String): PrivateScope, Public, Static, HideBySig
    Power(Expression, Expression): PrivateScope, Public, Static, HideBySig
    Power(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    Property(Expression, PropertyInfo): PrivateScope, Public, Static, HideBySig
    Property(Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    Property(Expression, String): PrivateScope, Public, Static, HideBySig
    PropertyOrField(Expression, String): PrivateScope, Public, Static, HideBySig
    Quote(Expression): PrivateScope, Public, Static, HideBySig
    RightShift(Expression, Expression): PrivateScope, Public, Static, HideBySig
    RightShift(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    Subtract(Expression, Expression): PrivateScope, Public, Static, HideBySig
    Subtract(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    SubtractChecked(Expression, Expression): PrivateScope, Public, Static, HideBySig
    SubtractChecked(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    TypeAs(Expression, Type): PrivateScope, Public, Static, HideBySig
    TypeIs(Expression, Type): PrivateScope, Public, Static, HideBySig
    MakeUnary(ExpressionType, Expression, Type): PrivateScope, Public, Static, HideBySig
    MakeUnary(ExpressionType, Expression, Type, MethodInfo): PrivateScope, Public, Static, HideBySig
    MakeBinary(ExpressionType, Expression, Expression): PrivateScope, Public, Static, HideBySig
    MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo): PrivateScope, Public, Static, HideBySig
    MakeBinary(ExpressionType, Expression, Expression, Boolean, MethodInfo, LambdaExpression): PrivateScope, Public, Static, HideBySig
    MakeMemberAccess(Expression, MemberInfo): PrivateScope, Public, Static, HideBySig
    get_NodeType(): PrivateScope, Public, HideBySig, SpecialName
    get_Type(): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
    BuildString(StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    Add(Expression, Expression): PrivateScope, Public, Static, HideBySig
    Add(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    AddChecked(Expression, Expression): PrivateScope, Public, Static, HideBySig
    AddChecked(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    And(Expression, Expression): PrivateScope, Public, Static, HideBySig
    And(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    AndAlso(Expression, Expression): PrivateScope, Public, Static, HideBySig
    AndAlso(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    ArrayIndex(Expression, Expression): PrivateScope, Public, Static, HideBySig
    ArrayIndex(Expression, Expression[]): PrivateScope, Public, Static, HideBySig
    ArrayIndex(Expression, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ArrayLength(Expression): PrivateScope, Public, Static, HideBySig
    Bind(MemberInfo, Expression): PrivateScope, Public, Static, HideBySig
    Bind(MethodInfo, Expression): PrivateScope, Public, Static, HideBySig
    Call(MethodInfo, Expression[]): PrivateScope, Public, Static, HideBySig
    Call(Expression, MethodInfo, Expression[]): PrivateScope, Public, Static, HideBySig
    Call(Expression, MethodInfo, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Call(Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    Call(Expression, String, Type[], Expression[]): PrivateScope, Public, Static, HideBySig
    Call(Type, String, Type[], Expression[]): PrivateScope, Public, Static, HideBySig
    Coalesce(Expression, Expression, LambdaExpression): PrivateScope, Public, Static, HideBySig
    Coalesce(Expression, Expression): PrivateScope, Public, Static, HideBySig
    Condition(Expression, Expression, Expression): PrivateScope, Public, Static, HideBySig
    Constant(Object): PrivateScope, Public, Static, HideBySig
    Constant(Object, Type): PrivateScope, Public, Static, HideBySig
    Convert(Expression, Type): PrivateScope, Public, Static, HideBySig
    Convert(Expression, Type, MethodInfo): PrivateScope, Public, Static, HideBySig
    ConvertChecked(Expression, Type): PrivateScope, Public, Static, HideBySig
    ConvertChecked(Expression, Type, MethodInfo): PrivateScope, Public, Static, HideBySig
    Divide(Expression, Expression): PrivateScope, Public, Static, HideBySig
    Divide(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    Equal(Expression, Expression): PrivateScope, Public, Static, HideBySig
    Equal(Expression, Expression, Boolean, MethodInfo): PrivateScope, Public, Static, HideBySig
    ExclusiveOr(Expression, Expression): PrivateScope, Public, Static, HideBySig
    ExclusiveOr(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    Field(Expression, FieldInfo): PrivateScope, Public, Static, HideBySig
    Field(Expression, String): PrivateScope, Public, Static, HideBySig
    GreaterThanOrEqual(Expression, Expression): PrivateScope, Public, Static, HideBySig
    GreaterThanOrEqual(Expression, Expression, Boolean, MethodInfo): PrivateScope, Public, Static, HideBySig
    GreaterThan(Expression, Expression): PrivateScope, Public, Static, HideBySig
    GreaterThan(Expression, Expression, Boolean, MethodInfo): PrivateScope, Public, Static, HideBySig
    Invoke(Expression, Expression[]): PrivateScope, Public, Static, HideBySig
    Invoke(Expression, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Lambda(Expression, ParameterExpression[]): PrivateScope, Public, Static, HideBySig
    Lambda(Expression, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Lambda(Type, Expression, ParameterExpression[]): PrivateScope, Public, Static, HideBySig
    Lambda(Type, Expression, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Lambda(Expression, ParameterExpression[]): PrivateScope, Public, Static, HideBySig
    GetFuncType(Type[]): PrivateScope, Public, Static, HideBySig
    GetActionType(Type[]): PrivateScope, Public, Static, HideBySig
    LeftShift(Expression, Expression): PrivateScope, Public, Static, HideBySig
    LeftShift(Expression, Expression, MethodInfo): PrivateScope, Public, Static, HideBySig
    LessThan(Expression, Expression): PrivateScope, Public, Static, HideBySig
    LessThan(Expression, Expression, Boolean, MethodInfo): PrivateScope, Public, Static, HideBySig
    LessThanOrEqual(Expression, Expression): PrivateScope, Public, Static, HideBySig
    LessThanOrEqual(Expression, Expression, Boolean, MethodInfo): PrivateScope, Public, Static, HideBySig
    ValidateLift(IEnumerable`1, IEnumerable`1): PrivateScope, Assembly, Static, HideBySig
    ListInit(NewExpression, Expression[]): PrivateScope, Public, Static, HideBySig
    ListInit(NewExpression, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ListInit(NewExpression, MethodInfo, Expression[]): PrivateScope, Public, Static, HideBySig
    ListInit(NewExpression, MethodInfo, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ListInit(NewExpression, ElementInit[]): PrivateScope, Public, Static, HideBySig
    ListInit(NewExpression, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ElementInit(MethodInfo, Expression[]): PrivateScope, Public, Static, HideBySig
    ElementInit(MethodInfo, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ListBind(MemberInfo, ElementInit[]): PrivateScope, Public, Static, HideBySig
    ListBind(MemberInfo, IEnumerable`1): PrivateScope, Public, Static, HideBySig
Class System.Linq.Expressions.BinaryExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
    Void .ctor(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Type): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Type): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.LambdaExpression, System.Type): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Linq.Expressions.LambdaExpression, System.Type): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Linq.Expressions.Expression Left 'get ' : 
    System.Linq.Expressions.Expression Right 'get ' : 
    System.Reflection.MethodInfo Method 'get ' : 
    System.Linq.Expressions.LambdaExpression Conversion 'get ' : 
    Boolean IsLifted 'get ' : 
    Boolean IsLiftedToNull 'get ' : 
  Methods:
    get_Left(): PrivateScope, Public, HideBySig, SpecialName
    get_Right(): PrivateScope, Public, HideBySig, SpecialName
    get_Method(): PrivateScope, Public, HideBySig, SpecialName
    get_Conversion(): PrivateScope, Public, HideBySig, SpecialName
    get_IsLifted(): PrivateScope, Public, HideBySig, SpecialName
    get_IsLiftedToNull(): PrivateScope, Public, HideBySig, SpecialName
    BuildString(StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.Linq.Expressions.ConditionalExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
    Void .ctor(System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression, System.Type): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Linq.Expressions.Expression Test 'get ' : 
    System.Linq.Expressions.Expression IfTrue 'get ' : 
    System.Linq.Expressions.Expression IfFalse 'get ' : 
  Methods:
    get_Test(): PrivateScope, Public, HideBySig, SpecialName
    get_IfTrue(): PrivateScope, Public, HideBySig, SpecialName
    get_IfFalse(): PrivateScope, Public, HideBySig, SpecialName
    BuildString(StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Struct System.Linq.Expressions.MemberBindingType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Linq.Expressions.MemberBindingType Assignment = 0 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.MemberBindingType MemberBinding = 1 : Public, Static, Literal, HasDefault
    System.Linq.Expressions.MemberBindingType ListBinding = 2 : Public, Static, Literal, HasDefault
Class System.Linq.Expressions.MemberBinding: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Properties:
    System.Linq.Expressions.MemberBindingType BindingType 'get ' : 
    System.Reflection.MemberInfo Member 'get ' : 
  Methods:
    get_BindingType(): PrivateScope, Public, HideBySig, SpecialName
    get_Member(): PrivateScope, Public, HideBySig, SpecialName
    BuildString(StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Linq.Expressions.MemberAssignment: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.MemberBinding
    Void .ctor(System.Reflection.MemberInfo, System.Linq.Expressions.Expression): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Linq.Expressions.Expression Expression 'get ' : 
  Methods:
    get_Expression(): PrivateScope, Public, HideBySig, SpecialName
    BuildString(StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.Linq.Expressions.MemberMemberBinding: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.MemberBinding
    Void .ctor(System.Reflection.MemberInfo, System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.MemberBinding]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.MemberBinding] Bindings 'get ' : 
  Methods:
    get_Bindings(): PrivateScope, Public, HideBySig, SpecialName
    BuildString(StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.Linq.Expressions.MemberListBinding: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.MemberBinding
    Void .ctor(System.Reflection.MemberInfo, System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.ElementInit]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.ElementInit] Initializers 'get ' : 
  Methods:
    get_Initializers(): PrivateScope, Public, HideBySig, SpecialName
    BuildString(StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.Linq.Expressions.ElementInit: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
    Void .ctor(System.Reflection.MethodInfo, System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Reflection.MethodInfo AddMethod 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression] Arguments 'get ' : 
  Methods:
    get_AddMethod(): PrivateScope, Public, HideBySig, SpecialName
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    BuildString(StringBuilder): PrivateScope, Assembly, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Linq.Expressions.ConstantExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
    Void .ctor(System.Object, System.Type): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object Value 'get ' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    BuildString(StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.Linq.Expressions.InvocationExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
    Void .ctor(System.Linq.Expressions.Expression, System.Type, System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Linq.Expressions.Expression Expression 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression] Arguments 'get ' : 
  Methods:
    get_Expression(): PrivateScope, Public, HideBySig, SpecialName
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    BuildString(StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.Linq.Expressions.LambdaExpression: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :System.Linq.Expressions.Expression
    Void .ctor(System.Linq.Expressions.Expression, System.Type, System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.ParameterExpression]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Linq.Expressions.Expression Body 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.ParameterExpression] Parameters 'get ' : 
  Methods:
    get_Body(): PrivateScope, Public, HideBySig, SpecialName
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName
    BuildString(StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Compile(): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.Expression`1[TDelegate]: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Type parameter: TDelegate
  :System.Linq.Expressions.LambdaExpression
    Void .ctor(System.Linq.Expressions.Expression, System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.ParameterExpression]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Compile(): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.MemberExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
    Void .ctor(System.Linq.Expressions.Expression, System.Reflection.MemberInfo, System.Type): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Linq.Expressions.Expression Expression 'get ' : 
    System.Reflection.MemberInfo Member 'get ' : 
  Methods:
    get_Expression(): PrivateScope, Public, HideBySig, SpecialName
    get_Member(): PrivateScope, Public, HideBySig, SpecialName
    BuildString(StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.Linq.Expressions.MethodCallExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
    Void .ctor(System.Linq.Expressions.ExpressionType, System.Reflection.MethodInfo, System.Linq.Expressions.Expression, System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Reflection.MethodInfo Method 'get ' : 
    System.Linq.Expressions.Expression Object 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression] Arguments 'get ' : 
  Methods:
    get_Method(): PrivateScope, Public, HideBySig, SpecialName
    get_Object(): PrivateScope, Public, HideBySig, SpecialName
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    BuildString(StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.Linq.Expressions.NewExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
    Void .ctor(System.Type, System.Reflection.ConstructorInfo, System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Type, System.Reflection.ConstructorInfo, System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression], System.Collections.ObjectModel.ReadOnlyCollection`1[System.Reflection.MemberInfo]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Reflection.ConstructorInfo Constructor 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression] Arguments 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Reflection.MemberInfo] Members 'get ' : 
  Methods:
    get_Constructor(): PrivateScope, Public, HideBySig, SpecialName
    get_Arguments(): PrivateScope, Public, HideBySig, SpecialName
    get_Members(): PrivateScope, Public, HideBySig, SpecialName
    BuildString(StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.Linq.Expressions.NewArrayExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
    Void .ctor(System.Linq.Expressions.ExpressionType, System.Type, System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.Expression] Expressions 'get ' : 
  Methods:
    get_Expressions(): PrivateScope, Public, HideBySig, SpecialName
    BuildString(StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.Linq.Expressions.MemberInitExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
    Void .ctor(System.Linq.Expressions.NewExpression, System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.MemberBinding]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Linq.Expressions.NewExpression NewExpression 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.MemberBinding] Bindings 'get ' : 
  Methods:
    get_NewExpression(): PrivateScope, Public, HideBySig, SpecialName
    get_Bindings(): PrivateScope, Public, HideBySig, SpecialName
    BuildString(StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.Linq.Expressions.ListInitExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
    Void .ctor(System.Linq.Expressions.NewExpression, System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.ElementInit]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Linq.Expressions.NewExpression NewExpression 'get ' : 
    System.Collections.ObjectModel.ReadOnlyCollection`1[System.Linq.Expressions.ElementInit] Initializers 'get ' : 
  Methods:
    get_NewExpression(): PrivateScope, Public, HideBySig, SpecialName
    get_Initializers(): PrivateScope, Public, HideBySig, SpecialName
    BuildString(StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.Linq.Expressions.ParameterExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
    Void .ctor(System.Type, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Name 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    BuildString(StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.Linq.Expressions.TypeBinaryExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
    Void .ctor(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Type, System.Type): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Linq.Expressions.Expression Expression 'get ' : 
    System.Type TypeOperand 'get ' : 
  Methods:
    get_Expression(): PrivateScope, Public, HideBySig, SpecialName
    get_TypeOperand(): PrivateScope, Public, HideBySig, SpecialName
    BuildString(StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.Linq.Expressions.UnaryExpression: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Linq.Expressions.Expression
    Void .ctor(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Type): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Linq.Expressions.ExpressionType, System.Linq.Expressions.Expression, System.Reflection.MethodInfo, System.Type): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Linq.Expressions.Expression Operand 'get ' : 
    System.Reflection.MethodInfo Method 'get ' : 
    Boolean IsLifted 'get ' : 
    Boolean IsLiftedToNull 'get ' : 
  Methods:
    get_Operand(): PrivateScope, Public, HideBySig, SpecialName
    get_Method(): PrivateScope, Public, HideBySig, SpecialName
    get_IsLifted(): PrivateScope, Public, HideBySig, SpecialName
    get_IsLiftedToNull(): PrivateScope, Public, HideBySig, SpecialName
    BuildString(StringBuilder): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.Linq.Expressions.ReadOnlyCollectionExtensions: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ToReadOnlyCollection(IEnumerable`1): PrivateScope, Assembly, Static, HideBySig
Class System.Linq.Expressions.ExpressionCompiler: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Compile(Expression`1): PrivateScope, Public, HideBySig
    Compile(LambdaExpression): PrivateScope, Public, HideBySig
Class System.Linq.Expressions.ExpressionCompiler+LambdaInfo: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(System.Linq.Expressions.LambdaExpression, System.Reflection.MethodInfo, System.Collections.Generic.Dictionary`2[System.Linq.Expressions.ParameterExpression,System.Int32], System.Collections.Generic.List`1[System.Linq.Expressions.ExpressionCompiler+LambdaInfo]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Linq.Expressions.LambdaExpression Lambda : Assembly
    System.Collections.Generic.List`1[System.Linq.Expressions.ExpressionCompiler+LambdaInfo] Lambdas : Assembly
    System.Reflection.MethodInfo Method : Assembly
    System.Collections.Generic.Dictionary`2[System.Linq.Expressions.ParameterExpression,System.Int32] HoistedLocals : Assembly
Class System.Linq.Expressions.ExpressionVisitor: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    Visit(Expression): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    VisitBinding(MemberBinding): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    VisitElementInitializer(ElementInit): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    VisitUnary(UnaryExpression): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    VisitBinary(BinaryExpression): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    VisitTypeIs(TypeBinaryExpression): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    VisitConstant(ConstantExpression): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    VisitConditional(ConditionalExpression): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    VisitParameter(ParameterExpression): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    VisitMemberAccess(MemberExpression): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    VisitMethodCall(MethodCallExpression): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    VisitExpressionList(ReadOnlyCollection`1): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    VisitMemberAssignment(MemberAssignment): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    VisitMemberMemberBinding(MemberMemberBinding): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    VisitMemberListBinding(MemberListBinding): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    VisitBindingList(ReadOnlyCollection`1): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    VisitElementInitializerList(ReadOnlyCollection`1): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    VisitLambda(LambdaExpression): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    VisitNew(NewExpression): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    VisitMemberInit(MemberInitExpression): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    VisitListInit(ListInitExpression): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    VisitNewArray(NewArrayExpression): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
    VisitInvocation(InvocationExpression): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride
Class System.Linq.Expressions.Strings: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    System.String OwningTeam 'get ' : 
    System.String ArgumentMustBeArray 'get ' : 
    System.String ArgumentMustBeBoolean 'get ' : 
    System.String ArgumentMustBeComparable 'get ' : 
    System.String ArgumentMustBeConvertible 'get ' : 
    System.String ArgumentMustBeFieldInfoOrPropertInfo 'get ' : 
    System.String ArgumentMustBeFieldInfoOrPropertInfoOrMethod 'get ' : 
    System.String ArgumentMustBeInstanceMember 'get ' : 
    System.String ArgumentMustBeInteger 'get ' : 
    System.String ArgumentMustBeInt32 'get ' : 
    System.String ArgumentMustBeCheckable 'get ' : 
    System.String ArgumentMustBeArrayIndexType 'get ' : 
    System.String ArgumentMustBeIntegerOrBoolean 'get ' : 
    System.String ArgumentMustBeNumeric 'get ' : 
    System.String ArgumentMustBeSingleDimensionalArrayType 'get ' : 
    System.String ArgumentTypesMustMatch 'get ' : 
    System.String CoalesceUsedOnNonNullType 'get ' : 
    System.String IncorrectNumberOfIndexes 'get ' : 
    System.String IncorrectNumberOfLambdaArguments 'get ' : 
    System.String IncorrectNumberOfLambdaDeclarationParameters 'get ' : 
    System.String IncorrectNumberOfConstructorArguments 'get ' : 
    System.String IncorrectNumberOfMembersForGivenConstructor 'get ' : 
    System.String IncorrectNumberOfArgumentsForMembers 'get ' : 
    System.String LambdaParameterNotInScope 'get ' : 
    System.String LambdaTypeMustBeDerivedFromSystemDelegate 'get ' : 
    System.String ParameterNotCaptured 'get ' : 
    System.String ListInitializerWithZeroMembers 'get ' : 
    System.String ElementInitializerMethodNotAdd 'get ' : 
    System.String ElementInitializerMethodWithZeroArgs 'get ' : 
    System.String ElementInitializerMethodStatic 'get ' : 
    System.String UnexpectedCoalesceOperator 'get ' : 
    System.String UnhandledBinding 'get ' : 
    System.String UnknownBindingType 'get ' : 
    System.String IncorrectNumberOfTypeArgsForFunc 'get ' : 
    System.String IncorrectNumberOfTypeArgsForAction 'get ' : 
    System.String ExpressionMayNotContainByrefParameters 'get ' : 
    System.String ArgumentCannotBeOfTypeVoid 'get ' : 
  Methods:
    MethodWithArgsDoesNotExistOnType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    MethodWithMoreThanOneMatch(Object, Object): PrivateScope, Assembly, Static, HideBySig
    get_IncorrectNumberOfTypeArgsForFunc(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_IncorrectNumberOfTypeArgsForAction(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ExpressionMayNotContainByrefParameters(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ArgumentCannotBeOfTypeVoid(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_OwningTeam(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    UserDefinedOperatorMustBeStatic(Object): PrivateScope, Assembly, Static, HideBySig
    UserDefinedOperatorMustNotBeVoid(Object): PrivateScope, Assembly, Static, HideBySig
    CoercionOperatorNotDefined(Object, Object): PrivateScope, Assembly, Static, HideBySig
    UnaryOperatorNotDefined(Object, Object): PrivateScope, Assembly, Static, HideBySig
    BinaryOperatorNotDefined(Object, Object, Object): PrivateScope, Assembly, Static, HideBySig
    OperandTypesDoNotMatchParameters(Object, Object): PrivateScope, Assembly, Static, HideBySig
    get_ArgumentMustBeArray(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ArgumentMustBeBoolean(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ArgumentMustBeComparable(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ArgumentMustBeConvertible(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ArgumentMustBeFieldInfoOrPropertInfo(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ArgumentMustBeFieldInfoOrPropertInfoOrMethod(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ArgumentMustBeInstanceMember(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ArgumentMustBeInteger(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ArgumentMustBeInt32(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ArgumentMustBeCheckable(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ArgumentMustBeArrayIndexType(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ArgumentMustBeIntegerOrBoolean(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ArgumentMustBeNumeric(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ArgumentMustBeSingleDimensionalArrayType(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ArgumentTypesMustMatch(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    CannotAutoInitializeValueTypeElementThroughProperty(Object): PrivateScope, Assembly, Static, HideBySig
    CannotAutoInitializeValueTypeMemberThroughProperty(Object): PrivateScope, Assembly, Static, HideBySig
    CannotCastTypeToType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    IncorrectTypeForTypeAs(Object): PrivateScope, Assembly, Static, HideBySig
    get_CoalesceUsedOnNonNullType(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    ExpressionTypeCannotInitializeCollectionType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    ExpressionTypeCannotInitializeArrayType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    ExpressionTypeDoesNotMatchArrayType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    ExpressionTypeDoesNotMatchConstructorParameter(Object, Object): PrivateScope, Assembly, Static, HideBySig
    ArgumentTypeDoesNotMatchMember(Object, Object): PrivateScope, Assembly, Static, HideBySig
    ArgumentMemberNotDeclOnType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    ExpressionTypeDoesNotMatchMethodParameter(Object, Object, Object): PrivateScope, Assembly, Static, HideBySig
    ExpressionTypeDoesNotMatchParameter(Object, Object): PrivateScope, Assembly, Static, HideBySig
    ExpressionTypeDoesNotMatchReturn(Object, Object): PrivateScope, Assembly, Static, HideBySig
    ExpressionTypeNotInvocable(Object): PrivateScope, Assembly, Static, HideBySig
    FieldNotDefinedForType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    get_IncorrectNumberOfIndexes(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_IncorrectNumberOfLambdaArguments(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_IncorrectNumberOfLambdaDeclarationParameters(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    IncorrectNumberOfMethodCallArguments(Object): PrivateScope, Assembly, Static, HideBySig
    get_IncorrectNumberOfConstructorArguments(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_IncorrectNumberOfMembersForGivenConstructor(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_IncorrectNumberOfArgumentsForMembers(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_LambdaParameterNotInScope(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_LambdaTypeMustBeDerivedFromSystemDelegate(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    MemberNotFieldOrProperty(Object): PrivateScope, Assembly, Static, HideBySig
    MethodContainsGenericParameters(Object): PrivateScope, Assembly, Static, HideBySig
    MethodIsGeneric(Object): PrivateScope, Assembly, Static, HideBySig
    MethodNotPropertyAccessor(Object, Object): PrivateScope, Assembly, Static, HideBySig
    PropertyDoesNotHaveGetter(Object): PrivateScope, Assembly, Static, HideBySig
    PropertyDoesNotHaveSetter(Object): PrivateScope, Assembly, Static, HideBySig
    NotAMemberOfType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    OperatorNotImplementedForType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    ParameterExpressionNotValidAsDelegate(Object, Object): PrivateScope, Assembly, Static, HideBySig
    get_ParameterNotCaptured(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    PropertyNotDefinedForType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    MethodNotDefinedForType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    TypeContainsGenericParameters(Object): PrivateScope, Assembly, Static, HideBySig
    TypeIsGeneric(Object): PrivateScope, Assembly, Static, HideBySig
    TypeMissingDefaultConstructor(Object): PrivateScope, Assembly, Static, HideBySig
    get_ListInitializerWithZeroMembers(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ElementInitializerMethodNotAdd(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    ElementInitializerMethodNoRefOutParam(Object, Object): PrivateScope, Assembly, Static, HideBySig
    get_ElementInitializerMethodWithZeroArgs(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ElementInitializerMethodStatic(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    TypeNotIEnumerable(Object): PrivateScope, Assembly, Static, HideBySig
    TypeParameterIsNotDelegate(Object): PrivateScope, Assembly, Static, HideBySig
    get_UnexpectedCoalesceOperator(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    InvalidCast(Object, Object): PrivateScope, Assembly, Static, HideBySig
    UnhandledCall(Object): PrivateScope, Assembly, Static, HideBySig
    UnhandledBinary(Object): PrivateScope, Assembly, Static, HideBySig
    get_UnhandledBinding(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    UnhandledBindingType(Object): PrivateScope, Assembly, Static, HideBySig
    UnhandledConvert(Object): PrivateScope, Assembly, Static, HideBySig
    UnhandledConvertFromDecimal(Object): PrivateScope, Assembly, Static, HideBySig
    UnhandledConvertToDecimal(Object): PrivateScope, Assembly, Static, HideBySig
    UnhandledExpressionType(Object): PrivateScope, Assembly, Static, HideBySig
    UnhandledMemberAccess(Object): PrivateScope, Assembly, Static, HideBySig
    UnhandledUnary(Object): PrivateScope, Assembly, Static, HideBySig
    get_UnknownBindingType(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    LogicalOperatorMustHaveConsistentTypes(Object, Object): PrivateScope, Assembly, Static, HideBySig
    LogicalOperatorMustHaveBooleanOperators(Object, Object): PrivateScope, Assembly, Static, HideBySig
    MethodDoesNotExistOnType(Object, Object): PrivateScope, Assembly, Static, HideBySig
Class System.Linq.Expressions.Error: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    MethodWithMoreThanOneMatch(Object, Object): PrivateScope, Assembly, Static, HideBySig
    IncorrectNumberOfTypeArgsForFunc(): PrivateScope, Assembly, Static, HideBySig
    IncorrectNumberOfTypeArgsForAction(): PrivateScope, Assembly, Static, HideBySig
    ExpressionMayNotContainByrefParameters(): PrivateScope, Assembly, Static, HideBySig
    ArgumentCannotBeOfTypeVoid(): PrivateScope, Assembly, Static, HideBySig
    ArgumentNull(String): PrivateScope, Assembly, Static, HideBySig
    ArgumentOutOfRange(String): PrivateScope, Assembly, Static, HideBySig
    NotImplemented(): PrivateScope, Assembly, Static, HideBySig
    NotSupported(): PrivateScope, Assembly, Static, HideBySig
    UserDefinedOperatorMustBeStatic(Object): PrivateScope, Assembly, Static, HideBySig
    UserDefinedOperatorMustNotBeVoid(Object): PrivateScope, Assembly, Static, HideBySig
    CoercionOperatorNotDefined(Object, Object): PrivateScope, Assembly, Static, HideBySig
    UnaryOperatorNotDefined(Object, Object): PrivateScope, Assembly, Static, HideBySig
    BinaryOperatorNotDefined(Object, Object, Object): PrivateScope, Assembly, Static, HideBySig
    OperandTypesDoNotMatchParameters(Object, Object): PrivateScope, Assembly, Static, HideBySig
    ArgumentMustBeArray(): PrivateScope, Assembly, Static, HideBySig
    ArgumentMustBeBoolean(): PrivateScope, Assembly, Static, HideBySig
    ArgumentMustBeComparable(): PrivateScope, Assembly, Static, HideBySig
    ArgumentMustBeConvertible(): PrivateScope, Assembly, Static, HideBySig
    ArgumentMustBeFieldInfoOrPropertInfo(): PrivateScope, Assembly, Static, HideBySig
    ArgumentMustBeFieldInfoOrPropertInfoOrMethod(): PrivateScope, Assembly, Static, HideBySig
    ArgumentMustBeInstanceMember(): PrivateScope, Assembly, Static, HideBySig
    ArgumentMustBeInteger(): PrivateScope, Assembly, Static, HideBySig
    ArgumentMustBeInt32(): PrivateScope, Assembly, Static, HideBySig
    ArgumentMustBeCheckable(): PrivateScope, Assembly, Static, HideBySig
    ArgumentMustBeArrayIndexType(): PrivateScope, Assembly, Static, HideBySig
    ArgumentMustBeIntegerOrBoolean(): PrivateScope, Assembly, Static, HideBySig
    ArgumentMustBeNumeric(): PrivateScope, Assembly, Static, HideBySig
    ArgumentMustBeSingleDimensionalArrayType(): PrivateScope, Assembly, Static, HideBySig
    ArgumentTypesMustMatch(): PrivateScope, Assembly, Static, HideBySig
    CannotAutoInitializeValueTypeElementThroughProperty(Object): PrivateScope, Assembly, Static, HideBySig
    CannotAutoInitializeValueTypeMemberThroughProperty(Object): PrivateScope, Assembly, Static, HideBySig
    CannotCastTypeToType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    IncorrectTypeForTypeAs(Object): PrivateScope, Assembly, Static, HideBySig
    CoalesceUsedOnNonNullType(): PrivateScope, Assembly, Static, HideBySig
    ExpressionTypeCannotInitializeCollectionType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    ExpressionTypeCannotInitializeArrayType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    ExpressionTypeDoesNotMatchArrayType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    ExpressionTypeDoesNotMatchConstructorParameter(Object, Object): PrivateScope, Assembly, Static, HideBySig
    ArgumentTypeDoesNotMatchMember(Object, Object): PrivateScope, Assembly, Static, HideBySig
    ArgumentMemberNotDeclOnType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    ExpressionTypeDoesNotMatchMethodParameter(Object, Object, Object): PrivateScope, Assembly, Static, HideBySig
    ExpressionTypeDoesNotMatchParameter(Object, Object): PrivateScope, Assembly, Static, HideBySig
    ExpressionTypeDoesNotMatchReturn(Object, Object): PrivateScope, Assembly, Static, HideBySig
    ExpressionTypeNotInvocable(Object): PrivateScope, Assembly, Static, HideBySig
    FieldNotDefinedForType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    IncorrectNumberOfIndexes(): PrivateScope, Assembly, Static, HideBySig
    IncorrectNumberOfLambdaArguments(): PrivateScope, Assembly, Static, HideBySig
    IncorrectNumberOfLambdaDeclarationParameters(): PrivateScope, Assembly, Static, HideBySig
    IncorrectNumberOfMethodCallArguments(Object): PrivateScope, Assembly, Static, HideBySig
    IncorrectNumberOfConstructorArguments(): PrivateScope, Assembly, Static, HideBySig
    IncorrectNumberOfMembersForGivenConstructor(): PrivateScope, Assembly, Static, HideBySig
    IncorrectNumberOfArgumentsForMembers(): PrivateScope, Assembly, Static, HideBySig
    LambdaParameterNotInScope(): PrivateScope, Assembly, Static, HideBySig
    LambdaTypeMustBeDerivedFromSystemDelegate(): PrivateScope, Assembly, Static, HideBySig
    MemberNotFieldOrProperty(Object): PrivateScope, Assembly, Static, HideBySig
    MethodContainsGenericParameters(Object): PrivateScope, Assembly, Static, HideBySig
    MethodIsGeneric(Object): PrivateScope, Assembly, Static, HideBySig
    MethodNotPropertyAccessor(Object, Object): PrivateScope, Assembly, Static, HideBySig
    PropertyDoesNotHaveGetter(Object): PrivateScope, Assembly, Static, HideBySig
    PropertyDoesNotHaveSetter(Object): PrivateScope, Assembly, Static, HideBySig
    NotAMemberOfType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    OperatorNotImplementedForType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    ParameterExpressionNotValidAsDelegate(Object, Object): PrivateScope, Assembly, Static, HideBySig
    ParameterNotCaptured(): PrivateScope, Assembly, Static, HideBySig
    PropertyNotDefinedForType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    MethodNotDefinedForType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    TypeContainsGenericParameters(Object): PrivateScope, Assembly, Static, HideBySig
    TypeIsGeneric(Object): PrivateScope, Assembly, Static, HideBySig
    TypeMissingDefaultConstructor(Object): PrivateScope, Assembly, Static, HideBySig
    ListInitializerWithZeroMembers(): PrivateScope, Assembly, Static, HideBySig
    ElementInitializerMethodNotAdd(): PrivateScope, Assembly, Static, HideBySig
    ElementInitializerMethodNoRefOutParam(Object, Object): PrivateScope, Assembly, Static, HideBySig
    ElementInitializerMethodWithZeroArgs(): PrivateScope, Assembly, Static, HideBySig
    ElementInitializerMethodStatic(): PrivateScope, Assembly, Static, HideBySig
    TypeNotIEnumerable(Object): PrivateScope, Assembly, Static, HideBySig
    TypeParameterIsNotDelegate(Object): PrivateScope, Assembly, Static, HideBySig
    UnexpectedCoalesceOperator(): PrivateScope, Assembly, Static, HideBySig
    InvalidCast(Object, Object): PrivateScope, Assembly, Static, HideBySig
    UnhandledCall(Object): PrivateScope, Assembly, Static, HideBySig
    UnhandledBinary(Object): PrivateScope, Assembly, Static, HideBySig
    UnhandledBinding(): PrivateScope, Assembly, Static, HideBySig
    UnhandledBindingType(Object): PrivateScope, Assembly, Static, HideBySig
    UnhandledConvert(Object): PrivateScope, Assembly, Static, HideBySig
    UnhandledConvertFromDecimal(Object): PrivateScope, Assembly, Static, HideBySig
    UnhandledConvertToDecimal(Object): PrivateScope, Assembly, Static, HideBySig
    UnhandledExpressionType(Object): PrivateScope, Assembly, Static, HideBySig
    UnhandledMemberAccess(Object): PrivateScope, Assembly, Static, HideBySig
    UnhandledUnary(Object): PrivateScope, Assembly, Static, HideBySig
    UnknownBindingType(): PrivateScope, Assembly, Static, HideBySig
    LogicalOperatorMustHaveConsistentTypes(Object, Object): PrivateScope, Assembly, Static, HideBySig
    LogicalOperatorMustHaveBooleanOperators(Object, Object): PrivateScope, Assembly, Static, HideBySig
    MethodDoesNotExistOnType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    MethodWithArgsDoesNotExistOnType(Object, Object): PrivateScope, Assembly, Static, HideBySig
Interface System.Linq.IQueryable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.Collections.IEnumerable
  Properties:
    System.Linq.Expressions.Expression Expression 'get ' : 
    System.Type ElementType 'get ' : 
    System.Linq.IQueryProvider Provider 'get ' : 
  Methods:
    get_Expression(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_ElementType(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Provider(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface System.Linq.IQueryable`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T
  Interfaces:
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
    System.Linq.IQueryable
Interface System.Linq.IQueryProvider: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    CreateQuery(Expression): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    CreateQuery(Expression): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Execute(Expression): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Execute(Expression): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.Linq.IOrderedQueryable: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.Linq.IQueryable
    System.Collections.IEnumerable
Interface System.Linq.IOrderedQueryable`1[T]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: T
  Interfaces:
    System.Linq.IQueryable`1[T]
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
    System.Linq.IQueryable
    System.Linq.IOrderedQueryable
Class System.Linq.Queryable: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Average(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Aggregate(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Aggregate(IQueryable`1, TAccumulate, Expression`1): PrivateScope, Public, Static, HideBySig
    Aggregate(IQueryable`1, TAccumulate, Expression`1, Expression`1): PrivateScope, Public, Static, HideBySig
    FirstOrDefault(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Last(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Last(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    LastOrDefault(IQueryable`1): PrivateScope, Public, Static, HideBySig
    LastOrDefault(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Single(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Single(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    SingleOrDefault(IQueryable`1): PrivateScope, Public, Static, HideBySig
    SingleOrDefault(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    ElementAt(IQueryable`1, Int32): PrivateScope, Public, Static, HideBySig
    ElementAtOrDefault(IQueryable`1, Int32): PrivateScope, Public, Static, HideBySig
    DefaultIfEmpty(IQueryable`1): PrivateScope, Public, Static, HideBySig
    DefaultIfEmpty(IQueryable`1, TSource): PrivateScope, Public, Static, HideBySig
    Contains(IQueryable`1, TSource): PrivateScope, Public, Static, HideBySig
    Contains(IQueryable`1, TSource, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Reverse(IQueryable`1): PrivateScope, Public, Static, HideBySig
    SequenceEqual(IQueryable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    SequenceEqual(IQueryable`1, IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Any(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Any(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    All(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Count(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Count(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    LongCount(IQueryable`1): PrivateScope, Public, Static, HideBySig
    LongCount(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Min(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Min(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Max(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Max(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Sum(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Average(IQueryable`1): PrivateScope, Public, Static, HideBySig
    AsQueryable(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    AsQueryable(IEnumerable): PrivateScope, Public, Static, HideBySig
    Where(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Where(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    OfType(IQueryable): PrivateScope, Public, Static, HideBySig
    Cast(IQueryable): PrivateScope, Public, Static, HideBySig
    Select(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Select(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    SelectMany(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    SelectMany(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    SelectMany(IQueryable`1, Expression`1, Expression`1): PrivateScope, Public, Static, HideBySig
    SelectMany(IQueryable`1, Expression`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Join(IQueryable`1, IEnumerable`1, Expression`1, Expression`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Join(IQueryable`1, IEnumerable`1, Expression`1, Expression`1, Expression`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    GroupJoin(IQueryable`1, IEnumerable`1, Expression`1, Expression`1, Expression`1): PrivateScope, Public, Static, HideBySig
    GroupJoin(IQueryable`1, IEnumerable`1, Expression`1, Expression`1, Expression`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    OrderBy(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    OrderBy(IQueryable`1, Expression`1, IComparer`1): PrivateScope, Public, Static, HideBySig
    OrderByDescending(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    OrderByDescending(IQueryable`1, Expression`1, IComparer`1): PrivateScope, Public, Static, HideBySig
    ThenBy(IOrderedQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    ThenBy(IOrderedQueryable`1, Expression`1, IComparer`1): PrivateScope, Public, Static, HideBySig
    ThenByDescending(IOrderedQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    ThenByDescending(IOrderedQueryable`1, Expression`1, IComparer`1): PrivateScope, Public, Static, HideBySig
    Take(IQueryable`1, Int32): PrivateScope, Public, Static, HideBySig
    TakeWhile(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    TakeWhile(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    Skip(IQueryable`1, Int32): PrivateScope, Public, Static, HideBySig
    SkipWhile(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    SkipWhile(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IQueryable`1, Expression`1, Expression`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IQueryable`1, Expression`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IQueryable`1, Expression`1, Expression`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IQueryable`1, Expression`1, Expression`1, Expression`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IQueryable`1, Expression`1, Expression`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IQueryable`1, Expression`1, Expression`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IQueryable`1, Expression`1, Expression`1, Expression`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Distinct(IQueryable`1): PrivateScope, Public, Static, HideBySig
    Distinct(IQueryable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Concat(IQueryable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Union(IQueryable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Union(IQueryable`1, IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Intersect(IQueryable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Intersect(IQueryable`1, IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Except(IQueryable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Except(IQueryable`1, IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    First(IQueryable`1): PrivateScope, Public, Static, HideBySig
    First(IQueryable`1, Expression`1): PrivateScope, Public, Static, HideBySig
    FirstOrDefault(IQueryable`1): PrivateScope, Public, Static, HideBySig
Class System.Linq.Enumerable: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Max(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Average(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Empty(): PrivateScope, Public, Static, HideBySig
    Any(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Any(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    All(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Count(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Count(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    LongCount(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    LongCount(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Contains(IEnumerable`1, TSource): PrivateScope, Public, Static, HideBySig
    Contains(IEnumerable`1, TSource, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Aggregate(IEnumerable`1, Func`3): PrivateScope, Public, Static, HideBySig
    Aggregate(IEnumerable`1, TAccumulate, Func`3): PrivateScope, Public, Static, HideBySig
    Aggregate(IEnumerable`1, TAccumulate, Func`3, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Sum(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Min(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Max(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Distinct(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Distinct(IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Union(IEnumerable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Union(IEnumerable`1, IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Intersect(IEnumerable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Intersect(IEnumerable`1, IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Except(IEnumerable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Except(IEnumerable`1, IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Reverse(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    SequenceEqual(IEnumerable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
    SequenceEqual(IEnumerable`1, IEnumerable`1, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    AsEnumerable(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ToArray(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ToList(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    ToDictionary(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    ToDictionary(IEnumerable`1, Func`2, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    ToDictionary(IEnumerable`1, Func`2, Func`2): PrivateScope, Public, Static, HideBySig
    ToDictionary(IEnumerable`1, Func`2, Func`2, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    ToLookup(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    ToLookup(IEnumerable`1, Func`2, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    ToLookup(IEnumerable`1, Func`2, Func`2): PrivateScope, Public, Static, HideBySig
    ToLookup(IEnumerable`1, Func`2, Func`2, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    DefaultIfEmpty(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    DefaultIfEmpty(IEnumerable`1, TSource): PrivateScope, Public, Static, HideBySig
    OfType(IEnumerable): PrivateScope, Public, Static, HideBySig
    Cast(IEnumerable): PrivateScope, Public, Static, HideBySig
    First(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    First(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    FirstOrDefault(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    FirstOrDefault(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Last(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Last(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    LastOrDefault(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    LastOrDefault(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Single(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    Single(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    SingleOrDefault(IEnumerable`1): PrivateScope, Public, Static, HideBySig
    SingleOrDefault(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    ElementAt(IEnumerable`1, Int32): PrivateScope, Public, Static, HideBySig
    ElementAtOrDefault(IEnumerable`1, Int32): PrivateScope, Public, Static, HideBySig
    Range(Int32, Int32): PrivateScope, Public, Static, HideBySig
    Repeat(TResult, Int32): PrivateScope, Public, Static, HideBySig
    Where(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Where(IEnumerable`1, Func`3): PrivateScope, Public, Static, HideBySig
    Select(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    Select(IEnumerable`1, Func`3): PrivateScope, Public, Static, HideBySig
    SelectMany(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    SelectMany(IEnumerable`1, Func`3): PrivateScope, Public, Static, HideBySig
    SelectMany(IEnumerable`1, Func`3, Func`3): PrivateScope, Public, Static, HideBySig
    SelectMany(IEnumerable`1, Func`2, Func`3): PrivateScope, Public, Static, HideBySig
    Take(IEnumerable`1, Int32): PrivateScope, Public, Static, HideBySig
    TakeWhile(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    TakeWhile(IEnumerable`1, Func`3): PrivateScope, Public, Static, HideBySig
    Skip(IEnumerable`1, Int32): PrivateScope, Public, Static, HideBySig
    SkipWhile(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    SkipWhile(IEnumerable`1, Func`3): PrivateScope, Public, Static, HideBySig
    Join(IEnumerable`1, IEnumerable`1, Func`2, Func`2, Func`3): PrivateScope, Public, Static, HideBySig
    Join(IEnumerable`1, IEnumerable`1, Func`2, Func`2, Func`3, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    GroupJoin(IEnumerable`1, IEnumerable`1, Func`2, Func`2, Func`3): PrivateScope, Public, Static, HideBySig
    GroupJoin(IEnumerable`1, IEnumerable`1, Func`2, Func`2, Func`3, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    OrderBy(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    OrderBy(IEnumerable`1, Func`2, IComparer`1): PrivateScope, Public, Static, HideBySig
    OrderByDescending(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    OrderByDescending(IEnumerable`1, Func`2, IComparer`1): PrivateScope, Public, Static, HideBySig
    ThenBy(IOrderedEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    ThenBy(IOrderedEnumerable`1, Func`2, IComparer`1): PrivateScope, Public, Static, HideBySig
    ThenByDescending(IOrderedEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    ThenByDescending(IOrderedEnumerable`1, Func`2, IComparer`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IEnumerable`1, Func`2): PrivateScope, Public, Static, HideBySig
    GroupBy(IEnumerable`1, Func`2, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IEnumerable`1, Func`2, Func`2): PrivateScope, Public, Static, HideBySig
    GroupBy(IEnumerable`1, Func`2, Func`2, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IEnumerable`1, Func`2, Func`3): PrivateScope, Public, Static, HideBySig
    GroupBy(IEnumerable`1, Func`2, Func`2, Func`3): PrivateScope, Public, Static, HideBySig
    GroupBy(IEnumerable`1, Func`2, Func`3, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    GroupBy(IEnumerable`1, Func`2, Func`2, Func`3, IEqualityComparer`1): PrivateScope, Public, Static, HideBySig
    Concat(IEnumerable`1, IEnumerable`1): PrivateScope, Public, Static, HideBySig
Class System.Linq.EmptyEnumerable`1[TElement]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: TElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Collections.Generic.IEnumerable`1[TElement] Instance 'get ' : 
  Methods:
    get_Instance(): PrivateScope, Public, Static, HideBySig, SpecialName
Class System.Linq.IdentityFunction`1[TElement]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: TElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Func`2[TElement,TElement] Instance 'get ' : 
  Methods:
    get_Instance(): PrivateScope, Public, Static, HideBySig, SpecialName
Interface System.Linq.IOrderedEnumerable`1[TElement]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: TElement
  Interfaces:
    System.Collections.Generic.IEnumerable`1[TElement]
    System.Collections.IEnumerable
  Methods:
    CreateOrderedEnumerable(Func`2, IComparer`1, Boolean): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface System.Linq.IGrouping`2[TKey,TElement]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: TKey
  Type parameter: TElement
  Interfaces:
    System.Collections.Generic.IEnumerable`1[TElement]
    System.Collections.IEnumerable
  Properties:
    TKey Key   'get ' : 
  Methods:
    get_Key(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Interface System.Linq.ILookup`2[TKey,TElement]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: TKey
  Type parameter: TElement
  Interfaces:
    System.Collections.Generic.IEnumerable`1[System.Linq.IGrouping`2[TKey,TElement]]
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    System.Collections.Generic.IEnumerable`1[TElement] Item [TKey] 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Item(TKey): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Contains(TKey): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Linq.Lookup`2[TKey,TElement]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TElement
  Interfaces:
    System.Linq.ILookup`2[TKey,TElement]
    System.Collections.Generic.IEnumerable`1[System.Linq.IGrouping`2[TKey,TElement]]
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    System.Collections.Generic.IEnumerable`1[TElement] Item [TKey] 'get ' : 
  Methods:
    Create(IEnumerable`1, Func`2, Func`2, IEqualityComparer`1): PrivateScope, Assembly, Static, HideBySig
    CreateForJoin(IEnumerable`1, Func`2, IEqualityComparer`1): PrivateScope, Assembly, Static, HideBySig
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Item(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Contains(TKey): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ApplyResultSelector(Func`3): PrivateScope, Public, HideBySig
    InternalGetHashCode(TKey): PrivateScope, Assembly, HideBySig
    GetGrouping(TKey, Boolean): PrivateScope, Assembly, HideBySig
Class System.Linq.Lookup`2+Grouping[TKey,TElement]: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Linq.IGrouping`2[TKey,TElement]
    System.Collections.Generic.IEnumerable`1[TElement]
    System.Collections.IEnumerable
    System.Collections.Generic.IList`1[TElement]
    System.Collections.Generic.ICollection`1[TElement]
  Fields:
    TKey key : Assembly
    Int32 hashCode : Assembly
    TElement[] elements : Assembly
    Int32 count : Assembly
    Grouping hashNext : Assembly
    Grouping next : Assembly
  Properties:
    TKey Key   'get ' : 
  Methods:
    Add(TElement): PrivateScope, Assembly, HideBySig
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Key(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class System.Linq.Set`1[TElement]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: TElement
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEqualityComparer`1[TElement]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Add(TElement): PrivateScope, Public, HideBySig
    Contains(TElement): PrivateScope, Public, HideBySig
    Remove(TElement): PrivateScope, Public, HideBySig
    InternalGetHashCode(TElement): PrivateScope, Assembly, HideBySig
Struct System.Linq.Set`1+Slot[TElement]: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: TElement
  :System.ValueType
  Fields:
    Int32 hashCode : Assembly
    TElement value : Assembly
    Int32 next : Assembly
Class System.Linq.GroupedEnumerable`4[TSource,TKey,TElement,TResult]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: TSource
  Type parameter: TKey
  Type parameter: TElement
  Type parameter: TResult
    Void .ctor(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TKey], System.Func`2[TSource,TElement], System.Func`3[TKey,System.Collections.Generic.IEnumerable`1[TElement],TResult], System.Collections.Generic.IEqualityComparer`1[TKey]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[TResult]
    System.Collections.IEnumerable
  Methods:
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Linq.GroupedEnumerable`3[TSource,TKey,TElement]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: TSource
  Type parameter: TKey
  Type parameter: TElement
    Void .ctor(System.Collections.Generic.IEnumerable`1[TSource], System.Func`2[TSource,TKey], System.Func`2[TSource,TElement], System.Collections.Generic.IEqualityComparer`1[TKey]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[System.Linq.IGrouping`2[TKey,TElement]]
    System.Collections.IEnumerable
  Methods:
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Linq.OrderedEnumerable`1[TElement]: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Type parameter: TElement
  Interfaces:
    System.Linq.IOrderedEnumerable`1[TElement]
    System.Collections.Generic.IEnumerable`1[TElement]
    System.Collections.IEnumerable
  Fields:
    System.Collections.Generic.IEnumerable`1[TElement] source : Assembly
  Methods:
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetEnumerableSorter(EnumerableSorter`1): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
Class System.Linq.OrderedEnumerable`2[TElement,TKey]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: TElement
  Type parameter: TKey
  :System.Linq.OrderedEnumerable`1[TElement]
    Void .ctor(System.Collections.Generic.IEnumerable`1[TElement], System.Func`2[TElement,TKey], System.Collections.Generic.IComparer`1[TKey], Boolean): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Linq.OrderedEnumerable`1[TElement] parent : Assembly
    System.Func`2[TElement,TKey] keySelector : Assembly
    System.Collections.Generic.IComparer`1[TKey] comparer : Assembly
    Boolean descending : Assembly
  Methods:
    GetEnumerableSorter(EnumerableSorter`1): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Class System.Linq.EnumerableSorter`1[TElement]: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Type parameter: TElement
  Methods:
    ComputeKeys(TElement[], Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    CompareKeys(Int32, Int32): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Sort(TElement[], Int32): PrivateScope, Assembly, HideBySig
Class System.Linq.EnumerableSorter`2[TElement,TKey]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: TElement
  Type parameter: TKey
  :System.Linq.EnumerableSorter`1[TElement]
    Void .ctor(System.Func`2[TElement,TKey], System.Collections.Generic.IComparer`1[TKey], Boolean, System.Linq.EnumerableSorter`1[TElement]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Func`2[TElement,TKey] keySelector : Assembly
    System.Collections.Generic.IComparer`1[TKey] comparer : Assembly
    Boolean descending : Assembly
    System.Linq.EnumerableSorter`1[TElement] next : Assembly
    TKey[] keys : Assembly
  Methods:
    ComputeKeys(TElement[], Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    CompareKeys(Int32, Int32): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
Struct System.Linq.Buffer`1[TElement]: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: TElement
  :System.ValueType
    Void .ctor(System.Collections.Generic.IEnumerable`1[TElement]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    TElement[] items : Assembly
    Int32 count : Assembly
  Methods:
    ToArray(): PrivateScope, Assembly, HideBySig
Class System.Linq.SystemCore_EnumerableDebugView`1[T]: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Type parameter: T
    Void .ctor(System.Collections.Generic.IEnumerable`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    T[] Items  'get ' : 
  Methods:
    get_Items(): PrivateScope, Public, HideBySig, SpecialName
Class System.Linq.SystemCore_EnumerableDebugViewEmptyException: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Empty 'get ' : 
  Methods:
    get_Empty(): PrivateScope, Public, HideBySig, SpecialName
Class System.Linq.SystemCore_EnumerableDebugView: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.Collections.IEnumerable): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Object[] Items 'get ' : 
  Methods:
    get_Items(): PrivateScope, Public, HideBySig, SpecialName
Class System.Linq.EnumerableQuery: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Properties:
    System.Linq.Expressions.Expression Expression 'get ' : 
    System.Collections.IEnumerable Enumerable 'get ' : 
  Methods:
    get_Expression(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract, SpecialName
    get_Enumerable(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract, SpecialName
    Create(Type, IEnumerable): PrivateScope, Assembly, Static, HideBySig
    Create(Type, Expression): PrivateScope, Assembly, Static, HideBySig
Class System.Linq.EnumerableQuery`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T
  :System.Linq.EnumerableQuery
    Void .ctor(System.Collections.Generic.IEnumerable`1[T]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Linq.Expressions.Expression): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Linq.IOrderedQueryable`1[T]
    System.Linq.IQueryable`1[T]
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
    System.Linq.IQueryable
    System.Linq.IOrderedQueryable
    System.Linq.IQueryProvider
  Properties:
    System.Linq.Expressions.Expression Expression 'get ' : 
    System.Collections.IEnumerable Enumerable 'get ' : 
  Methods:
    get_Expression(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    get_Enumerable(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Linq.EnumerableExecutor: AutoLayout, AnsiClass, Class, Abstract, BeforeFieldInit
  Methods:
    ExecuteBoxed(): PrivateScope, Assembly, Virtual, HideBySig, VtableLayoutMask, CheckAccessOnOverride, Abstract
    Create(Expression): PrivateScope, Assembly, Static, HideBySig
Class System.Linq.EnumerableExecutor`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T
  :System.Linq.EnumerableExecutor
    Void .ctor(System.Linq.Expressions.Expression): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    ExecuteBoxed(): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    Execute(): PrivateScope, Assembly, HideBySig
Class System.Linq.EnumerableRewriter: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.Linq.Expressions.ExpressionVisitor
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    VisitMethodCall(MethodCallExpression): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    VisitLambda(LambdaExpression): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    VisitConstant(ConstantExpression): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    VisitParameter(ParameterExpression): PrivateScope, Assembly, Virtual, HideBySig, CheckAccessOnOverride
    FindMethod(Type, String, ReadOnlyCollection`1, Type[], BindingFlags): PrivateScope, Assembly, Static, HideBySig
Class System.Linq.TypeHelper: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    IsEnumerableType(Type): PrivateScope, Assembly, Static, HideBySig
    IsKindOfGeneric(Type, Type): PrivateScope, Assembly, Static, HideBySig
    GetElementType(Type): PrivateScope, Assembly, Static, HideBySig
    FindGenericType(Type, Type): PrivateScope, Assembly, Static, HideBySig
    IsNullableType(Type): PrivateScope, Assembly, Static, HideBySig
    GetNonNullableType(Type): PrivateScope, Assembly, Static, HideBySig
Class System.Linq.Strings: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    System.String OwningTeam 'get ' : 
    System.String IncompatibleElementTypes 'get ' : 
    System.String MoreThanOneElement 'get ' : 
    System.String MoreThanOneMatch 'get ' : 
    System.String NoElements 'get ' : 
    System.String NoMatch 'get ' : 
    System.String EmptyEnumerable 'get ' : 
  Methods:
    get_OwningTeam(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    ArgumentArrayHasTooManyElements(Object): PrivateScope, Assembly, Static, HideBySig
    ArgumentNotIEnumerableGeneric(Object): PrivateScope, Assembly, Static, HideBySig
    ArgumentNotSequence(Object): PrivateScope, Assembly, Static, HideBySig
    ArgumentNotValid(Object): PrivateScope, Assembly, Static, HideBySig
    get_IncompatibleElementTypes(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    ArgumentNotLambda(Object): PrivateScope, Assembly, Static, HideBySig
    get_MoreThanOneElement(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_MoreThanOneMatch(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    NoArgumentMatchingMethodsInQueryable(Object): PrivateScope, Assembly, Static, HideBySig
    get_NoElements(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_NoMatch(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    NoMethodOnType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    NoMethodOnTypeMatchingArguments(Object, Object): PrivateScope, Assembly, Static, HideBySig
    NoNameMatchingMethodsInQueryable(Object): PrivateScope, Assembly, Static, HideBySig
    get_EmptyEnumerable(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Class System.Linq.Error: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    ArgumentArrayHasTooManyElements(Object): PrivateScope, Assembly, Static, HideBySig
    ArgumentNotIEnumerableGeneric(Object): PrivateScope, Assembly, Static, HideBySig
    ArgumentNotSequence(Object): PrivateScope, Assembly, Static, HideBySig
    ArgumentNotValid(Object): PrivateScope, Assembly, Static, HideBySig
    IncompatibleElementTypes(): PrivateScope, Assembly, Static, HideBySig
    ArgumentNotLambda(Object): PrivateScope, Assembly, Static, HideBySig
    MoreThanOneElement(): PrivateScope, Assembly, Static, HideBySig
    MoreThanOneMatch(): PrivateScope, Assembly, Static, HideBySig
    NoArgumentMatchingMethodsInQueryable(Object): PrivateScope, Assembly, Static, HideBySig
    NoElements(): PrivateScope, Assembly, Static, HideBySig
    NoMatch(): PrivateScope, Assembly, Static, HideBySig
    NoMethodOnType(Object, Object): PrivateScope, Assembly, Static, HideBySig
    NoMethodOnTypeMatchingArguments(Object, Object): PrivateScope, Assembly, Static, HideBySig
    NoNameMatchingMethodsInQueryable(Object): PrivateScope, Assembly, Static, HideBySig
    ArgumentNull(String): PrivateScope, Assembly, Static, HideBySig
    ArgumentOutOfRange(String): PrivateScope, Assembly, Static, HideBySig
    NotImplemented(): PrivateScope, Assembly, Static, HideBySig
    NotSupported(): PrivateScope, Assembly, Static, HideBySig
Class System.Runtime.CompilerServices.ExtensionAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Interface System.Runtime.CompilerServices.IStrongBox: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    System.Object Value 'get set' : 
  Methods:
    get_Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Value(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class System.Runtime.CompilerServices.StrongBox`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T
    Void .ctor(T): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.CompilerServices.IStrongBox
  Fields:
    T Value : Public
Class System.Runtime.CompilerServices.ExecutionScope: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Runtime.CompilerServices.ExecutionScope, LambdaInfo, System.Object[], System.Object[]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Runtime.CompilerServices.ExecutionScope Parent : Public
    System.Object[] Globals : Public
    System.Object[] Locals : Public
  Methods:
    CreateHoistedLocals(): PrivateScope, Public, HideBySig
    CreateDelegate(Int32, Object[]): PrivateScope, Public, HideBySig
    IsolateExpression(Expression, Object[]): PrivateScope, Public, HideBySig
Class Microsoft.Win32.SafeHandles.SafeBCryptAlgorithmHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
Class Microsoft.Win32.SafeHandles.SafeBCryptHashHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  Properties:
    IntPtr HashObject 'get set' : 
  Methods:
    get_HashObject(): PrivateScope, Assembly, HideBySig, SpecialName
    set_HashObject(IntPtr): PrivateScope, Assembly, HideBySig, SpecialName
Class Microsoft.Win32.SafeHandles.SafeAxlBufferHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
Class Microsoft.Win32.SafeHandles.SafeCapiHashHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  Properties:
    Microsoft.Win32.SafeHandles.SafeCapiHashHandle InvalidHandle 'get ' : 
  Methods:
    get_InvalidHandle(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Microsoft.Win32.SafeHandles.SafeCapiKeyHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  Properties:
    Microsoft.Win32.SafeHandles.SafeCapiKeyHandle InvalidHandle 'get ' : 
  Methods:
    get_InvalidHandle(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    Duplicate(): PrivateScope, Assembly, HideBySig
    SetCsp(SafeCspHandle): PrivateScope, Assembly, HideBySig
    SetCsp(IntPtr): PrivateScope, Assembly, HideBySig
Class Microsoft.Win32.SafeHandles.SafeCspHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  Methods:
    Duplicate(): PrivateScope, Public, HideBySig
Class Microsoft.Win32.SafeHandles.SafeNCryptHandle: AutoLayout, AnsiClass, Class, Public, Abstract, HasSecurity, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  Methods:
    Duplicate(): PrivateScope, Assembly, HideBySig
Class Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeNCryptHandle
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Duplicate(): PrivateScope, Assembly, HideBySig
Class Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeNCryptHandle
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Duplicate(): PrivateScope, Assembly, HideBySig
    SetHandleValue(IntPtr): PrivateScope, Assembly, HideBySig
Class Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeNCryptHandle
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct System.Security.ManifestKinds: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.ManifestKinds None = 0 : Public, Static, Literal, HasDefault
    System.Security.ManifestKinds Deployment = 1 : Public, Static, Literal, HasDefault
    System.Security.ManifestKinds Application = 2 : Public, Static, Literal, HasDefault
    System.Security.ManifestKinds ApplicationAndDeployment = 3 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.Aes: AutoLayout, AnsiClass, Class, Public, Abstract, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.SymmetricAlgorithm
  Methods:
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
Class System.Security.Cryptography.AesCryptoServiceProvider: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.Aes
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Byte[] Key 'get set' : 
    Int32 KeySize 'get set' : 
  Methods:
    get_Key(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Key(Byte[]): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_KeySize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_KeySize(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    CreateDecryptor(): PrivateScope, Public, Virtual, HideBySig
    CreateDecryptor(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig
    CreateEncryptor(): PrivateScope, Public, Virtual, HideBySig
    CreateEncryptor(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig
    GenerateKey(): PrivateScope, Public, Virtual, HideBySig
    GenerateIV(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.AesManaged: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.Aes
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 FeedbackSize 'get set' : 
    Byte[] IV  'get set' : 
    Byte[] Key 'get set' : 
    Int32 KeySize 'get set' : 
    System.Security.Cryptography.CipherMode Mode 'get set' : 
    System.Security.Cryptography.PaddingMode Padding 'get set' : 
  Methods:
    get_FeedbackSize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_FeedbackSize(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_IV(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_IV(Byte[]): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Key(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Key(Byte[]): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_KeySize(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_KeySize(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Mode(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Mode(CipherMode): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Padding(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Padding(PaddingMode): PrivateScope, Public, Virtual, HideBySig, SpecialName
    CreateDecryptor(): PrivateScope, Public, Virtual, HideBySig
    CreateDecryptor(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig
    CreateEncryptor(): PrivateScope, Public, Virtual, HideBySig
    CreateEncryptor(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig
    GenerateIV(): PrivateScope, Public, Virtual, HideBySig
    GenerateKey(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.BCryptNative: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    Boolean BCryptSupported 'get ' : 
  Methods:
    get_BCryptSupported(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    GetInt32Property(T, String): PrivateScope, Assembly, Static, HideBySig
    GetProperty(T, String): PrivateScope, Assembly, Static, HideBySig
    MapAlgorithmIdToMagic(String, KeyBlobMagicNumber&(Out), Int32&(Out)): PrivateScope, Assembly, Static, HideBySig
    OpenAlgorithm(String, String): PrivateScope, Assembly, Static, HideBySig
Class System.Security.Cryptography.BCryptNative+AlgorithmName: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String ECDHP256 = ECDH_P256 : Public, Static, Literal, HasDefault
    System.String ECDHP384 = ECDH_P384 : Public, Static, Literal, HasDefault
    System.String ECDHP521 = ECDH_P521 : Public, Static, Literal, HasDefault
    System.String ECDsaP256 = ECDSA_P256 : Public, Static, Literal, HasDefault
    System.String ECDsaP384 = ECDSA_P384 : Public, Static, Literal, HasDefault
    System.String ECDsaP521 = ECDSA_P521 : Public, Static, Literal, HasDefault
    System.String MD5 = MD5 : Public, Static, Literal, HasDefault
    System.String Sha1 = SHA1 : Public, Static, Literal, HasDefault
    System.String Sha256 = SHA256 : Public, Static, Literal, HasDefault
    System.String Sha384 = SHA384 : Public, Static, Literal, HasDefault
    System.String Sha512 = SHA512 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.BCryptNative+ErrorCode: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ErrorCode Success = 0 : Public, Static, Literal, HasDefault
    ErrorCode BufferToSmall = -1073741789 : Public, Static, Literal, HasDefault
    ErrorCode ObjectNameNotFound = -1073741772 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.BCryptNative+HashPropertyName: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String HashLength = HashDigestLength : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.BCryptNative+KeyBlobMagicNumber: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    KeyBlobMagicNumber ECDHPublicP256 = 827016005 : Public, Static, Literal, HasDefault
    KeyBlobMagicNumber ECDHPublicP384 = 860570437 : Public, Static, Literal, HasDefault
    KeyBlobMagicNumber ECDHPublicP521 = 894124869 : Public, Static, Literal, HasDefault
    KeyBlobMagicNumber ECDsaPublicP256 = 827540293 : Public, Static, Literal, HasDefault
    KeyBlobMagicNumber ECDsaPublicP384 = 861094725 : Public, Static, Literal, HasDefault
    KeyBlobMagicNumber ECDsaPublicP521 = 894649157 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.BCryptNative+KeyDerivationFunction: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String Hash = HASH : Public, Static, Literal, HasDefault
    System.String Hmac = HMAC : Public, Static, Literal, HasDefault
    System.String Tls = TLS_PRF : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.BCryptNative+ProviderName: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String MicrosoftPrimitiveProvider = Microsoft Primitive Provider : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.BCryptNative+ObjectPropertyName: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String ObjectLength = ObjectLength : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.BCryptNative+UnsafeNativeMethods: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, HasSecurity, BeforeFieldInit
  Methods:
    BCryptCreateHash(SafeBCryptAlgorithmHandle, SafeBCryptHashHandle&(Out), IntPtr, Int32, IntPtr, Int32, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    BCryptGetProperty(SafeBCryptAlgorithmHandle, String, Byte[](In, Out, HasFieldMarshal), Int32, Int32&(In, Out), Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    BCryptGetAlgorithmProperty(SafeBCryptAlgorithmHandle, String, Byte[](In, Out, HasFieldMarshal), Int32, Int32&(In, Out), Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    BCryptGetHashProperty(SafeBCryptHashHandle, String, Byte[](In, Out, HasFieldMarshal), Int32, Int32&(In, Out), Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    BCryptFinishHash(SafeBCryptHashHandle, Byte[](Out, HasFieldMarshal), Int32, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    BCryptHashData(SafeBCryptHashHandle, Byte[](In, HasFieldMarshal), Int32, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    BCryptOpenAlgorithmProvider(SafeBCryptAlgorithmHandle&(Out), String, String, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
Class System.Security.Cryptography.BCryptHashAlgorithm: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.Security.Cryptography.CngAlgorithm, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Initialize(): PrivateScope, Public, HideBySig
    HashCore(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    HashFinal(): PrivateScope, Public, HideBySig
    HashStream(Stream): PrivateScope, Public, HideBySig
Class System.Security.Cryptography.CngAlgorithm: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, HasSecurity, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[System.Security.Cryptography.CngAlgorithm]
  Properties:
    System.String Algorithm 'get ' : 
    System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP256 'get ' : 
    System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP384 'get ' : 
    System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP521 'get ' : 
    System.Security.Cryptography.CngAlgorithm ECDsaP256 'get ' : 
    System.Security.Cryptography.CngAlgorithm ECDsaP384 'get ' : 
    System.Security.Cryptography.CngAlgorithm ECDsaP521 'get ' : 
    System.Security.Cryptography.CngAlgorithm MD5 'get ' : 
    System.Security.Cryptography.CngAlgorithm Sha1 'get ' : 
    System.Security.Cryptography.CngAlgorithm Sha256 'get ' : 
    System.Security.Cryptography.CngAlgorithm Sha384 'get ' : 
    System.Security.Cryptography.CngAlgorithm Sha512 'get ' : 
  Methods:
    get_Algorithm(): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(CngAlgorithm, CngAlgorithm): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(CngAlgorithm, CngAlgorithm): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(CngAlgorithm): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_ECDiffieHellmanP256(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ECDiffieHellmanP384(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ECDiffieHellmanP521(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ECDsaP256(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ECDsaP384(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ECDsaP521(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MD5(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Sha1(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Sha256(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Sha384(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Sha512(): PrivateScope, Public, Static, HideBySig, SpecialName
Class System.Security.Cryptography.CngAlgorithmGroup: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, HasSecurity, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[System.Security.Cryptography.CngAlgorithmGroup]
  Properties:
    System.String AlgorithmGroup 'get ' : 
    System.Security.Cryptography.CngAlgorithmGroup DiffieHellman 'get ' : 
    System.Security.Cryptography.CngAlgorithmGroup Dsa 'get ' : 
    System.Security.Cryptography.CngAlgorithmGroup ECDiffieHellman 'get ' : 
    System.Security.Cryptography.CngAlgorithmGroup ECDsa 'get ' : 
    System.Security.Cryptography.CngAlgorithmGroup Rsa 'get ' : 
  Methods:
    get_AlgorithmGroup(): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(CngAlgorithmGroup, CngAlgorithmGroup): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(CngAlgorithmGroup, CngAlgorithmGroup): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(CngAlgorithmGroup): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_DiffieHellman(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Dsa(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ECDiffieHellman(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_ECDsa(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Rsa(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct System.Security.Cryptography.CngKeyHandleOpenOptions: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.CngKeyHandleOpenOptions None = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngKeyHandleOpenOptions EphemeralKey = 1 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.CngKey: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Properties:
    System.Security.Cryptography.CngAlgorithmGroup AlgorithmGroup 'get ' : 
    System.Security.Cryptography.CngAlgorithm Algorithm 'get ' : 
    System.Security.Cryptography.CngExportPolicies ExportPolicy 'get ' : 
    Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle Handle 'get ' : 
    Boolean IsEphemeral 'get set' : 
    Boolean IsMachineKey 'get ' : 
    System.String KeyName 'get ' : 
    Int32 KeySize 'get ' : 
    System.Security.Cryptography.CngKeyUsages KeyUsage 'get ' : 
    IntPtr ParentWindowHandle 'get set' : 
    System.Security.Cryptography.CngProvider Provider 'get ' : 
    Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle ProviderHandle 'get ' : 
    System.String UniqueName 'get ' : 
    System.Security.Cryptography.CngUIPolicy UIPolicy 'get ' : 
  Methods:
    get_AlgorithmGroup(): PrivateScope, Public, HideBySig, SpecialName
    get_Algorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_ExportPolicy(): PrivateScope, Public, HideBySig, SpecialName
    get_Handle(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    get_IsEphemeral(): PrivateScope, Public, HideBySig, SpecialName
    get_IsMachineKey(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyName(): PrivateScope, Public, HideBySig, SpecialName
    get_KeySize(): PrivateScope, Public, HideBySig, SpecialName
    get_KeyUsage(): PrivateScope, Public, HideBySig, SpecialName
    get_ParentWindowHandle(): PrivateScope, Public, HideBySig, SpecialName
    set_ParentWindowHandle(IntPtr): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    get_Provider(): PrivateScope, Public, HideBySig, SpecialName
    get_ProviderHandle(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    get_UniqueName(): PrivateScope, Public, HideBySig, SpecialName
    get_UIPolicy(): PrivateScope, Public, HideBySig, SpecialName
    BuildKeyContainerPermission(KeyContainerPermissionFlags): PrivateScope, Assembly, HideBySig
    Create(CngAlgorithm): PrivateScope, Public, Static, HideBySig
    Create(CngAlgorithm, String): PrivateScope, Public, Static, HideBySig
    Create(CngAlgorithm, String, CngKeyCreationParameters): PrivateScope, Public, Static, HideBySig
    Delete(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Exists(String): PrivateScope, Public, Static, HideBySig
    Exists(String, CngProvider): PrivateScope, Public, Static, HideBySig
    Exists(String, CngProvider, CngKeyOpenOptions): PrivateScope, Public, Static, HideBySig
    Import(Byte[], CngKeyBlobFormat): PrivateScope, Public, Static, HideBySig
    Import(Byte[], CngKeyBlobFormat, CngProvider): PrivateScope, Public, Static, HideBySig
    Export(CngKeyBlobFormat): PrivateScope, Public, HideBySig
    GetProperty(String, CngPropertyOptions): PrivateScope, Public, HideBySig, HasSecurity
    HasProperty(String, CngPropertyOptions): PrivateScope, Public, HideBySig, HasSecurity
    Open(String): PrivateScope, Public, Static, HideBySig
    Open(String, CngProvider): PrivateScope, Public, Static, HideBySig
    Open(String, CngProvider, CngKeyOpenOptions): PrivateScope, Public, Static, HideBySig
    Open(SafeNCryptKeyHandle, CngKeyHandleOpenOptions): PrivateScope, Public, Static, HideBySig, HasSecurity
    SetProperty(CngProperty): PrivateScope, Public, HideBySig, HasSecurity
Class System.Security.Cryptography.CngKeyBlobFormat: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, HasSecurity, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[System.Security.Cryptography.CngKeyBlobFormat]
  Properties:
    System.String Format 'get ' : 
    System.Security.Cryptography.CngKeyBlobFormat EccPrivateBlob 'get ' : 
    System.Security.Cryptography.CngKeyBlobFormat EccPublicBlob 'get ' : 
    System.Security.Cryptography.CngKeyBlobFormat GenericPrivateBlob 'get ' : 
    System.Security.Cryptography.CngKeyBlobFormat GenericPublicBlob 'get ' : 
    System.Security.Cryptography.CngKeyBlobFormat OpaqueTransportBlob 'get ' : 
    System.Security.Cryptography.CngKeyBlobFormat Pkcs8PrivateBlob 'get ' : 
  Methods:
    get_Format(): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(CngKeyBlobFormat, CngKeyBlobFormat): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(CngKeyBlobFormat, CngKeyBlobFormat): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(CngKeyBlobFormat): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_EccPrivateBlob(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_EccPublicBlob(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_GenericPrivateBlob(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_GenericPublicBlob(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_OpaqueTransportBlob(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_Pkcs8PrivateBlob(): PrivateScope, Public, Static, HideBySig, SpecialName
Class System.Security.Cryptography.CngKeyCreationParameters: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Nullable`1[System.Security.Cryptography.CngExportPolicies] ExportPolicy 'get set' : 
    System.Security.Cryptography.CngKeyCreationOptions KeyCreationOptions 'get set' : 
    System.Nullable`1[System.Security.Cryptography.CngKeyUsages] KeyUsage 'get set' : 
    IntPtr ParentWindowHandle 'get set' : 
    System.Security.Cryptography.CngPropertyCollection Parameters 'get ' : 
    System.Security.Cryptography.CngPropertyCollection ParametersNoDemand 'get ' : 
    System.Security.Cryptography.CngProvider Provider 'get set' : 
    System.Security.Cryptography.CngUIPolicy UIPolicy 'get set' : 
  Methods:
    get_ExportPolicy(): PrivateScope, Public, HideBySig, SpecialName
    set_ExportPolicy(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_KeyCreationOptions(): PrivateScope, Public, HideBySig, SpecialName
    set_KeyCreationOptions(CngKeyCreationOptions): PrivateScope, Public, HideBySig, SpecialName
    get_KeyUsage(): PrivateScope, Public, HideBySig, SpecialName
    set_KeyUsage(Nullable`1): PrivateScope, Public, HideBySig, SpecialName
    get_ParentWindowHandle(): PrivateScope, Public, HideBySig, SpecialName
    set_ParentWindowHandle(IntPtr): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    get_Parameters(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    get_ParametersNoDemand(): PrivateScope, Assembly, HideBySig, SpecialName
    get_Provider(): PrivateScope, Public, HideBySig, SpecialName
    set_Provider(CngProvider): PrivateScope, Public, HideBySig, SpecialName
    get_UIPolicy(): PrivateScope, Public, HideBySig, SpecialName
    set_UIPolicy(CngUIPolicy): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
Struct System.Security.Cryptography.CngProperty: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, HasSecurity, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.String, Byte[], System.Security.Cryptography.CngPropertyOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[System.Security.Cryptography.CngProperty]
  Properties:
    System.String Name 'get ' : 
    System.Security.Cryptography.CngPropertyOptions Options 'get ' : 
    Byte[] Value 'get ' : 
  Methods:
    get_Name(): PrivateScope, Public, HideBySig, SpecialName
    get_Options(): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Assembly, HideBySig, SpecialName
    GetValue(): PrivateScope, Public, HideBySig
    op_Equality(CngProperty, CngProperty): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(CngProperty, CngProperty): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(CngProperty): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.CngPropertyCollection: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Collections.ObjectModel.Collection`1[System.Security.Cryptography.CngProperty]
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Security.Cryptography.CngProvider: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, HasSecurity, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[System.Security.Cryptography.CngProvider]
  Properties:
    System.String Provider 'get ' : 
    System.Security.Cryptography.CngProvider MicrosoftSmartCardKeyStorageProvider 'get ' : 
    System.Security.Cryptography.CngProvider MicrosoftSoftwareKeyStorageProvider 'get ' : 
  Methods:
    get_Provider(): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(CngProvider, CngProvider): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(CngProvider, CngProvider): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    Equals(CngProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_MicrosoftSmartCardKeyStorageProvider(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MicrosoftSoftwareKeyStorageProvider(): PrivateScope, Public, Static, HideBySig, SpecialName
Class System.Security.Cryptography.CngUIPolicy: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(System.Security.Cryptography.CngUIProtectionLevels): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.CngUIProtectionLevels, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.CngUIProtectionLevels, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.CngUIProtectionLevels, System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.CngUIProtectionLevels, System.String, System.String, System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String CreationTitle 'get ' : 
    System.String Description 'get ' : 
    System.String FriendlyName 'get ' : 
    System.Security.Cryptography.CngUIProtectionLevels ProtectionLevel 'get ' : 
    System.String UseContext 'get ' : 
  Methods:
    get_CreationTitle(): PrivateScope, Public, HideBySig, SpecialName
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    get_FriendlyName(): PrivateScope, Public, HideBySig, SpecialName
    get_ProtectionLevel(): PrivateScope, Public, HideBySig, SpecialName
    get_UseContext(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.Cryptography.CapiHashAlgorithm: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.String, ProviderType, AlgorithmId): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Initialize(): PrivateScope, Public, HideBySig
    HashCore(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    HashFinal(): PrivateScope, Public, HideBySig
Class System.Security.Cryptography.CapiNative: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    AcquireCsp(String, String, ProviderType, CryptAcquireContextFlags, Boolean): PrivateScope, Assembly, Static, HideBySig
    ExportSymmetricKey(SafeCapiKeyHandle): PrivateScope, Assembly, Static, HideBySig
    GetAlgorithmName(AlgorithmId): PrivateScope, Assembly, Static, HideBySig
    GetHashParameter(SafeCapiHashHandle, HashParameter): PrivateScope, Assembly, Static, HideBySig
    GetProviderParameterStruct(SafeCspHandle, ProviderParameter, ProviderParameterFlags): PrivateScope, Assembly, Static, HideBySig
    HResultForVerificationResult(SignatureVerificationResult): PrivateScope, Assembly, Static, HideBySig
    ImportSymmetricKey(SafeCspHandle, AlgorithmId, Byte[]): PrivateScope, Assembly, Static, HideBySig
    SetKeyParameter(SafeCapiKeyHandle, KeyParameter, Int32): PrivateScope, Assembly, Static, HideBySig
    SetKeyParameter(SafeCapiKeyHandle, KeyParameter, Byte[]): PrivateScope, Assembly, Static, HideBySig
Struct System.Security.Cryptography.CapiNative+AlgorithmClass: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AlgorithmClass DataEncryption = 24576 : Public, Static, Literal, HasDefault
    AlgorithmClass Hash = 32768 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CapiNative+AlgorithmType: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AlgorithmType Any = 0 : Public, Static, Literal, HasDefault
    AlgorithmType Block = 1536 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CapiNative+AlgorithmSubId: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AlgorithmSubId MD5 = 3 : Public, Static, Literal, HasDefault
    AlgorithmSubId Sha1 = 4 : Public, Static, Literal, HasDefault
    AlgorithmSubId Sha256 = 12 : Public, Static, Literal, HasDefault
    AlgorithmSubId Sha384 = 13 : Public, Static, Literal, HasDefault
    AlgorithmSubId Sha512 = 14 : Public, Static, Literal, HasDefault
    AlgorithmSubId Aes128 = 14 : Public, Static, Literal, HasDefault
    AlgorithmSubId Aes192 = 15 : Public, Static, Literal, HasDefault
    AlgorithmSubId Aes256 = 16 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CapiNative+AlgorithmId: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AlgorithmId None = 0 : Public, Static, Literal, HasDefault
    AlgorithmId Aes128 = 26126 : Public, Static, Literal, HasDefault
    AlgorithmId Aes192 = 26127 : Public, Static, Literal, HasDefault
    AlgorithmId Aes256 = 26128 : Public, Static, Literal, HasDefault
    AlgorithmId MD5 = 32771 : Public, Static, Literal, HasDefault
    AlgorithmId Sha1 = 32772 : Public, Static, Literal, HasDefault
    AlgorithmId Sha256 = 32780 : Public, Static, Literal, HasDefault
    AlgorithmId Sha384 = 32781 : Public, Static, Literal, HasDefault
    AlgorithmId Sha512 = 32782 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CapiNative+CryptAcquireContextFlags: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    CryptAcquireContextFlags None = 0 : Public, Static, Literal, HasDefault
    CryptAcquireContextFlags VerifyContext = -268435456 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CapiNative+ErrorCode: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ErrorCode Success = 0 : Public, Static, Literal, HasDefault
    ErrorCode MoreData = 234 : Public, Static, Literal, HasDefault
    ErrorCode NoMoreItems = 259 : Public, Static, Literal, HasDefault
    ErrorCode BadData = -2146893819 : Public, Static, Literal, HasDefault
    ErrorCode BadAlgorithmId = -2146893816 : Public, Static, Literal, HasDefault
    ErrorCode ProviderTypeNotDefined = -2146893801 : Public, Static, Literal, HasDefault
    ErrorCode KeysetNotDefined = -2146893799 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CapiNative+HashParameter: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    HashParameter None = 0 : Public, Static, Literal, HasDefault
    HashParameter AlgorithmId = 1 : Public, Static, Literal, HasDefault
    HashParameter HashValue = 2 : Public, Static, Literal, HasDefault
    HashParameter HashSize = 4 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CapiNative+KeyBlobType: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Byte value__ : Public, SpecialName, RTSpecialName
    KeyBlobType PlainText = 8 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CapiNative+KeyFlags: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    KeyFlags None = 0 : Public, Static, Literal, HasDefault
    KeyFlags Exportable = 1 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CapiNative+KeyParameter: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    KeyParameter None = 0 : Public, Static, Literal, HasDefault
    KeyParameter IV = 1 : Public, Static, Literal, HasDefault
    KeyParameter Mode = 4 : Public, Static, Literal, HasDefault
    KeyParameter ModeBits = 5 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.CapiNative+ProviderNames: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String MicrosoftEnhancedRsaAes = Microsoft Enhanced RSA and AES Cryptographic Provider : Public, Static, Literal, HasDefault
    System.String MicrosoftEnhancedRsaAesPrototype = Microsoft Enhanced RSA and AES Cryptographic Provider (Prototype) : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CapiNative+ProviderParameter: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ProviderParameter None = 0 : Public, Static, Literal, HasDefault
    ProviderParameter EnumerateAlgorithms = 1 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CapiNative+ProviderParameterFlags: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ProviderParameterFlags None = 0 : Public, Static, Literal, HasDefault
    ProviderParameterFlags RestartEnumeration = 1 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CapiNative+ProviderType: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ProviderType None = 0 : Public, Static, Literal, HasDefault
    ProviderType RsaAes = 24 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CapiNative+BLOBHEADER: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    KeyBlobType bType : Public
    Byte bVersion : Public
    Int16 reserved : Public
    AlgorithmId aiKeyAlg : Public
Struct System.Security.Cryptography.CapiNative+CRYPTOAPI_BLOB: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 cbData : Public
    IntPtr pbData : Public
Struct System.Security.Cryptography.CapiNative+PROV_ENUMALGS: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    AlgorithmId aiAlgId : Public
    Int32 dwBitLen : Public
    Int32 dwNameLen : Public
    <szName>e__FixedBuffer0 szName : Public
Struct System.Security.Cryptography.CapiNative+PROV_ENUMALGS+<szName>e__FixedBuffer0: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Byte FixedElementField : Public
Class System.Security.Cryptography.CapiNative+UnsafeNativeMethods: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, HasSecurity, BeforeFieldInit
  Methods:
    _AxlPublicKeyBlobToPublicKeyToken(CRYPTOAPI_BLOB&, SafeAxlBufferHandle&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CryptAcquireContext(SafeCspHandle&(Out), String, String, ProviderType, CryptAcquireContextFlags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CryptCreateHash(SafeCspHandle, AlgorithmId, SafeCapiKeyHandle, Int32, SafeCapiHashHandle&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CryptDecrypt(SafeCapiKeyHandle, SafeCapiHashHandle, Boolean(HasFieldMarshal), Int32, IntPtr, Int32&(In, Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CryptDuplicateKey(SafeCapiKeyHandle, IntPtr, Int32, SafeCapiKeyHandle&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl, HasSecurity
    CryptEncrypt(SafeCapiKeyHandle, SafeCapiHashHandle, Boolean(HasFieldMarshal), Int32, IntPtr, Int32&(In, Out), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CryptExportKey(SafeCapiKeyHandle, SafeCapiKeyHandle, Int32, Int32, Byte[](Out, HasFieldMarshal), Int32&(In, Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CryptGenKey(SafeCspHandle, AlgorithmId, KeyFlags, SafeCapiKeyHandle&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CryptGenRandom(SafeCspHandle, Int32, Byte[](Out, HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CryptGetHashParam(SafeCapiHashHandle, HashParameter, Byte[](Out, HasFieldMarshal), Int32&(In, Out), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CryptGetProvParam(SafeCspHandle, ProviderParameter, IntPtr, Int32&(In, Out), ProviderParameterFlags): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CryptHashData(SafeCapiHashHandle, Byte[](HasFieldMarshal), Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CryptImportKey(SafeCspHandle, Byte[](HasFieldMarshal), Int32, SafeCapiKeyHandle, KeyFlags, SafeCapiKeyHandle&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CryptSetKeyParam(SafeCapiKeyHandle, KeyParameter, Byte[](HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Struct System.Security.Cryptography.EncryptionMode: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.EncryptionMode Encrypt = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.EncryptionMode Decrypt = 1 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.CapiSymmetricAlgorithm: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(Int32, Int32, Microsoft.Win32.SafeHandles.SafeCspHandle, Microsoft.Win32.SafeHandles.SafeCapiKeyHandle, Byte[], System.Security.Cryptography.CipherMode, System.Security.Cryptography.PaddingMode, System.Security.Cryptography.EncryptionMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Security.Cryptography.ICryptoTransform
    System.IDisposable
  Properties:
    Boolean CanReuseTransform 'get ' : 
    Boolean CanTransformMultipleBlocks 'get ' : 
    Int32 InputBlockSize 'get ' : 
    Int32 OutputBlockSize 'get ' : 
  Methods:
    get_CanReuseTransform(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CanTransformMultipleBlocks(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_InputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_OutputBlockSize(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TransformBlock(Byte[], Int32, Int32, Byte[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    TransformFinalBlock(Byte[], Int32, Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class System.Security.Cryptography.ECDiffieHellman: AutoLayout, AnsiClass, Class, Public, Abstract, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.AsymmetricAlgorithm
  Properties:
    System.String KeyExchangeAlgorithm 'get ' : 
    System.String SignatureAlgorithm 'get ' : 
    System.Security.Cryptography.ECDiffieHellmanPublicKey PublicKey 'get ' : 
  Methods:
    get_KeyExchangeAlgorithm(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_SignatureAlgorithm(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
    get_PublicKey(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    DeriveKeyMaterial(ECDiffieHellmanPublicKey): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Security.Cryptography.ECDiffieHellmanPublicKey: AutoLayout, AnsiClass, Class, Public, Abstract, Serializable, HasSecurity, BeforeFieldInit
  Interfaces:
    System.IDisposable
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToByteArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    ToXmlString(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Hash = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Hmac = 1 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction Tls = 2 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.ECDiffieHellmanCng: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.ECDiffieHellman
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.CngKey): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Cryptography.CngAlgorithm HashAlgorithm 'get set' : 
    Byte[] HmacKey 'get set' : 
    System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction KeyDerivationFunction 'get set' : 
    Byte[] Label 'get set' : 
    Byte[] SecretAppend 'get set' : 
    Byte[] SecretPrepend 'get set' : 
    Byte[] Seed 'get set' : 
    System.Security.Cryptography.CngKey Key 'get set' : 
    System.Security.Cryptography.ECDiffieHellmanPublicKey PublicKey 'get ' : 
    Boolean UseSecretAgreementAsHmacKey 'get ' : 
  Methods:
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    set_HashAlgorithm(CngAlgorithm): PrivateScope, Public, HideBySig, SpecialName
    get_HmacKey(): PrivateScope, Public, HideBySig, SpecialName
    set_HmacKey(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_KeyDerivationFunction(): PrivateScope, Public, HideBySig, SpecialName
    set_KeyDerivationFunction(ECDiffieHellmanKeyDerivationFunction): PrivateScope, Public, HideBySig, SpecialName
    get_Label(): PrivateScope, Public, HideBySig, SpecialName
    set_Label(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_SecretAppend(): PrivateScope, Public, HideBySig, SpecialName
    set_SecretAppend(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_SecretPrepend(): PrivateScope, Public, HideBySig, SpecialName
    set_SecretPrepend(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_Seed(): PrivateScope, Public, HideBySig, SpecialName
    set_Seed(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_Key(): PrivateScope, Public, HideBySig, SpecialName
    get_PublicKey(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_UseSecretAgreementAsHmacKey(): PrivateScope, Public, HideBySig, SpecialName
    DeriveKeyMaterial(ECDiffieHellmanPublicKey): PrivateScope, Public, Virtual, HideBySig
    DeriveKeyMaterial(CngKey): PrivateScope, Public, HideBySig
    DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey): PrivateScope, Public, HideBySig
    DeriveSecretAgreementHandle(CngKey): PrivateScope, Public, HideBySig, HasSecurity
    FromXmlString(String): PrivateScope, Public, Virtual, HideBySig
    FromXmlString(String, ECKeyXmlFormat): PrivateScope, Public, HideBySig
    ToXmlString(Boolean): PrivateScope, Public, Virtual, HideBySig
    ToXmlString(ECKeyXmlFormat): PrivateScope, Public, HideBySig
Class System.Security.Cryptography.ECDiffieHellmanCngPublicKey: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.ECDiffieHellmanPublicKey
    Void .ctor(System.Security.Cryptography.CngKey): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Cryptography.CngKeyBlobFormat BlobFormat 'get ' : 
  Methods:
    get_BlobFormat(): PrivateScope, Public, HideBySig, SpecialName
    FromByteArray(Byte[], CngKeyBlobFormat): PrivateScope, Public, Static, HideBySig
    FromXmlString(String): PrivateScope, Public, Static, HideBySig
    Import(): PrivateScope, Public, HideBySig
    ToXmlString(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.ECDsa: AutoLayout, AnsiClass, Class, Public, Abstract, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.AsymmetricAlgorithm
  Properties:
    System.String KeyExchangeAlgorithm 'get ' : 
    System.String SignatureAlgorithm 'get ' : 
  Methods:
    get_KeyExchangeAlgorithm(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_SignatureAlgorithm(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    Create(): PrivateScope, Public, Static, HideBySig
    Create(String): PrivateScope, Public, Static, HideBySig
    SignHash(Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    VerifyHash(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class System.Security.Cryptography.ECDsaCng: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.ECDsa
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.CngKey): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Cryptography.CngAlgorithm HashAlgorithm 'get set' : 
    System.Security.Cryptography.CngKey Key 'get set' : 
  Methods:
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    set_HashAlgorithm(CngAlgorithm): PrivateScope, Public, HideBySig, SpecialName
    get_Key(): PrivateScope, Public, HideBySig, SpecialName
    FromXmlString(String): PrivateScope, Public, Virtual, HideBySig
    FromXmlString(String, ECKeyXmlFormat): PrivateScope, Public, HideBySig
    SignData(Byte[]): PrivateScope, Public, HideBySig
    SignData(Byte[], Int32, Int32): PrivateScope, Public, HideBySig
    SignData(Stream): PrivateScope, Public, HideBySig
    SignHash(Byte[]): PrivateScope, Public, Virtual, HideBySig
    ToXmlString(Boolean): PrivateScope, Public, Virtual, HideBySig
    ToXmlString(ECKeyXmlFormat): PrivateScope, Public, HideBySig
    VerifyData(Byte[], Byte[]): PrivateScope, Public, HideBySig
    VerifyData(Byte[], Int32, Int32, Byte[]): PrivateScope, Public, HideBySig
    VerifyData(Stream, Byte[]): PrivateScope, Public, HideBySig
    VerifyHash(Byte[], Byte[]): PrivateScope, Public, Virtual, HideBySig
Struct System.Security.Cryptography.ECKeyXmlFormat: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.ECKeyXmlFormat Rfc4050 = 0 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.CoreCryptoConfig: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    Boolean EnforceFipsAlgorithms 'get ' : 
  Methods:
    get_EnforceFipsAlgorithms(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    CreateFromName(String): PrivateScope, Public, Static, HideBySig, HasSecurity
Class System.Security.Cryptography.ManifestSignatureInformation: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(System.Security.ManifestKinds, System.Security.Cryptography.StrongNameSignatureInformation, System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation AuthenticodeSignature 'get ' : 
    System.Security.ManifestKinds Manifest 'get ' : 
    System.Security.Cryptography.StrongNameSignatureInformation StrongNameSignature 'get ' : 
  Methods:
    get_AuthenticodeSignature(): PrivateScope, Public, HideBySig, SpecialName
    get_Manifest(): PrivateScope, Public, HideBySig, SpecialName
    get_StrongNameSignature(): PrivateScope, Public, HideBySig, SpecialName
    VerifySignature(ActivationContext): PrivateScope, Public, Static, HideBySig
    VerifySignature(ActivationContext, ManifestKinds): PrivateScope, Public, Static, HideBySig
    VerifySignature(ActivationContext, ManifestKinds, X509RevocationFlag, X509RevocationMode): PrivateScope, Public, Static, HideBySig
Class System.Security.Cryptography.ManifestSignatureInformationCollection: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Collections.ObjectModel.ReadOnlyCollection`1[System.Security.Cryptography.ManifestSignatureInformation]
    Void .ctor(System.Collections.Generic.IList`1[System.Security.Cryptography.ManifestSignatureInformation]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class System.Security.Cryptography.MD5Cng: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.MD5
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
Struct System.Security.Cryptography.CngExportPolicies: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.CngExportPolicies None = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngExportPolicies AllowExport = 1 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngExportPolicies AllowPlaintextExport = 2 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngExportPolicies AllowArchiving = 4 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngExportPolicies AllowPlaintextArchiving = 8 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CngKeyCreationOptions: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.CngKeyCreationOptions None = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngKeyCreationOptions MachineKey = 32 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngKeyCreationOptions OverwriteExistingKey = 128 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CngKeyOpenOptions: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.CngKeyOpenOptions None = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngKeyOpenOptions UserKey = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngKeyOpenOptions MachineKey = 32 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngKeyOpenOptions Silent = 64 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CngKeyTypes: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.CngKeyTypes None = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngKeyTypes MachineKey = 32 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CngKeyUsages: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.CngKeyUsages None = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngKeyUsages Decryption = 1 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngKeyUsages Signing = 2 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngKeyUsages KeyAgreement = 4 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngKeyUsages AllUsages = 16777215 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CngPropertyOptions: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.CngPropertyOptions None = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngPropertyOptions CustomProperty = 1073741824 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngPropertyOptions Persist = -2147483648 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.CngUIProtectionLevels: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.CngUIProtectionLevels None = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngUIProtectionLevels ProtectKey = 1 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.CngUIProtectionLevels ForceHighProtection = 2 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.NCryptNative: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Properties:
    Boolean NCryptSupported 'get ' : 
  Methods:
    get_NCryptSupported(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    BuildEccPublicBlob(String, BigInteger, BigInteger): PrivateScope, Assembly, Static, HideBySig
    CreatePersistedKey(SafeNCryptProviderHandle, String, String, CngKeyCreationOptions): PrivateScope, Assembly, Static, HideBySig
    DeleteKey(SafeNCryptKeyHandle): PrivateScope, Assembly, Static, HideBySig
    DeriveKeyMaterialHash(SafeNCryptSecretHandle, String, Byte[], Byte[], SecretAgreementFlags): PrivateScope, Assembly, Static, HideBySig
    DeriveKeyMaterialHmac(SafeNCryptSecretHandle, String, Byte[], Byte[], Byte[], SecretAgreementFlags): PrivateScope, Assembly, Static, HideBySig
    DeriveKeyMaterialTls(SafeNCryptSecretHandle, Byte[], Byte[], SecretAgreementFlags): PrivateScope, Assembly, Static, HideBySig
    DeriveSecretAgreement(SafeNCryptKeyHandle, SafeNCryptKeyHandle): PrivateScope, Assembly, Static, HideBySig
    ExportKey(SafeNCryptKeyHandle, String): PrivateScope, Assembly, Static, HideBySig
    FinalizeKey(SafeNCryptKeyHandle): PrivateScope, Assembly, Static, HideBySig
    GetProperty(SafeNCryptHandle, String, CngPropertyOptions, Boolean&(Out)): PrivateScope, Assembly, Static, HideBySig
    GetPropertyAsDWord(SafeNCryptHandle, String, CngPropertyOptions): PrivateScope, Assembly, Static, HideBySig
    GetPropertyAsIntPtr(SafeNCryptHandle, String, CngPropertyOptions): PrivateScope, Assembly, Static, HideBySig
    GetPropertyAsString(SafeNCryptHandle, String, CngPropertyOptions): PrivateScope, Assembly, Static, HideBySig
    GetPropertyAsStruct(SafeNCryptHandle, String, CngPropertyOptions): PrivateScope, Assembly, Static, HideBySig
    ImportKey(SafeNCryptProviderHandle, Byte[], String): PrivateScope, Assembly, Static, HideBySig
    OpenKey(SafeNCryptProviderHandle, String, CngKeyOpenOptions): PrivateScope, Assembly, Static, HideBySig
    OpenStorageProvider(String): PrivateScope, Assembly, Static, HideBySig
    SetProperty(SafeNCryptHandle, String, Int32, CngPropertyOptions): PrivateScope, Assembly, Static, HideBySig
    SetProperty(SafeNCryptHandle, String, String, CngPropertyOptions): PrivateScope, Assembly, Static, HideBySig
    SetProperty(SafeNCryptHandle, String, T, CngPropertyOptions): PrivateScope, Assembly, Static, HideBySig
    SetProperty(SafeNCryptHandle, String, Byte[], CngPropertyOptions): PrivateScope, Assembly, Static, HideBySig
    SignHash(SafeNCryptKeyHandle, Byte[]): PrivateScope, Assembly, Static, HideBySig
    UnpackEccPublicBlob(Byte[], BigInteger&(Out), BigInteger&(Out)): PrivateScope, Assembly, Static, HideBySig
    VerifySignature(SafeNCryptKeyHandle, Byte[], Byte[]): PrivateScope, Assembly, Static, HideBySig
Struct System.Security.Cryptography.NCryptNative+BufferType: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    BufferType KdfHashAlgorithm = 0 : Public, Static, Literal, HasDefault
    BufferType KdfSecretPrepend = 1 : Public, Static, Literal, HasDefault
    BufferType KdfSecretAppend = 2 : Public, Static, Literal, HasDefault
    BufferType KdfHmacKey = 3 : Public, Static, Literal, HasDefault
    BufferType KdfTlsLabel = 4 : Public, Static, Literal, HasDefault
    BufferType KdfTlsSeed = 5 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.NCryptNative+ErrorCode: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    ErrorCode Success = 0 : Public, Static, Literal, HasDefault
    ErrorCode BadSignature = -2146893818 : Public, Static, Literal, HasDefault
    ErrorCode NotFound = -2146893807 : Public, Static, Literal, HasDefault
    ErrorCode KeyDoesNotExist = -2146893802 : Public, Static, Literal, HasDefault
    ErrorCode BufferTooSmall = -2146893784 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.NCryptNative+KeyPropertyName: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String Algorithm = Algorithm Name : Assembly, Static, Literal, HasDefault
    System.String AlgorithmGroup = Algorithm Group : Assembly, Static, Literal, HasDefault
    System.String ExportPolicy = Export Policy : Assembly, Static, Literal, HasDefault
    System.String KeyType = Key Type : Assembly, Static, Literal, HasDefault
    System.String KeyUsage = Key Usage : Assembly, Static, Literal, HasDefault
    System.String Length = Length : Assembly, Static, Literal, HasDefault
    System.String Name = Name : Assembly, Static, Literal, HasDefault
    System.String ParentWindowHandle = HWND Handle : Assembly, Static, Literal, HasDefault
    System.String ProviderHandle = Provider Handle : Assembly, Static, Literal, HasDefault
    System.String UIPolicy = UI Policy : Assembly, Static, Literal, HasDefault
    System.String UniqueName = Unique Name : Assembly, Static, Literal, HasDefault
    System.String UseContext = Use Context : Assembly, Static, Literal, HasDefault
    System.String ClrIsEphemeral = CLR IsEphemeral : Assembly, Static, Literal, HasDefault
Class System.Security.Cryptography.NCryptNative+ProviderPropertyName: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String Name = Name : Assembly, Static, Literal, HasDefault
Struct System.Security.Cryptography.NCryptNative+SecretAgreementFlags: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    SecretAgreementFlags None = 0 : Public, Static, Literal, HasDefault
    SecretAgreementFlags UseSecretAsHmacKey = 1 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.NCryptNative+NCRYPT_UI_POLICY: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 dwVersion : Public
    System.Security.Cryptography.CngUIProtectionLevels dwFlags : Public
    System.String pszCreationTitle : Public, HasFieldMarshal
    System.String pszFriendlyName : Public, HasFieldMarshal
    System.String pszDescription : Public, HasFieldMarshal
Struct System.Security.Cryptography.NCryptNative+NCryptBuffer: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 cbBuffer : Public
    BufferType BufferType : Public
    IntPtr pvBuffer : Public
Struct System.Security.Cryptography.NCryptNative+NCryptBufferDesc: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 ulVersion : Public
    Int32 cBuffers : Public
    IntPtr pBuffers : Public
Class System.Security.Cryptography.NCryptNative+UnsafeNativeMethods: AutoLayout, AnsiClass, Class, NestedAssembly, Abstract, Sealed, HasSecurity, BeforeFieldInit
  Methods:
    NCryptCreatePersistedKey(SafeNCryptProviderHandle, SafeNCryptKeyHandle&(Out), String, String, Int32, CngKeyCreationOptions): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    NCryptDeleteKey(SafeNCryptKeyHandle, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    NCryptDeriveKey(SafeNCryptSecretHandle, String, NCryptBufferDesc&(In), Byte[](Out, HasFieldMarshal), Int32, Int32&(Out), SecretAgreementFlags): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    NCryptExportKey(SafeNCryptKeyHandle, IntPtr, String, IntPtr, Byte[](Out, HasFieldMarshal), Int32, Int32&(Out), Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    NCryptFinalizeKey(SafeNCryptKeyHandle, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    NCryptGetProperty(SafeNCryptHandle, String, Byte[](Out, HasFieldMarshal), Int32, Int32&(Out), CngPropertyOptions): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    NCryptGetProperty(SafeNCryptHandle, String, IntPtr&(Out), Int32, Int32&(Out), CngPropertyOptions): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    NCryptImportKey(SafeNCryptProviderHandle, IntPtr, String, IntPtr, SafeNCryptKeyHandle&(Out), Byte[](HasFieldMarshal), Int32, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    NCryptOpenKey(SafeNCryptProviderHandle, SafeNCryptKeyHandle&(Out), String, Int32, CngKeyOpenOptions): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    NCryptOpenStorageProvider(SafeNCryptProviderHandle&(Out), String, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    NCryptSecretAgreement(SafeNCryptKeyHandle, SafeNCryptKeyHandle, SafeNCryptSecretHandle&(Out), Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    NCryptSetProperty(SafeNCryptHandle, String, Byte[](HasFieldMarshal), Int32, CngPropertyOptions): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    NCryptSetProperty(SafeNCryptHandle, String, String, Int32, CngPropertyOptions): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    NCryptSetProperty(SafeNCryptHandle, String, IntPtr, Int32, CngPropertyOptions): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    NCryptSignHash(SafeNCryptKeyHandle, IntPtr, Byte[](HasFieldMarshal), Int32, Byte[](HasFieldMarshal), Int32, Int32&(Out), Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    NCryptVerifySignature(SafeNCryptKeyHandle, IntPtr, Byte[](HasFieldMarshal), Int32, Byte[](HasFieldMarshal), Int32, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
Class System.Security.Cryptography.Rfc4050KeyFormatter: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    FromXml(String): PrivateScope, Assembly, Static, HideBySig
    ToXml(CngKey): PrivateScope, Assembly, Static, HideBySig
Class System.Security.Cryptography.SHA1Cng: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.SHA1
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.SHA256Cng: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.SHA256
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.SHA256CryptoServiceProvider: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.SHA256
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.SHA384Cng: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.SHA384
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.SHA384CryptoServiceProvider: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.SHA384
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.SHA512Cng: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.SHA512
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
Class System.Security.Cryptography.SHA512CryptoServiceProvider: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.Cryptography.SHA512
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Initialize(): PrivateScope, Public, Virtual, HideBySig
Struct System.Security.Cryptography.SignatureVerificationResult: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.SignatureVerificationResult Valid = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult AssemblyIdentityMismatch = 1 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult ContainingSignatureInvalid = 2 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult PublicKeyTokenMismatch = 3 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult PublisherMismatch = 4 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult SystemError = -2146869247 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult InvalidSignerCertificate = -2146869246 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult InvalidCountersignature = -2146869245 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult InvalidCertificateSignature = -2146869244 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult InvalidTimestamp = -2146869243 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult BadDigest = -2146869232 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult BasicConstraintsNotObserved = -2146869223 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult UnknownTrustProvider = -2146762751 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult UnknownVerificationAction = -2146762750 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult BadSignatureFormat = -2146762749 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult CertificateNotExplicitlyTrusted = -2146762748 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult MissingSignature = -2146762496 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult CertificateExpired = -2146762495 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult InvalidTimePeriodNesting = -2146762494 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult InvalidCertificateRole = -2146762493 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult PathLengthConstraintViolated = -2146762492 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult UnknownCriticalExtension = -2146762491 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult CertificateUsageNotAllowed = -2146762490 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult IssuerChainingError = -2146762489 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult CertificateMalformed = -2146762488 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult UntrustedRootCertificate = -2146762487 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult CouldNotBuildChain = -2146762486 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult GenericTrustFailure = -2146762485 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult CertificateRevoked = -2146762484 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult UntrustedTestRootCertificate = -2146762483 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult RevocationCheckFailure = -2146762482 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult InvalidCertificateUsage = -2146762480 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult CertificateExplicitlyDistrusted = -2146762479 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult UntrustedCertificationAuthority = -2146762478 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult InvalidCertificatePolicy = -2146762477 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.SignatureVerificationResult InvalidCertificateName = -2146762476 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.StrongNameSignatureInformation: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(System.Security.Cryptography.AsymmetricAlgorithm): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.SignatureVerificationResult): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String HashAlgorithm 'get ' : 
    Int32 HResult 'get ' : 
    Boolean IsValid 'get ' : 
    System.Security.Cryptography.AsymmetricAlgorithm PublicKey 'get ' : 
    System.Security.Cryptography.SignatureVerificationResult VerificationResult 'get ' : 
  Methods:
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_HResult(): PrivateScope, Public, HideBySig, SpecialName
    get_IsValid(): PrivateScope, Public, HideBySig, SpecialName
    get_PublicKey(): PrivateScope, Public, HideBySig, SpecialName
    get_VerificationResult(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(AXL_AUTHENTICODE_SIGNER_INFO, System.Security.Cryptography.X509Certificates.X509Chain, System.Security.Cryptography.X509Certificates.TimestampInformation): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.SignatureVerificationResult): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
    System.Uri DescriptionUrl 'get ' : 
    System.String HashAlgorithm 'get ' : 
    Int32 HResult 'get ' : 
    System.Security.Cryptography.X509Certificates.X509Chain SignatureChain 'get ' : 
    System.Security.Cryptography.X509Certificates.X509Certificate2 SigningCertificate 'get ' : 
    System.Security.Cryptography.X509Certificates.TimestampInformation Timestamp 'get ' : 
    System.Security.Cryptography.X509Certificates.TrustStatus TrustStatus 'get ' : 
    System.Security.Cryptography.SignatureVerificationResult VerificationResult 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, HideBySig, SpecialName
    get_DescriptionUrl(): PrivateScope, Public, HideBySig, SpecialName
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_HResult(): PrivateScope, Public, HideBySig, SpecialName
    get_SignatureChain(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    get_SigningCertificate(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    get_Timestamp(): PrivateScope, Public, HideBySig, SpecialName
    get_TrustStatus(): PrivateScope, Public, HideBySig, SpecialName
    get_VerificationResult(): PrivateScope, Public, HideBySig, SpecialName
Class System.Security.Cryptography.X509Certificates.TimestampInformation: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(AXL_AUTHENTICODE_TIMESTAMPER_INFO): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Cryptography.SignatureVerificationResult): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String HashAlgorithm 'get ' : 
    Int32 HResult 'get ' : 
    Boolean IsValid 'get ' : 
    System.Security.Cryptography.X509Certificates.X509Chain SignatureChain 'get ' : 
    System.Security.Cryptography.X509Certificates.X509Certificate2 SigningCertificate 'get ' : 
    System.DateTime Timestamp 'get ' : 
    System.Security.Cryptography.SignatureVerificationResult VerificationResult 'get ' : 
  Methods:
    get_HashAlgorithm(): PrivateScope, Public, HideBySig, SpecialName
    get_HResult(): PrivateScope, Public, HideBySig, SpecialName
    get_IsValid(): PrivateScope, Public, HideBySig, SpecialName
    get_SignatureChain(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    get_SigningCertificate(): PrivateScope, Public, HideBySig, SpecialName, HasSecurity
    get_Timestamp(): PrivateScope, Public, HideBySig, SpecialName
    get_VerificationResult(): PrivateScope, Public, HideBySig, SpecialName
Struct System.Security.Cryptography.X509Certificates.TrustStatus: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Security.Cryptography.X509Certificates.TrustStatus Untrusted = 0 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.TrustStatus UnknownIdentity = 1 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.TrustStatus KnownIdentity = 2 : Public, Static, Literal, HasDefault
    System.Security.Cryptography.X509Certificates.TrustStatus Trusted = 3 : Public, Static, Literal, HasDefault
Class System.Security.Cryptography.X509Certificates.X509Native: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
Struct System.Security.Cryptography.X509Certificates.X509Native+AxlVerificationFlags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    AxlVerificationFlags None = 0 : Public, Static, Literal, HasDefault
    AxlVerificationFlags NoRevocationCheck = 1 : Public, Static, Literal, HasDefault
    AxlVerificationFlags RevocationCheckEndCertOnly = 2 : Public, Static, Literal, HasDefault
    AxlVerificationFlags RevocationCheckEntireChain = 4 : Public, Static, Literal, HasDefault
    AxlVerificationFlags UrlOnlyCacheRetrieval = 8 : Public, Static, Literal, HasDefault
    AxlVerificationFlags LifetimeSigning = 16 : Public, Static, Literal, HasDefault
    AxlVerificationFlags TrustMicrosoftRootOnly = 32 : Public, Static, Literal, HasDefault
Struct System.Security.Cryptography.X509Certificates.X509Native+AXL_AUTHENTICODE_SIGNER_INFO: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, HasSecurity, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 cbSize : Public
    Int32 dwError : Public
    AlgorithmId algHash : Public
    IntPtr pwszHash : Public
    IntPtr pwszDescription : Public
    IntPtr pwszDescriptionUrl : Public
    IntPtr pChainContext : Public
Struct System.Security.Cryptography.X509Certificates.X509Native+AXL_AUTHENTICODE_TIMESTAMPER_INFO: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, HasSecurity, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 cbsize : Public
    Int32 dwError : Public
    AlgorithmId algHash : Public
    System.Runtime.InteropServices.ComTypes.FILETIME ftTimestamp : Public
    IntPtr pChainContext : Public
Class System.Security.Cryptography.X509Certificates.X509Native+UnsafeNativeMethods: AutoLayout, AnsiClass, Class, NestedPublic, Abstract, Sealed, HasSecurity, BeforeFieldInit
  Methods:
    _AxlGetIssuerPublicKeyHash(IntPtr, SafeAxlBufferHandle&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CertFreeAuthenticodeSignerInfo(AXL_AUTHENTICODE_SIGNER_INFO&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CertFreeAuthenticodeTimestamperInfo(AXL_AUTHENTICODE_TIMESTAMPER_INFO&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CertVerifyAuthenticodeLicense(CRYPTOAPI_BLOB&, AxlVerificationFlags, AXL_AUTHENTICODE_SIGNER_INFO&(In, Out), AXL_AUTHENTICODE_TIMESTAMPER_INFO&(In, Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Class System.Security.Cryptography.Xml.ManifestSignedXml: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.Security.Cryptography.Xml.SignedXml
    Void .ctor(System.Xml.XmlDocument, System.Security.ManifestKinds): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetIdElement(XmlDocument, String): PrivateScope, Public, Virtual, HideBySig
    VerifySignature(X509RevocationFlag, X509RevocationMode): PrivateScope, Public, HideBySig
Struct System.Numeric.BigInteger: AutoLayout, AnsiClass, Class, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(UInt64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Decimal): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[], Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IFormattable
    System.IEquatable`1[System.Numeric.BigInteger]
    System.IComparable`1[System.Numeric.BigInteger]
    System.IComparable
  Properties:
    System.Numeric.BigInteger Zero 'get ' : 
    System.Numeric.BigInteger One 'get ' : 
    System.Numeric.BigInteger MinusOne 'get ' : 
    Int32 Sign 'get ' : 
  Methods:
    DivRem(BigInteger, BigInteger, BigInteger&(Out)): PrivateScope, Public, Static, HideBySig
    Parse(String): PrivateScope, Public, Static, HideBySig
    Parse(String, IFormatProvider): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles): PrivateScope, Public, Static, HideBySig
    Parse(String, NumberStyles, IFormatProvider): PrivateScope, Public, Static, HideBySig
    TryParse(String, BigInteger&(Out)): PrivateScope, Public, Static, HideBySig
    TryParse(String, NumberStyles, IFormatProvider, BigInteger&(Out)): PrivateScope, Public, Static, HideBySig
    ToString(String): PrivateScope, Public, HideBySig
    ToString(IFormatProvider): PrivateScope, Public, HideBySig
    ToString(String, IFormatProvider): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ToString(): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(BigInteger): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    CompareTo(BigInteger): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CompareTo(Object): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Zero(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_One(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MinusOne(): PrivateScope, Public, Static, HideBySig, SpecialName
    Abs(BigInteger): PrivateScope, Public, Static, HideBySig
    GreatestCommonDivisor(BigInteger, BigInteger): PrivateScope, Public, Static, HideBySig
    Remainder(BigInteger, BigInteger): PrivateScope, Public, Static, HideBySig
    Negate(BigInteger): PrivateScope, Public, Static, HideBySig
    Pow(BigInteger, BigInteger): PrivateScope, Public, Static, HideBySig
    ModPow(BigInteger, BigInteger, BigInteger): PrivateScope, Public, Static, HideBySig
    ToByteArray(): PrivateScope, Public, HideBySig
    ToByteArray(Boolean&(Out)): PrivateScope, Public, HideBySig
    get_Sign(): PrivateScope, Public, HideBySig, SpecialName
    op_UnaryPlus(BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    op_UnaryNegation(BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Increment(BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Decrement(BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Modulus(BigInteger, BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Explicit(Decimal): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Byte): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(SByte): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Int16): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(UInt16): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Int32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(UInt32): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(Int64): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Implicit(UInt64): PrivateScope, Public, Static, HideBySig, SpecialName
    Compare(BigInteger, BigInteger): PrivateScope, Public, Static, HideBySig
    op_Equality(BigInteger, BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(BigInteger, BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThan(BigInteger, BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(BigInteger, BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(BigInteger, BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThanOrEqual(BigInteger, BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    Add(BigInteger, BigInteger): PrivateScope, Public, Static, HideBySig
    op_Addition(BigInteger, BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    Subtract(BigInteger, BigInteger): PrivateScope, Public, Static, HideBySig
    op_Subtraction(BigInteger, BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    Multiply(BigInteger, BigInteger): PrivateScope, Public, Static, HideBySig
    op_Multiply(BigInteger, BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
    Divide(BigInteger, BigInteger): PrivateScope, Public, Static, HideBySig
    op_Division(BigInteger, BigInteger): PrivateScope, Public, Static, HideBySig, SpecialName
Class Microsoft.Win32.NativeMethods: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  Fields:
    Int32 TIME_ZONE_ID_INVALID = -1 : Assembly, Static, Literal, HasDefault
    Int32 TIME_ZONE_ID_UNKNOWN = 0 : Assembly, Static, Literal, HasDefault
    Int32 TIME_ZONE_ID_STANDARD = 1 : Assembly, Static, Literal, HasDefault
    Int32 TIME_ZONE_ID_DAYLIGHT = 2 : Assembly, Static, Literal, HasDefault
    Int32 MAX_PATH = 260 : Assembly, Static, Literal, HasDefault
    Int32 MUI_LANGUAGE_ID = 4 : Assembly, Static, Literal, HasDefault
    Int32 MUI_LANGUAGE_NAME = 8 : Assembly, Static, Literal, HasDefault
    Int32 MUI_PREFERRED_UI_LANGUAGES = 16 : Assembly, Static, Literal, HasDefault
    Int32 MUI_INSTALLED_LANGUAGES = 32 : Assembly, Static, Literal, HasDefault
    Int32 MUI_ALL_LANGUAGES = 64 : Assembly, Static, Literal, HasDefault
    Int32 MUI_LANG_NEUTRAL_PE_FILE = 256 : Assembly, Static, Literal, HasDefault
    Int32 MUI_NON_LANG_NEUTRAL_FILE = 512 : Assembly, Static, Literal, HasDefault
    Int32 LOAD_LIBRARY_AS_DATAFILE = 2 : Assembly, Static, Literal, HasDefault
    Int32 LOAD_STRING_MAX_LENGTH = 500 : Assembly, Static, Literal, HasDefault
Struct Microsoft.Win32.NativeMethods+SystemTime: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int16 Year : Public, HasFieldMarshal
    Int16 Month : Public, HasFieldMarshal
    Int16 DayOfWeek : Public, HasFieldMarshal
    Int16 Day : Public, HasFieldMarshal
    Int16 Hour : Public, HasFieldMarshal
    Int16 Minute : Public, HasFieldMarshal
    Int16 Second : Public, HasFieldMarshal
    Int16 Milliseconds : Public, HasFieldMarshal
Struct Microsoft.Win32.NativeMethods+TimeZoneInformation: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, UnicodeClass, BeforeFieldInit
  :System.ValueType
    Void .ctor(DynamicTimeZoneInformation): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Bias : Public, HasFieldMarshal
    System.String StandardName : Public, HasFieldMarshal
    SystemTime StandardDate : Public
    Int32 StandardBias : Public, HasFieldMarshal
    System.String DaylightName : Public, HasFieldMarshal
    SystemTime DaylightDate : Public
    Int32 DaylightBias : Public, HasFieldMarshal
Struct Microsoft.Win32.NativeMethods+DynamicTimeZoneInformation: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, UnicodeClass, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 Bias : Public, HasFieldMarshal
    System.String StandardName : Public, HasFieldMarshal
    SystemTime StandardDate : Public
    Int32 StandardBias : Public, HasFieldMarshal
    System.String DaylightName : Public, HasFieldMarshal
    SystemTime DaylightDate : Public
    Int32 DaylightBias : Public, HasFieldMarshal
    System.String TimeZoneKeyName : Public, HasFieldMarshal
Struct Microsoft.Win32.NativeMethods+RegistryTimeZoneInformation: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(TimeZoneInformation): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Byte[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 Bias : Public, HasFieldMarshal
    Int32 StandardBias : Public, HasFieldMarshal
    Int32 DaylightBias : Public, HasFieldMarshal
    SystemTime StandardDate : Public
    SystemTime DaylightDate : Public
Class Microsoft.Win32.UnsafeNativeMethods: AutoLayout, AnsiClass, Class, Abstract, Sealed, HasSecurity, BeforeFieldInit
  Fields:
    IntPtr NULL : Assembly, Static, InitOnly
    System.String KERNEL32 = kernel32.dll : Assembly, Static, Literal, HasDefault
    System.String ADVAPI32 = advapi32.dll : Assembly, Static, Literal, HasDefault
    Int32 ERROR_HANDLE_EOF = 38 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_INVALID_DRIVE = 15 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_NO_MORE_FILES = 18 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_NOT_READY = 21 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_BAD_LENGTH = 24 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_SHARING_VIOLATION = 32 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_FILE_EXISTS = 80 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_OPERATION_ABORTED = 995 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_INVALID_HANDLE = 6 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_INVALID_NAME = 123 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_BAD_PATHNAME = 161 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_ALREADY_EXISTS = 183 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_ENVVAR_NOT_FOUND = 203 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_FILENAME_EXCED_RANGE = 206 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_MORE_DATA = 234 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_NOT_FOUND = 1168 : Assembly, Static, Literal, HasDefault
    Int32 SECURITY_SQOS_PRESENT = 1048576 : Assembly, Static, Literal, HasDefault
    Int32 SECURITY_ANONYMOUS = 0 : Assembly, Static, Literal, HasDefault
    Int32 SECURITY_IDENTIFICATION = 65536 : Assembly, Static, Literal, HasDefault
    Int32 SECURITY_IMPERSONATION = 131072 : Assembly, Static, Literal, HasDefault
    Int32 SECURITY_DELEGATION = 196608 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_BROKEN_PIPE = 109 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_IO_PENDING = 997 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_PIPE_BUSY = 231 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_NO_DATA = 232 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_PIPE_NOT_CONNECTED = 233 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_PIPE_CONNECTED = 535 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_PIPE_LISTENING = 536 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_FILE_NOT_FOUND = 2 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_PATH_NOT_FOUND = 3 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_ACCESS_DENIED = 5 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_INVALID_PARAMETER = 87 : Assembly, Static, Literal, HasDefault
    Int32 GENERIC_READ = -2147483648 : Assembly, Static, Literal, HasDefault
    Int32 GENERIC_WRITE = 1073741824 : Assembly, Static, Literal, HasDefault
    Int32 STD_INPUT_HANDLE = -10 : Assembly, Static, Literal, HasDefault
    Int32 STD_OUTPUT_HANDLE = -11 : Assembly, Static, Literal, HasDefault
    Int32 STD_ERROR_HANDLE = -12 : Assembly, Static, Literal, HasDefault
    Int32 DUPLICATE_SAME_ACCESS = 2 : Assembly, Static, Literal, HasDefault
    Int32 PIPE_ACCESS_INBOUND = 1 : Assembly, Static, Literal, HasDefault
    Int32 PIPE_ACCESS_OUTBOUND = 2 : Assembly, Static, Literal, HasDefault
    Int32 PIPE_ACCESS_DUPLEX = 3 : Assembly, Static, Literal, HasDefault
    Int32 PIPE_TYPE_BYTE = 0 : Assembly, Static, Literal, HasDefault
    Int32 PIPE_TYPE_MESSAGE = 4 : Assembly, Static, Literal, HasDefault
    Int32 PIPE_READMODE_BYTE = 0 : Assembly, Static, Literal, HasDefault
    Int32 PIPE_READMODE_MESSAGE = 2 : Assembly, Static, Literal, HasDefault
    Int32 PIPE_UNLIMITED_INSTANCES = 255 : Assembly, Static, Literal, HasDefault
    Int32 FILE_FLAG_FIRST_PIPE_INSTANCE = 524288 : Assembly, Static, Literal, HasDefault
    Int32 FILE_SHARE_READ = 1 : Assembly, Static, Literal, HasDefault
    Int32 FILE_SHARE_WRITE = 2 : Assembly, Static, Literal, HasDefault
    Int32 FILE_ATTRIBUTE_NORMAL = 128 : Assembly, Static, Literal, HasDefault
    Int32 FILE_FLAG_OVERLAPPED = 1073741824 : Assembly, Static, Literal, HasDefault
    Int32 OPEN_EXISTING = 3 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_SUCCESS = 0 : Assembly, Static, Literal, HasDefault
    Int32 FILE_TYPE_DISK = 1 : Assembly, Static, Literal, HasDefault
    Int32 FILE_TYPE_CHAR = 2 : Assembly, Static, Literal, HasDefault
    Int32 FILE_TYPE_PIPE = 3 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_ARITHMETIC_OVERFLOW = 534 : Assembly, Static, Literal, HasDefault
    Int32 ERROR_NOT_ENOUGH_MEMORY = 8 : Assembly, Static, Literal, HasDefault
    Int32 SEM_FAILCRITICALERRORS = 1 : Assembly, Static, Literal, HasDefault
  Methods:
    EvtRender(EventLogHandle, EventLogHandle, EvtRenderFlags, Int32, IntPtr, Int32&(Out), Int32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtFormatMessage(EventLogHandle, EventLogHandle, UInt32, Int32, EvtStringVariant[], EvtFormatMessageFlags(HasFieldMarshal), Int32, StringBuilder(Out, HasFieldMarshal), Int32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtFormatMessageBuffer(EventLogHandle, EventLogHandle, UInt32, Int32, IntPtr, EvtFormatMessageFlags(HasFieldMarshal), Int32, IntPtr, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtOpenSession(EvtLoginClass(HasFieldMarshal), EvtRpcLogin&, Int32, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtCreateBookmark(String(HasFieldMarshal)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtUpdateBookmark(EventLogHandle, EventLogHandle): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtSubscribe(EventLogHandle, SafeWaitHandle, String(HasFieldMarshal), String(HasFieldMarshal), EventLogHandle, IntPtr, IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtNext(EventLogHandle, Int32, IntPtr[](HasFieldMarshal), Int32, Int32, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtCancel(EventLogHandle): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtClose(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtGetEventInfo(EventLogHandle, EvtEventPropertyId(HasFieldMarshal), Int32, IntPtr, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtGetQueryInfo(EventLogHandle, EvtQueryPropertyId(HasFieldMarshal), Int32, IntPtr, Int32&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtOpenPublisherMetadata(EventLogHandle, String(HasFieldMarshal), String(HasFieldMarshal), Int32, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtGetPublisherMetadataProperty(EventLogHandle, EvtPublisherMetadataPropertyId(HasFieldMarshal), Int32, Int32, IntPtr, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtGetObjectArraySize(EventLogHandle, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtGetObjectArrayProperty(EventLogHandle, Int32, Int32, Int32, Int32, IntPtr, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtOpenEventMetadataEnum(EventLogHandle, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtNextEventMetadata(EventLogHandle, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtGetEventMetadataProperty(EventLogHandle, EvtEventMetadataPropertyId(HasFieldMarshal), Int32, Int32, IntPtr, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtOpenChannelEnum(EventLogHandle, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtNextChannelPath(EventLogHandle, Int32, StringBuilder(Out, HasFieldMarshal), Int32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtOpenPublisherEnum(EventLogHandle, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtNextPublisherId(EventLogHandle, Int32, StringBuilder(Out, HasFieldMarshal), Int32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtOpenChannelConfig(EventLogHandle, String(HasFieldMarshal), Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtSaveChannelConfig(EventLogHandle, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtSetChannelConfigProperty(EventLogHandle, EvtChannelConfigPropertyId(HasFieldMarshal), Int32, EvtVariant&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtGetChannelConfigProperty(EventLogHandle, EvtChannelConfigPropertyId(HasFieldMarshal), Int32, Int32, IntPtr, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtOpenLog(EventLogHandle, String(HasFieldMarshal), PathType(HasFieldMarshal)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtGetLogInfo(EventLogHandle, EvtLogPropertyId(HasFieldMarshal), Int32, IntPtr, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtExportLog(EventLogHandle, String(HasFieldMarshal), String(HasFieldMarshal), String(HasFieldMarshal), Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtArchiveExportedLog(EventLogHandle, String(HasFieldMarshal), Int32, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtClearLog(EventLogHandle, String(HasFieldMarshal), String(HasFieldMarshal), Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtCreateRenderContext(Int32, String[](HasFieldMarshal), EvtRenderContextFlags(HasFieldMarshal)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtRender(EventLogHandle, EventLogHandle, EvtRenderFlags, Int32, StringBuilder(Out, HasFieldMarshal), Int32&(Out), Int32&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetNamedPipeHandleState(SafePipeHandle, Int32*, IntPtr, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    DisconnectNamedPipe(SafePipeHandle): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    FlushFileBuffers(SafePipeHandle): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    RevertToSelf(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    ImpersonateNamedPipeClient(SafePipeHandle): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    CreateNamedPipe(String, Int32, Int32, Int32, Int32, Int32, Int32, SECURITY_ATTRIBUTES): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    ReadFile(SafePipeHandle, Byte*, Int32, IntPtr, NativeOverlapped*): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    ReadFile(SafePipeHandle, Byte*, Int32, Int32&(Out), IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    WriteFile(SafePipeHandle, Byte*, Int32, IntPtr, NativeOverlapped*): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    WriteFile(SafePipeHandle, Byte*, Int32, Int32&(Out), IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetEndOfFile(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EventRegister(Guid&(In), EtwEnableCallback(In), Void*(In), Int64&(In, Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EventUnregister(Int64(In)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EventEnabled(Int64(In), EventDescriptor&(In)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EventProviderEnabled(Int64(In), Byte(In), Int64(In)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EventWrite(Int64(In), EventDescriptor&(In), UInt32(In), Void*(In)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EventWrite(Int64(In), EventDescriptor*(In), UInt32(In), Void*(In)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EventWriteTransfer(Int64(In), EventDescriptor&(In), Guid&(In), Guid&(In), UInt32(In), Void*(In)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EventWriteString(Int64(In), Byte(In), Int64(In), Char*(In)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EventActivityIdControl(Int32(In), Guid&(In, Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    PerfStartProvider(Guid&(In), PERFLIBREQUEST(In), SafePerfProviderHandle&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    PerfStopProvider(IntPtr(In)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    PerfSetCounterSetInfo(SafePerfProviderHandle(In), PerfCounterSetInfoStruct*(In, Out), UInt32(In)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    PerfCreateInstance(SafePerfProviderHandle(In), Guid&(In), String(In), UInt32(In)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    PerfDeleteInstance(SafePerfProviderHandle(In), PerfCounterSetInstanceStruct*(In)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    PerfSetCounterRefValue(SafePerfProviderHandle(In), PerfCounterSetInstanceStruct*(In), UInt32(In), Void*(In)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtQuery(EventLogHandle, String(HasFieldMarshal), String(HasFieldMarshal), Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    EvtSeek(EventLogHandle, Int64, EventLogHandle, Int32, EvtSeekFlags(HasFieldMarshal)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetFileType(SafeFileHandle): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    WriteFile(SafeFileHandle, Byte*, Int32, Int32&(Out), NativeOverlapped*): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SafeCreateFile(String, Int32, FileShare, SECURITY_ATTRIBUTES, FileMode, Int32, IntPtr): PrivateScope, Assembly, Static, HideBySig
    SetErrorMode(Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    SetFilePointer(SafeFileHandle, Int64, SeekOrigin, Int32&(Out)): PrivateScope, Assembly, Static, HideBySig
    MakeHRFromErrorCode(Int32): PrivateScope, Assembly, Static, HideBySig
    FormatMessage(Int32, IntPtr, Int32, Int32, StringBuilder, Int32, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetMessage(Int32): PrivateScope, Assembly, Static, HideBySig
    GetTimeZoneInformation(TimeZoneInformation&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetDynamicTimeZoneInformation(DynamicTimeZoneInformation&(Out)): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetFileMUIPath(Int32, String(HasFieldMarshal), StringBuilder(HasFieldMarshal), Int32&, StringBuilder(HasFieldMarshal), Int32&, Int64&): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LoadString(SafeLibraryHandle, Int32, StringBuilder, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    LoadLibraryEx(String, IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    FreeLibrary(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    CloseHandle(IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetCurrentProcess(): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    DuplicateHandle(IntPtr, SafePipeHandle, IntPtr, SafePipeHandle&(Out), UInt32, Boolean(HasFieldMarshal), UInt32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetFileType(SafePipeHandle): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    CreatePipe(SafePipeHandle&(Out), SafePipeHandle&(Out), SECURITY_ATTRIBUTES, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    CreateNamedPipeClient(String, Int32, FileShare, SECURITY_ATTRIBUTES, FileMode, Int32, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    ConnectNamedPipe(SafePipeHandle, NativeOverlapped*): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    ConnectNamedPipe(SafePipeHandle, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    WaitNamedPipe(String, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    GetNamedPipeHandleState(SafePipeHandle, Int32&(Out), IntPtr, IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetNamedPipeHandleState(SafePipeHandle, IntPtr, Int32&(Out), IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetNamedPipeHandleState(SafePipeHandle, IntPtr, IntPtr, IntPtr, IntPtr, StringBuilder, Int32): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetNamedPipeInfo(SafePipeHandle, Int32&(Out), IntPtr, IntPtr, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetNamedPipeInfo(SafePipeHandle, IntPtr, Int32&(Out), IntPtr, IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
    GetNamedPipeInfo(SafePipeHandle, IntPtr, IntPtr, Int32&(Out), IntPtr): PrivateScope, Assembly, Static, HideBySig, PinvokeImpl
Class Microsoft.Win32.UnsafeNativeMethods+SECURITY_ATTRIBUTES: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 nLength : Assembly
    Byte* pSecurityDescriptor : Assembly
    Int32 bInheritHandle : Assembly
Class Microsoft.Win32.UnsafeNativeMethods+EtwEnableCallback: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Guid&(In), Int32(In), Byte(In), Int64(In), Int64(In), Void*(In), Void*(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Guid&(In), Int32(In), Byte(In), Int64(In), Int64(In), Void*(In), Void*(In), AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(Guid&(In), IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Microsoft.Win32.UnsafeNativeMethods+PerfCounterSetInfoStruct: AutoLayout, AnsiClass, Class, NestedAssembly, ExplicitLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.Guid CounterSetGuid : Assembly
    System.Guid ProviderGuid : Assembly
    UInt32 NumCounters : Assembly
    UInt32 InstanceType : Assembly
Struct Microsoft.Win32.UnsafeNativeMethods+PerfCounterInfoStruct: AutoLayout, AnsiClass, Class, NestedAssembly, ExplicitLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 CounterId : Assembly
    UInt32 CounterType : Assembly
    Int64 Attrib : Assembly
    UInt32 Size : Assembly
    UInt32 DetailLevel : Assembly
    UInt32 Scale : Assembly
    UInt32 Offset : Assembly
Struct Microsoft.Win32.UnsafeNativeMethods+PerfCounterSetInstanceStruct: AutoLayout, AnsiClass, Class, NestedAssembly, ExplicitLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.Guid CounterSetGuid : Assembly
    UInt32 dwSize : Assembly
    UInt32 InstanceId : Assembly
    UInt32 InstanceNameOffset : Assembly
    UInt32 InstanceNameSize : Assembly
Class Microsoft.Win32.UnsafeNativeMethods+PERFLIBREQUEST: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(UInt32(In), Void*(In), UInt32(In)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(UInt32(In), Void*(In), UInt32(In), AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Microsoft.Win32.UnsafeNativeMethods+EvtQueryFlags: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EvtQueryFlags EvtQueryChannelPath = 1 : Public, Static, Literal, HasDefault
    EvtQueryFlags EvtQueryFilePath = 2 : Public, Static, Literal, HasDefault
    EvtQueryFlags EvtQueryForwardDirection = 256 : Public, Static, Literal, HasDefault
    EvtQueryFlags EvtQueryReverseDirection = 512 : Public, Static, Literal, HasDefault
    EvtQueryFlags EvtQueryTolerateQueryErrors = 4096 : Public, Static, Literal, HasDefault
Struct Microsoft.Win32.UnsafeNativeMethods+EvtSubscribeFlags: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EvtSubscribeFlags EvtSubscribeToFutureEvents = 1 : Public, Static, Literal, HasDefault
    EvtSubscribeFlags EvtSubscribeStartAtOldestRecord = 2 : Public, Static, Literal, HasDefault
    EvtSubscribeFlags EvtSubscribeStartAfterBookmark = 3 : Public, Static, Literal, HasDefault
    EvtSubscribeFlags EvtSubscribeTolerateQueryErrors = 4096 : Public, Static, Literal, HasDefault
    EvtSubscribeFlags EvtSubscribeStrict = 65536 : Public, Static, Literal, HasDefault
Struct Microsoft.Win32.UnsafeNativeMethods+NativeErrorCodes: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    NativeErrorCodes ERROR_SUCCESS = 0 : Public, Static, Literal, HasDefault
    NativeErrorCodes ERROR_INVALID_PARAMETER = 87 : Public, Static, Literal, HasDefault
    NativeErrorCodes ERROR_INSUFFICIENT_BUFFER = 122 : Public, Static, Literal, HasDefault
    NativeErrorCodes ERROR_NO_MORE_ITEMS = 259 : Public, Static, Literal, HasDefault
    NativeErrorCodes ERROR_RESOURCE_LANG_NOT_FOUND = 1815 : Public, Static, Literal, HasDefault
    NativeErrorCodes ERROR_EVT_MESSAGE_NOT_FOUND = 15027 : Public, Static, Literal, HasDefault
    NativeErrorCodes ERROR_EVT_MESSAGE_ID_NOT_FOUND = 15028 : Public, Static, Literal, HasDefault
    NativeErrorCodes ERROR_EVT_UNRESOLVED_VALUE_INSERT = 15029 : Public, Static, Literal, HasDefault
    NativeErrorCodes ERROR_EVT_MESSAGE_LOCALE_NOT_FOUND = 15033 : Public, Static, Literal, HasDefault
    NativeErrorCodes ERROR_MUI_FILE_NOT_FOUND = 15100 : Public, Static, Literal, HasDefault
Struct Microsoft.Win32.UnsafeNativeMethods+EvtVariantType: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EvtVariantType EvtVarTypeNull = 0 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeString = 1 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeAnsiString = 2 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeSByte = 3 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeByte = 4 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeInt16 = 5 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeUInt16 = 6 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeInt32 = 7 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeUInt32 = 8 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeInt64 = 9 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeUInt64 = 10 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeSingle = 11 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeDouble = 12 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeBoolean = 13 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeBinary = 14 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeGuid = 15 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeSizeT = 16 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeFileTime = 17 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeSysTime = 18 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeSid = 19 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeHexInt32 = 20 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeHexInt64 = 21 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeEvtHandle = 32 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeEvtXml = 35 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeStringArray = 129 : Public, Static, Literal, HasDefault
    EvtVariantType EvtVarTypeUInt32Array = 136 : Public, Static, Literal, HasDefault
Struct Microsoft.Win32.UnsafeNativeMethods+EvtMasks: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EvtMasks EVT_VARIANT_TYPE_MASK = 127 : Public, Static, Literal, HasDefault
    EvtMasks EVT_VARIANT_TYPE_ARRAY = 128 : Public, Static, Literal, HasDefault
Struct Microsoft.Win32.UnsafeNativeMethods+EvtVariant: AutoLayout, AnsiClass, Class, NestedAssembly, ExplicitLayout, Sealed, AutoClass, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt32 UInteger : Public
    Int32 Integer : Public
    Byte UInt8 : Public
    Int16 Short : Public
    UInt16 UShort : Public
    UInt32 Bool : Public
    Byte ByteVal : Public
    Byte SByte : Public
    UInt64 ULong : Public
    Int64 Long : Public
    Double Double : Public
    IntPtr StringVal : Public
    IntPtr AnsiString : Public
    IntPtr SidVal : Public
    IntPtr Binary : Public
    IntPtr Reference : Public
    IntPtr Handle : Public
    IntPtr GuidReference : Public
    UInt64 FileTime : Public
    IntPtr SystemTime : Public
    UInt32 Count : Public
    UInt32 Type : Public
Struct Microsoft.Win32.UnsafeNativeMethods+EvtEventPropertyId: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EvtEventPropertyId EvtEventQueryIDs = 0 : Public, Static, Literal, HasDefault
    EvtEventPropertyId EvtEventPath = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Win32.UnsafeNativeMethods+EvtQueryPropertyId: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EvtQueryPropertyId EvtQueryNames = 0 : Public, Static, Literal, HasDefault
    EvtQueryPropertyId EvtQueryStatuses = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Win32.UnsafeNativeMethods+EvtPublisherMetadataPropertyId: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EvtPublisherMetadataPropertyId EvtPublisherMetadataPublisherGuid = 0 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataResourceFilePath = 1 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataParameterFilePath = 2 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataMessageFilePath = 3 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataHelpLink = 4 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataPublisherMessageID = 5 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataChannelReferences = 6 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataChannelReferencePath = 7 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataChannelReferenceIndex = 8 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataChannelReferenceID = 9 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataChannelReferenceFlags = 10 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataChannelReferenceMessageID = 11 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataLevels = 12 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataLevelName = 13 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataLevelValue = 14 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataLevelMessageID = 15 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataTasks = 16 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataTaskName = 17 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataTaskEventGuid = 18 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataTaskValue = 19 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataTaskMessageID = 20 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataOpcodes = 21 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataOpcodeName = 22 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataOpcodeValue = 23 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataOpcodeMessageID = 24 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataKeywords = 25 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataKeywordName = 26 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataKeywordValue = 27 : Public, Static, Literal, HasDefault
    EvtPublisherMetadataPropertyId EvtPublisherMetadataKeywordMessageID = 28 : Public, Static, Literal, HasDefault
Struct Microsoft.Win32.UnsafeNativeMethods+EvtChannelReferenceFlags: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EvtChannelReferenceFlags EvtChannelReferenceImported = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Win32.UnsafeNativeMethods+EvtEventMetadataPropertyId: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EvtEventMetadataPropertyId EventMetadataEventID = 0 : Public, Static, Literal, HasDefault
    EvtEventMetadataPropertyId EventMetadataEventVersion = 1 : Public, Static, Literal, HasDefault
    EvtEventMetadataPropertyId EventMetadataEventChannel = 2 : Public, Static, Literal, HasDefault
    EvtEventMetadataPropertyId EventMetadataEventLevel = 3 : Public, Static, Literal, HasDefault
    EvtEventMetadataPropertyId EventMetadataEventOpcode = 4 : Public, Static, Literal, HasDefault
    EvtEventMetadataPropertyId EventMetadataEventTask = 5 : Public, Static, Literal, HasDefault
    EvtEventMetadataPropertyId EventMetadataEventKeyword = 6 : Public, Static, Literal, HasDefault
    EvtEventMetadataPropertyId EventMetadataEventMessageID = 7 : Public, Static, Literal, HasDefault
    EvtEventMetadataPropertyId EventMetadataEventTemplate = 8 : Public, Static, Literal, HasDefault
Struct Microsoft.Win32.UnsafeNativeMethods+EvtChannelConfigPropertyId: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EvtChannelConfigPropertyId EvtChannelConfigEnabled = 0 : Public, Static, Literal, HasDefault
    EvtChannelConfigPropertyId EvtChannelConfigIsolation = 1 : Public, Static, Literal, HasDefault
    EvtChannelConfigPropertyId EvtChannelConfigType = 2 : Public, Static, Literal, HasDefault
    EvtChannelConfigPropertyId EvtChannelConfigOwningPublisher = 3 : Public, Static, Literal, HasDefault
    EvtChannelConfigPropertyId EvtChannelConfigClassicEventlog = 4 : Public, Static, Literal, HasDefault
    EvtChannelConfigPropertyId EvtChannelConfigAccess = 5 : Public, Static, Literal, HasDefault
    EvtChannelConfigPropertyId EvtChannelLoggingConfigRetention = 6 : Public, Static, Literal, HasDefault
    EvtChannelConfigPropertyId EvtChannelLoggingConfigAutoBackup = 7 : Public, Static, Literal, HasDefault
    EvtChannelConfigPropertyId EvtChannelLoggingConfigMaxSize = 8 : Public, Static, Literal, HasDefault
    EvtChannelConfigPropertyId EvtChannelLoggingConfigLogFilePath = 9 : Public, Static, Literal, HasDefault
    EvtChannelConfigPropertyId EvtChannelPublishingConfigLevel = 10 : Public, Static, Literal, HasDefault
    EvtChannelConfigPropertyId EvtChannelPublishingConfigKeywords = 11 : Public, Static, Literal, HasDefault
    EvtChannelConfigPropertyId EvtChannelPublishingConfigControlGuid = 12 : Public, Static, Literal, HasDefault
    EvtChannelConfigPropertyId EvtChannelPublishingConfigBufferSize = 13 : Public, Static, Literal, HasDefault
    EvtChannelConfigPropertyId EvtChannelPublishingConfigMinBuffers = 14 : Public, Static, Literal, HasDefault
    EvtChannelConfigPropertyId EvtChannelPublishingConfigMaxBuffers = 15 : Public, Static, Literal, HasDefault
    EvtChannelConfigPropertyId EvtChannelPublishingConfigLatency = 16 : Public, Static, Literal, HasDefault
    EvtChannelConfigPropertyId EvtChannelPublishingConfigClockType = 17 : Public, Static, Literal, HasDefault
    EvtChannelConfigPropertyId EvtChannelPublishingConfigSidType = 18 : Public, Static, Literal, HasDefault
    EvtChannelConfigPropertyId EvtChannelPublisherList = 19 : Public, Static, Literal, HasDefault
    EvtChannelConfigPropertyId EvtChannelConfigPropertyIdEND = 20 : Public, Static, Literal, HasDefault
Struct Microsoft.Win32.UnsafeNativeMethods+EvtLogPropertyId: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EvtLogPropertyId EvtLogCreationTime = 0 : Public, Static, Literal, HasDefault
    EvtLogPropertyId EvtLogLastAccessTime = 1 : Public, Static, Literal, HasDefault
    EvtLogPropertyId EvtLogLastWriteTime = 2 : Public, Static, Literal, HasDefault
    EvtLogPropertyId EvtLogFileSize = 3 : Public, Static, Literal, HasDefault
    EvtLogPropertyId EvtLogAttributes = 4 : Public, Static, Literal, HasDefault
    EvtLogPropertyId EvtLogNumberOfLogRecords = 5 : Public, Static, Literal, HasDefault
    EvtLogPropertyId EvtLogOldestRecordNumber = 6 : Public, Static, Literal, HasDefault
    EvtLogPropertyId EvtLogFull = 7 : Public, Static, Literal, HasDefault
Struct Microsoft.Win32.UnsafeNativeMethods+EvtExportLogFlags: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EvtExportLogFlags EvtExportLogChannelPath = 1 : Public, Static, Literal, HasDefault
    EvtExportLogFlags EvtExportLogFilePath = 2 : Public, Static, Literal, HasDefault
    EvtExportLogFlags EvtExportLogTolerateQueryErrors = 4096 : Public, Static, Literal, HasDefault
Struct Microsoft.Win32.UnsafeNativeMethods+EvtRenderContextFlags: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EvtRenderContextFlags EvtRenderContextValues = 0 : Public, Static, Literal, HasDefault
    EvtRenderContextFlags EvtRenderContextSystem = 1 : Public, Static, Literal, HasDefault
    EvtRenderContextFlags EvtRenderContextUser = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Win32.UnsafeNativeMethods+EvtRenderFlags: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EvtRenderFlags EvtRenderEventValues = 0 : Public, Static, Literal, HasDefault
    EvtRenderFlags EvtRenderEventXml = 1 : Public, Static, Literal, HasDefault
    EvtRenderFlags EvtRenderBookmark = 2 : Public, Static, Literal, HasDefault
Struct Microsoft.Win32.UnsafeNativeMethods+EvtFormatMessageFlags: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EvtFormatMessageFlags EvtFormatMessageEvent = 1 : Public, Static, Literal, HasDefault
    EvtFormatMessageFlags EvtFormatMessageLevel = 2 : Public, Static, Literal, HasDefault
    EvtFormatMessageFlags EvtFormatMessageTask = 3 : Public, Static, Literal, HasDefault
    EvtFormatMessageFlags EvtFormatMessageOpcode = 4 : Public, Static, Literal, HasDefault
    EvtFormatMessageFlags EvtFormatMessageKeyword = 5 : Public, Static, Literal, HasDefault
    EvtFormatMessageFlags EvtFormatMessageChannel = 6 : Public, Static, Literal, HasDefault
    EvtFormatMessageFlags EvtFormatMessageProvider = 7 : Public, Static, Literal, HasDefault
    EvtFormatMessageFlags EvtFormatMessageId = 8 : Public, Static, Literal, HasDefault
    EvtFormatMessageFlags EvtFormatMessageXml = 9 : Public, Static, Literal, HasDefault
Struct Microsoft.Win32.UnsafeNativeMethods+EvtSystemPropertyId: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EvtSystemPropertyId EvtSystemProviderName = 0 : Public, Static, Literal, HasDefault
    EvtSystemPropertyId EvtSystemProviderGuid = 1 : Public, Static, Literal, HasDefault
    EvtSystemPropertyId EvtSystemEventID = 2 : Public, Static, Literal, HasDefault
    EvtSystemPropertyId EvtSystemQualifiers = 3 : Public, Static, Literal, HasDefault
    EvtSystemPropertyId EvtSystemLevel = 4 : Public, Static, Literal, HasDefault
    EvtSystemPropertyId EvtSystemTask = 5 : Public, Static, Literal, HasDefault
    EvtSystemPropertyId EvtSystemOpcode = 6 : Public, Static, Literal, HasDefault
    EvtSystemPropertyId EvtSystemKeywords = 7 : Public, Static, Literal, HasDefault
    EvtSystemPropertyId EvtSystemTimeCreated = 8 : Public, Static, Literal, HasDefault
    EvtSystemPropertyId EvtSystemEventRecordId = 9 : Public, Static, Literal, HasDefault
    EvtSystemPropertyId EvtSystemActivityID = 10 : Public, Static, Literal, HasDefault
    EvtSystemPropertyId EvtSystemRelatedActivityID = 11 : Public, Static, Literal, HasDefault
    EvtSystemPropertyId EvtSystemProcessID = 12 : Public, Static, Literal, HasDefault
    EvtSystemPropertyId EvtSystemThreadID = 13 : Public, Static, Literal, HasDefault
    EvtSystemPropertyId EvtSystemChannel = 14 : Public, Static, Literal, HasDefault
    EvtSystemPropertyId EvtSystemComputer = 15 : Public, Static, Literal, HasDefault
    EvtSystemPropertyId EvtSystemUserID = 16 : Public, Static, Literal, HasDefault
    EvtSystemPropertyId EvtSystemVersion = 17 : Public, Static, Literal, HasDefault
    EvtSystemPropertyId EvtSystemPropertyIdEND = 18 : Public, Static, Literal, HasDefault
Struct Microsoft.Win32.UnsafeNativeMethods+EvtLoginClass: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EvtLoginClass EvtRpcLogin = 1 : Public, Static, Literal, HasDefault
Struct Microsoft.Win32.UnsafeNativeMethods+EvtRpcLogin: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, AutoClass, BeforeFieldInit
  :System.ValueType
  Fields:
    System.String Server : Public, HasFieldMarshal
    System.String User : Public, HasFieldMarshal
    System.String Domain : Public, HasFieldMarshal
    System.Diagnostics.Eventing.Reader.CoTaskMemUnicodeSafeHandle Password : Public
    Int32 Flags : Public
Struct Microsoft.Win32.UnsafeNativeMethods+EvtSeekFlags: AutoLayout, AnsiClass, Class, NestedAssembly, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    EvtSeekFlags EvtSeekRelativeToFirst = 1 : Public, Static, Literal, HasDefault
    EvtSeekFlags EvtSeekRelativeToLast = 2 : Public, Static, Literal, HasDefault
    EvtSeekFlags EvtSeekRelativeToCurrent = 3 : Public, Static, Literal, HasDefault
    EvtSeekFlags EvtSeekRelativeToBookmark = 4 : Public, Static, Literal, HasDefault
    EvtSeekFlags EvtSeekOriginMask = 7 : Public, Static, Literal, HasDefault
    EvtSeekFlags EvtSeekStrict = 65536 : Public, Static, Literal, HasDefault
Struct Microsoft.Win32.UnsafeNativeMethods+EvtStringVariant: AutoLayout, AnsiClass, Class, NestedAssembly, ExplicitLayout, Sealed, AutoClass, BeforeFieldInit
  :System.ValueType
  Fields:
    System.String StringVal : Public, HasFieldMarshal
    UInt32 Count : Public
    UInt32 Type : Public
Class Microsoft.Win32.SafeLibraryHandle: AutoLayout, AnsiClass, Class, Sealed, HasSecurity, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Win32.SafeHandles.SafePipeHandle: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
    Void .ctor(IntPtr, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Microsoft.Win32.SafeHandles.SafePerfProviderHandle: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
Struct System.TimeZoneInfoOptions: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.TimeZoneInfoOptions None = 1 : Public, Static, Literal, HasDefault
    System.TimeZoneInfoOptions NoThrowOnInvalidTime = 2 : Public, Static, Literal, HasDefault
Class System.TimeZoneInfo: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable, HasSecurity, BeforeFieldInit
  Interfaces:
    System.IEquatable`1[System.TimeZoneInfo]
    System.Runtime.Serialization.ISerializable
    System.Runtime.Serialization.IDeserializationCallback
  Properties:
    System.String Id 'get ' : 
    System.String DisplayName 'get ' : 
    System.String StandardName 'get ' : 
    System.String DaylightName 'get ' : 
    System.TimeSpan BaseUtcOffset 'get ' : 
    Boolean SupportsDaylightSavingTime 'get ' : 
    System.TimeZoneInfo Local 'get ' : 
    System.TimeZoneInfo Utc 'get ' : 
  Methods:
    get_Id(): PrivateScope, Public, HideBySig, SpecialName
    get_DisplayName(): PrivateScope, Public, HideBySig, SpecialName
    get_StandardName(): PrivateScope, Public, HideBySig, SpecialName
    get_DaylightName(): PrivateScope, Public, HideBySig, SpecialName
    get_BaseUtcOffset(): PrivateScope, Public, HideBySig, SpecialName
    get_SupportsDaylightSavingTime(): PrivateScope, Public, HideBySig, SpecialName
    GetAdjustmentRules(): PrivateScope, Public, HideBySig
    GetAmbiguousTimeOffsets(DateTimeOffset): PrivateScope, Public, HideBySig
    GetAmbiguousTimeOffsets(DateTime): PrivateScope, Public, HideBySig
    GetUtcOffset(DateTimeOffset): PrivateScope, Public, HideBySig
    GetUtcOffset(DateTime): PrivateScope, Public, HideBySig
    IsAmbiguousTime(DateTimeOffset): PrivateScope, Public, HideBySig
    IsAmbiguousTime(DateTime): PrivateScope, Public, HideBySig
    IsDaylightSavingTime(DateTimeOffset): PrivateScope, Public, HideBySig
    IsDaylightSavingTime(DateTime): PrivateScope, Public, HideBySig
    IsInvalidTime(DateTime): PrivateScope, Public, HideBySig
    ClearCachedData(): PrivateScope, Public, Static, HideBySig
    ConvertTimeBySystemTimeZoneId(DateTimeOffset, String): PrivateScope, Public, Static, HideBySig
    ConvertTimeBySystemTimeZoneId(DateTime, String): PrivateScope, Public, Static, HideBySig
    ConvertTimeBySystemTimeZoneId(DateTime, String, String): PrivateScope, Public, Static, HideBySig
    ConvertTime(DateTimeOffset, TimeZoneInfo): PrivateScope, Public, Static, HideBySig
    ConvertTime(DateTime, TimeZoneInfo): PrivateScope, Public, Static, HideBySig
    ConvertTime(DateTime, TimeZoneInfo, TimeZoneInfo): PrivateScope, Public, Static, HideBySig
    ConvertTime(DateTime, TimeZoneInfo, TimeZoneInfo, TimeZoneInfoOptions): PrivateScope, Assembly, Static, HideBySig
    ConvertTimeFromUtc(DateTime, TimeZoneInfo): PrivateScope, Public, Static, HideBySig
    ConvertTimeToUtc(DateTime): PrivateScope, Public, Static, HideBySig
    ConvertTimeToUtc(DateTime, TimeZoneInfo): PrivateScope, Public, Static, HideBySig
    Equals(TimeZoneInfo): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    FindSystemTimeZoneById(String): PrivateScope, Public, Static, HideBySig
    FromSerializedString(String): PrivateScope, Public, Static, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    GetSystemTimeZones(): PrivateScope, Public, Static, HideBySig
    HasSameRules(TimeZoneInfo): PrivateScope, Public, HideBySig
    get_Local(): PrivateScope, Public, Static, HideBySig, SpecialName
    ToSerializedString(): PrivateScope, Public, HideBySig
    ToString(): PrivateScope, Public, Virtual, HideBySig
    get_Utc(): PrivateScope, Public, Static, HideBySig, SpecialName
    CreateCustomTimeZone(String, TimeSpan, String, String): PrivateScope, Public, Static, HideBySig
    CreateCustomTimeZone(String, TimeSpan, String, String, String, AdjustmentRule[]): PrivateScope, Public, Static, HideBySig
    CreateCustomTimeZone(String, TimeSpan, String, String, String, AdjustmentRule[], Boolean): PrivateScope, Public, Static, HideBySig
    UtcOffsetOutOfRange(TimeSpan): PrivateScope, Assembly, Static, HideBySig
Class System.TimeZoneInfo+AdjustmentRule: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, Serializable, HasSecurity, BeforeFieldInit
  Interfaces:
    System.IEquatable`1[System.TimeZoneInfo+AdjustmentRule]
    System.Runtime.Serialization.ISerializable
    System.Runtime.Serialization.IDeserializationCallback
  Properties:
    System.DateTime DateStart 'get ' : 
    System.DateTime DateEnd 'get ' : 
    System.TimeSpan DaylightDelta 'get ' : 
    TransitionTime DaylightTransitionStart 'get ' : 
    TransitionTime DaylightTransitionEnd 'get ' : 
  Methods:
    get_DateStart(): PrivateScope, Public, HideBySig, SpecialName
    get_DateEnd(): PrivateScope, Public, HideBySig, SpecialName
    get_DaylightDelta(): PrivateScope, Public, HideBySig, SpecialName
    get_DaylightTransitionStart(): PrivateScope, Public, HideBySig, SpecialName
    get_DaylightTransitionEnd(): PrivateScope, Public, HideBySig, SpecialName
    Equals(AdjustmentRule): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    CreateAdjustmentRule(DateTime, DateTime, TimeSpan, TransitionTime, TransitionTime): PrivateScope, Public, Static, HideBySig
Struct System.TimeZoneInfo+TransitionTime: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, Serializable, HasSecurity, BeforeFieldInit
  :System.ValueType
  Interfaces:
    System.IEquatable`1[System.TimeZoneInfo+TransitionTime]
    System.Runtime.Serialization.ISerializable
    System.Runtime.Serialization.IDeserializationCallback
  Properties:
    System.DateTime TimeOfDay 'get ' : 
    Int32 Month 'get ' : 
    Int32 Week 'get ' : 
    Int32 Day  'get ' : 
    System.DayOfWeek DayOfWeek 'get ' : 
    Boolean IsFixedDateRule 'get ' : 
  Methods:
    get_TimeOfDay(): PrivateScope, Public, HideBySig, SpecialName
    get_Month(): PrivateScope, Public, HideBySig, SpecialName
    get_Week(): PrivateScope, Public, HideBySig, SpecialName
    get_Day(): PrivateScope, Public, HideBySig, SpecialName
    get_DayOfWeek(): PrivateScope, Public, HideBySig, SpecialName
    get_IsFixedDateRule(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    op_Equality(TransitionTime, TransitionTime): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Inequality(TransitionTime, TransitionTime): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(TransitionTime): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    CreateFixedDateRule(DateTime, Int32, Int32): PrivateScope, Public, Static, HideBySig
    CreateFloatingDateRule(DateTime, Int32, Int32, DayOfWeek): PrivateScope, Public, Static, HideBySig
Class System.TimeZoneNotFoundException: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  :System.Exception
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.InvalidTimeZoneException: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  :System.Exception
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.IO.__Error: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    EndOfFile(): PrivateScope, Assembly, Static, HideBySig
    FileNotOpen(): PrivateScope, Assembly, Static, HideBySig
    PipeNotOpen(): PrivateScope, Assembly, Static, HideBySig
    ReadNotSupported(): PrivateScope, Assembly, Static, HideBySig
    SeekNotSupported(): PrivateScope, Assembly, Static, HideBySig
    WrongAsyncResult(): PrivateScope, Assembly, Static, HideBySig
    EndReadCalledTwice(): PrivateScope, Assembly, Static, HideBySig
    EndWriteCalledTwice(): PrivateScope, Assembly, Static, HideBySig
    EndWaitForConnectionCalledTwice(): PrivateScope, Assembly, Static, HideBySig
    GetDisplayablePath(String, Boolean): PrivateScope, Assembly, Static, HideBySig
    WinIOError(): PrivateScope, Assembly, Static, HideBySig
    WinIOError(Int32, String): PrivateScope, Assembly, Static, HideBySig
    WriteNotSupported(): PrivateScope, Assembly, Static, HideBySig
Class System.IO.BufferedStream2: AutoLayout, AnsiClass, Class, Abstract, HasSecurity, BeforeFieldInit
  :System.IO.Stream
  Methods:
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
Class System.IO.LogStream: AutoLayout, AnsiClass, Class, BeforeFieldInit
  :System.IO.BufferedStream2
    Void .ctor(System.String, Int32, System.IO.LogRetentionOption, Int64, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int64 DefaultFileSize = 10240000 : Assembly, Static, Literal, HasDefault
    Int32 DefaultNumberOfFiles = 2 : Assembly, Static, Literal, HasDefault
    System.IO.LogRetentionOption DefaultRetention = 2 : Assembly, Static, Literal, HasDefault
  Properties:
    Boolean CanRead 'get ' : 
    Boolean CanWrite 'get ' : 
    Boolean CanSeek 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
  Methods:
    _Init(String, Int32, FileShare, SECURITY_ATTRIBUTES, FileIOPermissionAccess, FileMode, Int32, Boolean): PrivateScope, Assembly, HideBySig
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    Read(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
Struct System.IO.LogRetentionOption: AutoLayout, AnsiClass, Class, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.LogRetentionOption SingleFileUnboundedSize = 2 : Public, Static, Literal, HasDefault
    System.IO.LogRetentionOption SingleFileBoundedSize = 4 : Public, Static, Literal, HasDefault
    System.IO.LogRetentionOption UnlimitedSequentialFiles = 0 : Public, Static, Literal, HasDefault
    System.IO.LogRetentionOption LimitedSequentialFiles = 3 : Public, Static, Literal, HasDefault
    System.IO.LogRetentionOption LimitedCircularFiles = 1 : Public, Static, Literal, HasDefault
Class System.Diagnostics.EventSchemaTraceListener: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
  :System.Diagnostics.TextWriterTraceListener
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, Int32, System.Diagnostics.TraceLogRetentionOption): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, Int32, System.Diagnostics.TraceLogRetentionOption, Int64): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.String, Int32, System.Diagnostics.TraceLogRetentionOption, Int64, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.IO.TextWriter Writer 'get set' : 
    Boolean IsThreadSafe 'get ' : 
    Int32 BufferSize 'get ' : 
    System.Diagnostics.TraceLogRetentionOption TraceLogRetentionOption 'get ' : 
    Int64 MaximumFileSize 'get ' : 
    Int32 MaximumNumberOfFiles 'get ' : 
  Methods:
    get_Writer(): PrivateScope, Public, HideBySig, SpecialName
    set_Writer(TextWriter): PrivateScope, Public, HideBySig, SpecialName
    get_IsThreadSafe(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_BufferSize(): PrivateScope, Public, HideBySig, SpecialName
    get_TraceLogRetentionOption(): PrivateScope, Public, HideBySig, SpecialName
    get_MaximumFileSize(): PrivateScope, Public, HideBySig, SpecialName
    get_MaximumNumberOfFiles(): PrivateScope, Public, HideBySig, SpecialName
    Close(): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    Write(String): PrivateScope, Public, Virtual, HideBySig
    WriteLine(String): PrivateScope, Public, Virtual, HideBySig
    Fail(String, String): PrivateScope, Public, Virtual, HideBySig
    TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[]): PrivateScope, Public, Virtual, HideBySig
    TraceEvent(TraceEventCache, String, TraceEventType, Int32, String): PrivateScope, Public, Virtual, HideBySig
    TraceData(TraceEventCache, String, TraceEventType, Int32, Object): PrivateScope, Public, Virtual, HideBySig
    TraceData(TraceEventCache, String, TraceEventType, Int32, Object[]): PrivateScope, Public, Virtual, HideBySig
    TraceTransfer(TraceEventCache, String, Int32, String, Guid): PrivateScope, Public, Virtual, HideBySig
Struct System.Diagnostics.TraceLogRetentionOption: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.TraceLogRetentionOption SingleFileUnboundedSize = 2 : Public, Static, Literal, HasDefault
    System.Diagnostics.TraceLogRetentionOption SingleFileBoundedSize = 4 : Public, Static, Literal, HasDefault
    System.Diagnostics.TraceLogRetentionOption UnlimitedSequentialFiles = 0 : Public, Static, Literal, HasDefault
    System.Diagnostics.TraceLogRetentionOption LimitedSequentialFiles = 3 : Public, Static, Literal, HasDefault
    System.Diagnostics.TraceLogRetentionOption LimitedCircularFiles = 1 : Public, Static, Literal, HasDefault
Class System.Diagnostics.UnescapedXmlDiagnosticData: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String UnescapedXml 'get set' : 
  Methods:
    get_UnescapedXml(): PrivateScope, Public, HideBySig, SpecialName
    set_UnescapedXml(String): PrivateScope, Public, HideBySig, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class System.Diagnostics.PerformanceData.CounterData: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(Int64*): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int64 Value 'get set' : 
  Methods:
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Int64): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(System.Diagnostics.PerformanceData.CounterSetInstance): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    System.Diagnostics.PerformanceData.CounterSetInstance m_instance : Assembly
    Byte* m_dataBlock : Assembly
  Properties:
    System.Diagnostics.PerformanceData.CounterData Item [Int32] 'get ' : 
    System.Diagnostics.PerformanceData.CounterData Item [System.String] 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
Class System.Diagnostics.PerformanceData.CounterSet: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
    Void .ctor(System.Guid, System.Guid, System.Diagnostics.PerformanceData.CounterSetInstanceType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
  Interfaces:
    System.IDisposable
  Fields:
    System.Diagnostics.PerformanceData.PerfProvider m_provider : Assembly
    System.Guid m_providerGuid : Assembly
    System.Guid m_counterSet : Assembly
    System.Diagnostics.PerformanceData.CounterSetInstanceType m_instType : Assembly
    System.Collections.Generic.Dictionary`2[System.String,System.Int32] m_stringToId : Assembly
    System.Collections.Generic.Dictionary`2[System.Int32,System.Diagnostics.PerformanceData.CounterType] m_idToCounter : Assembly
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    AddCounter(Int32, CounterType): PrivateScope, Public, HideBySig
    AddCounter(Int32, CounterType, String): PrivateScope, Public, HideBySig
    CreateCounterSetInstance(String): PrivateScope, Public, HideBySig, HasSecurity
Class System.Diagnostics.PerformanceData.CounterSetInstance: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(System.Diagnostics.PerformanceData.CounterSet, System.String): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Fields:
    System.Diagnostics.PerformanceData.CounterSet m_counterSet : Assembly
    System.String m_instName : Assembly
    PerfCounterSetInstanceStruct* m_nativeInst : Assembly
  Properties:
    System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet Counters 'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Counters(): PrivateScope, Public, HideBySig, SpecialName
Struct System.Diagnostics.PerformanceData.CounterSetInstanceType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.PerformanceData.CounterSetInstanceType Single = 0 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterSetInstanceType Multiple = 2 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterSetInstanceType GlobalAggregate = 4 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterSetInstanceType GlobalAggregateWithHistory = 11 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterSetInstanceType MultipleAggregate = 6 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterSetInstanceType InstanceAggregate = 22 : Public, Static, Literal, HasDefault
Struct System.Diagnostics.PerformanceData.CounterType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Diagnostics.PerformanceData.CounterType QueueLength = 4523008 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType LargeQueueLength = 4523264 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType QueueLength100Ns = 5571840 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType QueueLengthObjectTime = 6620416 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType RawData32 = 65536 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType RawData64 = 65792 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType RawDataHex32 = 0 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType RawDataHex64 = 256 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType RateOfCountPerSecond32 = 272696320 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType RateOfCountPerSecond64 = 272696576 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType RawFraction32 = 537003008 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType RawFraction64 = 537003264 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType RawBase32 = 1073939459 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType RawBase64 = 1073939712 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType SampleFraction = 549585920 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType SampleCounter = 4260864 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType SampleBase = 1073939457 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType AverageTimer32 = 805438464 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType AverageBase = 1073939458 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType AverageCount64 = 1073874176 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType PercentageActive = 541132032 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType PercentageNotActive = 557909248 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType PercentageActive100Ns = 542180608 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType PercentageNotActive100Ns = 558957824 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType ElapsedTime = 807666944 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType MultiTimerPercentageActive = 574686464 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType MultiTimerPercentageNotActive = 591463680 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType MultiTimerPercentageActive100Ns = 575735040 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType MultiTimerPercentageNotActive100Ns = 592512256 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType MultiTimerBase = 1107494144 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType Delta32 = 4195328 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType Delta64 = 4195584 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType ObjectSpecificTimer = 543229184 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType PrecisionSystemTimer = 541525248 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType PrecisionTimer100Ns = 542573824 : Public, Static, Literal, HasDefault
    System.Diagnostics.PerformanceData.CounterType PrecisionObjectSpecificTimer = 543622400 : Public, Static, Literal, HasDefault
Class System.Diagnostics.PerformanceData.PerfProvider: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(System.Guid): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Guid m_providerGuid : Assembly
    Int32 m_counterSet : Assembly
    Microsoft.Win32.SafeHandles.SafePerfProviderHandle m_hProvider : Assembly
Class System.Diagnostics.PerformanceData.PerfProviderCollection: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Methods:
    QueryProvider(Guid): PrivateScope, Assembly, Static, HideBySig
    RemoveProvider(Guid): PrivateScope, Assembly, Static, HideBySig
    RegisterCounterSet(Guid): PrivateScope, Assembly, Static, HideBySig
    UnregisterCounterSet(Guid): PrivateScope, Assembly, Static, HideBySig
    ValidateCounterType(CounterType): PrivateScope, Assembly, Static, HideBySig
    ValidateCounterSetInstanceType(CounterSetInstanceType): PrivateScope, Assembly, Static, HideBySig
Class System.Collections.Generic.BitHelper: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Int32*, Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32[], Int32): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Methods:
    MarkBit(Int32): PrivateScope, Assembly, HideBySig
    IsMarked(Int32): PrivateScope, Assembly, HideBySig
    ToIntArrayLength(Int32): PrivateScope, Assembly, Static, HideBySig
Class System.Collections.Generic.HashHelpers: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    Int32[] primes : Assembly, Static, InitOnly
  Methods:
    IsPrime(Int32): PrivateScope, Assembly, Static, HideBySig
    GetPrime(Int32): PrivateScope, Assembly, Static, HideBySig
    GetMinPrime(): PrivateScope, Assembly, Static, HideBySig
Class System.Collections.Generic.HashSet`1[T]: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEqualityComparer`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEnumerable`1[T], System.Collections.Generic.IEqualityComparer`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.ICollection`1[T]
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
    System.Runtime.Serialization.ISerializable
    System.Runtime.Serialization.IDeserializationCallback
  Properties:
    Int32 Count 'get ' : 
    System.Collections.Generic.IEqualityComparer`1[T] Comparer 'get ' : 
  Methods:
    Clear(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Contains(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    CopyTo(T[], Int32): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Remove(T): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Count(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetEnumerator(): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
    OnDeserialization(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Add(T): PrivateScope, Public, HideBySig
    UnionWith(IEnumerable`1): PrivateScope, Public, HideBySig
    IntersectWith(IEnumerable`1): PrivateScope, Public, HideBySig
    ExceptWith(IEnumerable`1): PrivateScope, Public, HideBySig
    SymmetricExceptWith(IEnumerable`1): PrivateScope, Public, HideBySig
    IsSubsetOf(IEnumerable`1): PrivateScope, Public, HideBySig
    IsProperSubsetOf(IEnumerable`1): PrivateScope, Public, HideBySig
    IsSupersetOf(IEnumerable`1): PrivateScope, Public, HideBySig
    IsProperSupersetOf(IEnumerable`1): PrivateScope, Public, HideBySig
    Overlaps(IEnumerable`1): PrivateScope, Public, HideBySig
    SetEquals(IEnumerable`1): PrivateScope, Public, HideBySig
    CopyTo(T[]): PrivateScope, Public, HideBySig
    CopyTo(T[], Int32, Int32): PrivateScope, Public, HideBySig
    RemoveWhere(Predicate`1): PrivateScope, Public, HideBySig
    get_Comparer(): PrivateScope, Public, HideBySig, SpecialName
    TrimExcess(): PrivateScope, Public, HideBySig
    CreateSetComparer(): PrivateScope, Public, Static, HideBySig
    ToArray(): PrivateScope, Assembly, HideBySig
    HashSetEquals(HashSet`1, HashSet`1, IEqualityComparer`1): PrivateScope, Assembly, Static, HideBySig
Struct System.Collections.Generic.HashSet`1+ElementCount[T]: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T
  :System.ValueType
  Fields:
    Int32 uniqueCount : Assembly
    Int32 unfoundCount : Assembly
Struct System.Collections.Generic.HashSet`1+Slot[T]: AutoLayout, AnsiClass, Class, NestedAssembly, SequentialLayout, Sealed, BeforeFieldInit
  Type parameter: T
  :System.ValueType
  Fields:
    Int32 hashCode : Assembly
    T value : Assembly
    Int32 next : Assembly
Struct System.Collections.Generic.HashSet`1+Enumerator[T]: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, Serializable, HasSecurity, BeforeFieldInit
  Type parameter: T
  :System.ValueType
    Void .ctor(System.Collections.Generic.HashSet`1[T]): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[T]
    System.IDisposable
    System.Collections.IEnumerator
  Properties:
    T Current  'get ' : 
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MoveNext(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Current(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class System.Collections.Generic.HashSetDebugView`1[T]: AutoLayout, AnsiClass, Class, BeforeFieldInit
  Type parameter: T
    Void .ctor(System.Collections.Generic.HashSet`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    T[] Items  'get ' : 
  Methods:
    get_Items(): PrivateScope, Public, HideBySig, SpecialName
Class System.Collections.Generic.HashSetEqualityComparer`1[T]: AutoLayout, AnsiClass, Class, Serializable, BeforeFieldInit
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.IEqualityComparer`1[T]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEqualityComparer`1[System.Collections.Generic.HashSet`1[T]]
  Methods:
    Equals(HashSet`1, HashSet`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetHashCode(HashSet`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
Struct System.IO.HandleInheritability: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.HandleInheritability None = 0 : Public, Static, Literal, HasDefault
    System.IO.HandleInheritability Inheritable = 1 : Public, Static, Literal, HasDefault
Struct System.IO.Pipes.PipeDirection: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.Pipes.PipeDirection In = 1 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeDirection Out = 2 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeDirection InOut = 3 : Public, Static, Literal, HasDefault
Struct System.IO.Pipes.PipeTransmissionMode: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.Pipes.PipeTransmissionMode Byte = 0 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeTransmissionMode Message = 1 : Public, Static, Literal, HasDefault
Struct System.IO.Pipes.PipeOptions: AutoLayout, AnsiClass, Class, Public, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.Pipes.PipeOptions None = 0 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeOptions WriteThrough = -2147483648 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeOptions Asynchronous = 1073741824 : Public, Static, Literal, HasDefault
Class System.IO.Pipes.PipeStream: AutoLayout, AnsiClass, Class, Public, Abstract, HasSecurity
  :System.IO.Stream
  Properties:
    Boolean IsConnected 'get set' : 
    Boolean IsAsync 'get ' : 
    Boolean IsMessageComplete 'get ' : 
    System.IO.Pipes.PipeTransmissionMode TransmissionMode 'get ' : 
    Int32 InBufferSize 'get ' : 
    Int32 OutBufferSize 'get ' : 
    System.IO.Pipes.PipeTransmissionMode ReadMode 'get set' : 
    Microsoft.Win32.SafeHandles.SafePipeHandle SafePipeHandle 'get ' : 
    Microsoft.Win32.SafeHandles.SafePipeHandle InternalHandle 'get ' : 
    Boolean CanRead 'get ' : 
    Boolean CanWrite 'get ' : 
    Boolean CanSeek 'get ' : 
    Int64 Length 'get ' : 
    Int64 Position 'get set' : 
    System.IO.Pipes.PipeState State 'get set' : 
  Methods:
    Read(Byte[](In, Out), Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    BeginRead(Byte[], Int32, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    EndRead(IAsyncResult): PrivateScope, Public, Virtual, HideBySig
    Write(Byte[], Int32, Int32): PrivateScope, Public, Virtual, HideBySig
    BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    EndWrite(IAsyncResult): PrivateScope, Public, Virtual, HideBySig
    ReadByte(): PrivateScope, Public, Virtual, HideBySig
    WriteByte(Byte): PrivateScope, Public, Virtual, HideBySig
    Flush(): PrivateScope, Public, Virtual, HideBySig
    WaitForPipeDrain(): PrivateScope, Public, HideBySig
    get_IsConnected(): PrivateScope, Public, HideBySig, SpecialName
    get_IsAsync(): PrivateScope, Public, HideBySig, SpecialName
    get_IsMessageComplete(): PrivateScope, Public, HideBySig, SpecialName
    get_TransmissionMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_InBufferSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_OutBufferSize(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ReadMode(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_ReadMode(PipeTransmissionMode): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    GetAccessControl(): PrivateScope, Public, HideBySig
    SetAccessControl(PipeSecurity): PrivateScope, Public, HideBySig
    get_SafePipeHandle(): PrivateScope, Public, HideBySig, SpecialName
    get_InternalHandle(): PrivateScope, Assembly, HideBySig, SpecialName
    get_CanRead(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanWrite(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CanSeek(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Position(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_Position(Int64): PrivateScope, Public, Virtual, HideBySig, SpecialName
    SetLength(Int64): PrivateScope, Public, Virtual, HideBySig
    Seek(Int64, SeekOrigin): PrivateScope, Public, Virtual, HideBySig
    WinIOError(Int32): PrivateScope, Assembly, HideBySig
    get_State(): PrivateScope, Assembly, HideBySig, SpecialName
    set_State(PipeState): PrivateScope, Assembly, HideBySig, SpecialName
    GetSecAttrs(HandleInheritability, PipeSecurity, Object&(Out)): PrivateScope, Assembly, Static, HideBySig
    GetSecAttrs(HandleInheritability): PrivateScope, Assembly, Static, HideBySig
Class System.IO.Pipes.AnonymousPipeServerStream: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.IO.Pipes.PipeStream
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.IO.Pipes.PipeDirection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.IO.Pipes.PipeDirection, System.IO.HandleInheritability): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.IO.Pipes.PipeDirection, System.IO.HandleInheritability, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.IO.Pipes.PipeDirection, System.IO.HandleInheritability, Int32, System.IO.Pipes.PipeSecurity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.IO.Pipes.PipeDirection, Microsoft.Win32.SafeHandles.SafePipeHandle, Microsoft.Win32.SafeHandles.SafePipeHandle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
  Properties:
    Microsoft.Win32.SafeHandles.SafePipeHandle ClientSafePipeHandle 'get ' : 
    System.IO.Pipes.PipeTransmissionMode TransmissionMode 'get ' : 
    System.IO.Pipes.PipeTransmissionMode ReadMode 'set' : 
  Methods:
    GetClientHandleAsString(): PrivateScope, Public, HideBySig
    get_ClientSafePipeHandle(): PrivateScope, Public, HideBySig, SpecialName
    DisposeLocalCopyOfClientHandle(): PrivateScope, Public, HideBySig
    get_TransmissionMode(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ReadMode(PipeTransmissionMode): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class System.IO.Pipes.AnonymousPipeClientStream: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.IO.Pipes.PipeStream
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.IO.Pipes.PipeDirection, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.IO.Pipes.PipeDirection, Microsoft.Win32.SafeHandles.SafePipeHandle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
  Properties:
    System.IO.Pipes.PipeTransmissionMode TransmissionMode 'get ' : 
    System.IO.Pipes.PipeTransmissionMode ReadMode 'set' : 
  Methods:
    get_TransmissionMode(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ReadMode(PipeTransmissionMode): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class System.IO.Pipes.PipeStreamImpersonationWorker: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class System.IO.Pipes.NamedPipeServerStream: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity
  :System.IO.Pipes.PipeStream
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.IO.Pipes.PipeDirection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.IO.Pipes.PipeDirection, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.IO.Pipes.PipeDirection, Int32, System.IO.Pipes.PipeTransmissionMode): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.IO.Pipes.PipeDirection, Int32, System.IO.Pipes.PipeTransmissionMode, System.IO.Pipes.PipeOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.IO.Pipes.PipeDirection, Int32, System.IO.Pipes.PipeTransmissionMode, System.IO.Pipes.PipeOptions, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.IO.Pipes.PipeDirection, Int32, System.IO.Pipes.PipeTransmissionMode, System.IO.Pipes.PipeOptions, Int32, Int32, System.IO.Pipes.PipeSecurity): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.IO.Pipes.PipeDirection, Int32, System.IO.Pipes.PipeTransmissionMode, System.IO.Pipes.PipeOptions, Int32, Int32, System.IO.Pipes.PipeSecurity, System.IO.HandleInheritability): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.IO.Pipes.PipeDirection, Int32, System.IO.Pipes.PipeTransmissionMode, System.IO.Pipes.PipeOptions, Int32, Int32, System.IO.Pipes.PipeSecurity, System.IO.HandleInheritability, System.IO.Pipes.PipeAccessRights): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.IO.Pipes.PipeDirection, Boolean, Boolean, Microsoft.Win32.SafeHandles.SafePipeHandle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
  Fields:
    Int32 MaxAllowedServerInstances = -1 : Public, Static, Literal, HasDefault
  Methods:
    WaitForConnection(): PrivateScope, Public, HideBySig
    BeginWaitForConnection(AsyncCallback, Object): PrivateScope, Public, HideBySig, HasSecurity
    EndWaitForConnection(IAsyncResult): PrivateScope, Public, HideBySig
    Disconnect(): PrivateScope, Public, HideBySig
    RunAsClient(PipeStreamImpersonationWorker): PrivateScope, Public, HideBySig, HasSecurity
    GetImpersonationUserName(): PrivateScope, Public, HideBySig, HasSecurity
Class System.IO.Pipes.NamedPipeServerStream+ExecuteHelper: AutoLayout, AnsiClass, Class, NestedAssembly, BeforeFieldInit
    Void .ctor(System.IO.Pipes.PipeStreamImpersonationWorker, Microsoft.Win32.SafeHandles.SafePipeHandle): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.IO.Pipes.PipeStreamImpersonationWorker m_userCode : Assembly
    Microsoft.Win32.SafeHandles.SafePipeHandle m_handle : Assembly
    Boolean m_mustRevert : Assembly
    Int32 m_impersonateErrorCode : Assembly
    Int32 m_revertImpersonateErrorCode : Assembly
Class System.IO.Pipes.NamedPipeClientStream: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.IO.Pipes.PipeStream
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.String, System.IO.Pipes.PipeDirection): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.String, System.IO.Pipes.PipeDirection, System.IO.Pipes.PipeOptions): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.String, System.IO.Pipes.PipeDirection, System.IO.Pipes.PipeOptions, System.Security.Principal.TokenImpersonationLevel): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.String, System.IO.Pipes.PipeDirection, System.IO.Pipes.PipeOptions, System.Security.Principal.TokenImpersonationLevel, System.IO.HandleInheritability): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.String, System.String, System.IO.Pipes.PipeAccessRights, System.IO.Pipes.PipeOptions, System.Security.Principal.TokenImpersonationLevel, System.IO.HandleInheritability): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
    Void .ctor(System.IO.Pipes.PipeDirection, Boolean, Boolean, Microsoft.Win32.SafeHandles.SafePipeHandle): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName, HasSecurity
  Properties:
    Int32 NumberOfServerInstances 'get ' : 
  Methods:
    Connect(): PrivateScope, Public, HideBySig
    Connect(Int32): PrivateScope, Public, HideBySig
    get_NumberOfServerInstances(): PrivateScope, Public, HideBySig, SpecialName
Class System.IO.Pipes.PipeAsyncResult: AutoLayout, AnsiClass, Class, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IAsyncResult
  Fields:
    System.AsyncCallback _userCallback : Assembly
    System.Object _userStateObject : Assembly
    System.Threading.ManualResetEvent _waitHandle : Assembly
    Microsoft.Win32.SafeHandles.SafePipeHandle _handle : Assembly
    System.Threading.NativeOverlapped* _overlapped : Assembly
    Int32 _EndXxxCalled : Assembly
    Int32 _errorCode : Assembly
    Boolean _isComplete : Assembly
    Boolean _completedSynchronously : Assembly
  Properties:
    System.Object AsyncState 'get ' : 
    Boolean IsCompleted 'get ' : 
    System.Threading.WaitHandle AsyncWaitHandle 'get ' : 
    Boolean CompletedSynchronously 'get ' : 
  Methods:
    get_AsyncState(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsCompleted(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AsyncWaitHandle(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CompletedSynchronously(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CallUserCallback(): PrivateScope, Assembly, HideBySig
Struct System.IO.Pipes.PipeState: AutoLayout, AnsiClass, Class, Sealed, Serializable
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.Pipes.PipeState WaitingToConnect = 0 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeState Connected = 1 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeState Broken = 2 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeState Disconnected = 3 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeState Closed = 4 : Public, Static, Literal, HasDefault
Class System.IO.Pipes.PipeStreamAsyncResult: AutoLayout, AnsiClass, Class, Sealed, HasSecurity, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IAsyncResult
  Fields:
    System.AsyncCallback _userCallback : Assembly
    System.Object _userStateObject : Assembly
    System.Threading.ManualResetEvent _waitHandle : Assembly
    Microsoft.Win32.SafeHandles.SafePipeHandle _handle : Assembly
    System.Threading.NativeOverlapped* _overlapped : Assembly
    Int32 _EndXxxCalled : Assembly
    Int32 _numBytes : Assembly
    Int32 _errorCode : Assembly
    Boolean _isMessageComplete : Assembly
    Boolean _isWrite : Assembly
    Boolean _isComplete : Assembly
    Boolean _completedSynchronously : Assembly
  Properties:
    System.Object AsyncState 'get ' : 
    Boolean IsCompleted 'get ' : 
    System.Threading.WaitHandle AsyncWaitHandle 'get ' : 
    Boolean CompletedSynchronously 'get ' : 
  Methods:
    get_AsyncState(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_IsCompleted(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_AsyncWaitHandle(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_CompletedSynchronously(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    CallUserCallback(): PrivateScope, Assembly, HideBySig
Struct System.IO.Pipes.PipeAccessRights: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.IO.Pipes.PipeAccessRights ReadData = 1 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights WriteData = 2 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights ReadAttributes = 128 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights WriteAttributes = 256 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights ReadExtendedAttributes = 8 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights WriteExtendedAttributes = 16 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights CreateNewInstance = 4 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights Delete = 65536 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights ReadPermissions = 131072 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights ChangePermissions = 262144 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights TakeOwnership = 524288 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights Synchronize = 1048576 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights FullControl = 2032031 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights Read = 131209 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights Write = 274 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights ReadWrite = 131483 : Public, Static, Literal, HasDefault
    System.IO.Pipes.PipeAccessRights AccessSystemSecurity = 16777216 : Public, Static, Literal, HasDefault
Class System.IO.Pipes.PipeAccessRule: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.AccessControl.AccessRule
    Void .ctor(System.String, System.IO.Pipes.PipeAccessRights, System.Security.AccessControl.AccessControlType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IdentityReference, System.IO.Pipes.PipeAccessRights, System.Security.AccessControl.AccessControlType): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IdentityReference, Int32, Boolean, System.Security.AccessControl.AccessControlType): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.IO.Pipes.PipeAccessRights PipeAccessRights 'get ' : 
  Methods:
    get_PipeAccessRights(): PrivateScope, Public, HideBySig, SpecialName
    AccessMaskFromRights(PipeAccessRights, AccessControlType): PrivateScope, Assembly, Static, HideBySig
    RightsFromAccessMask(Int32): PrivateScope, Assembly, Static, HideBySig
Class System.IO.Pipes.PipeAuditRule: AutoLayout, AnsiClass, Class, Public, Sealed, HasSecurity, BeforeFieldInit
  :System.Security.AccessControl.AuditRule
    Void .ctor(System.Security.Principal.IdentityReference, System.IO.Pipes.PipeAccessRights, System.Security.AccessControl.AuditFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.IO.Pipes.PipeAccessRights, System.Security.AccessControl.AuditFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Security.Principal.IdentityReference, Int32, Boolean, System.Security.AccessControl.AuditFlags): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.IO.Pipes.PipeAccessRights PipeAccessRights 'get ' : 
  Methods:
    get_PipeAccessRights(): PrivateScope, Public, HideBySig, SpecialName
Class System.IO.Pipes.PipeSecurity: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
  :System.Security.AccessControl.NativeObjectSecurity
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.Win32.SafeHandles.SafePipeHandle, System.Security.AccessControl.AccessControlSections): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type AccessRightType 'get ' : 
    System.Type AccessRuleType 'get ' : 
    System.Type AuditRuleType 'get ' : 
  Methods:
    AddAccessRule(PipeAccessRule): PrivateScope, Public, HideBySig
    SetAccessRule(PipeAccessRule): PrivateScope, Public, HideBySig
    ResetAccessRule(PipeAccessRule): PrivateScope, Public, HideBySig
    RemoveAccessRule(PipeAccessRule): PrivateScope, Public, HideBySig
    RemoveAccessRuleSpecific(PipeAccessRule): PrivateScope, Public, HideBySig
    AddAuditRule(PipeAuditRule): PrivateScope, Public, HideBySig
    SetAuditRule(PipeAuditRule): PrivateScope, Public, HideBySig
    RemoveAuditRule(PipeAuditRule): PrivateScope, Public, HideBySig
    RemoveAuditRuleAll(PipeAuditRule): PrivateScope, Public, HideBySig
    RemoveAuditRuleSpecific(PipeAuditRule): PrivateScope, Public, HideBySig
    AccessRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AccessControlType): PrivateScope, Public, Virtual, HideBySig
    AuditRuleFactory(IdentityReference, Int32, Boolean, InheritanceFlags, PropagationFlags, AuditFlags): PrivateScope, Public, Final, Virtual, HideBySig
    get_AccessRightType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AccessRuleType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_AuditRuleType(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Struct System.Threading.LockRecursionPolicy: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    System.Threading.LockRecursionPolicy NoRecursion = 0 : Public, Static, Literal, HasDefault
    System.Threading.LockRecursionPolicy SupportsRecursion = 1 : Public, Static, Literal, HasDefault
Class System.Threading.RecursiveCounts: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 writercount : Public
    Int32 upgradecount : Public
Class System.Threading.LockRecursionException: AutoLayout, AnsiClass, Class, Public, Serializable, HasSecurity, BeforeFieldInit
  :System.Exception
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, System.Exception): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Threading.ReaderWriterCount: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 threadid : Public
    Int32 readercount : Public
    System.Threading.ReaderWriterCount next : Public
    System.Threading.RecursiveCounts rc : Public
Class System.Threading.ReaderWriterLockSlim: AutoLayout, AnsiClass, Class, Public, HasSecurity, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Threading.LockRecursionPolicy): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Boolean IsReadLockHeld 'get ' : 
    Boolean IsUpgradeableReadLockHeld 'get ' : 
    Boolean IsWriteLockHeld 'get ' : 
    System.Threading.LockRecursionPolicy RecursionPolicy 'get ' : 
    Int32 CurrentReadCount 'get ' : 
    Int32 RecursiveReadCount 'get ' : 
    Int32 RecursiveUpgradeCount 'get ' : 
    Int32 RecursiveWriteCount 'get ' : 
    Int32 WaitingReadCount 'get ' : 
    Int32 WaitingUpgradeCount 'get ' : 
    Int32 WaitingWriteCount 'get ' : 
  Methods:
    EnterReadLock(): PrivateScope, Public, HideBySig
    TryEnterReadLock(TimeSpan): PrivateScope, Public, HideBySig
    TryEnterReadLock(Int32): PrivateScope, Public, HideBySig
    EnterWriteLock(): PrivateScope, Public, HideBySig
    TryEnterWriteLock(TimeSpan): PrivateScope, Public, HideBySig
    TryEnterWriteLock(Int32): PrivateScope, Public, HideBySig
    EnterUpgradeableReadLock(): PrivateScope, Public, HideBySig
    TryEnterUpgradeableReadLock(TimeSpan): PrivateScope, Public, HideBySig
    TryEnterUpgradeableReadLock(Int32): PrivateScope, Public, HideBySig
    ExitReadLock(): PrivateScope, Public, HideBySig
    ExitWriteLock(): PrivateScope, Public, HideBySig
    ExitUpgradeableReadLock(): PrivateScope, Public, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_IsReadLockHeld(): PrivateScope, Public, HideBySig, SpecialName
    get_IsUpgradeableReadLockHeld(): PrivateScope, Public, HideBySig, SpecialName
    get_IsWriteLockHeld(): PrivateScope, Public, HideBySig, SpecialName
    get_RecursionPolicy(): PrivateScope, Public, HideBySig, SpecialName
    get_CurrentReadCount(): PrivateScope, Public, HideBySig, SpecialName
    get_RecursiveReadCount(): PrivateScope, Public, HideBySig, SpecialName
    get_RecursiveUpgradeCount(): PrivateScope, Public, HideBySig, SpecialName
    get_RecursiveWriteCount(): PrivateScope, Public, HideBySig, SpecialName
    get_WaitingReadCount(): PrivateScope, Public, HideBySig, SpecialName
    get_WaitingUpgradeCount(): PrivateScope, Public, HideBySig, SpecialName
    get_WaitingWriteCount(): PrivateScope, Public, HideBySig, SpecialName
Class FX20Assembly: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String Version = 2.0.0.0 : Assembly, Static, Literal, HasDefault
Class FX35Assembly: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String Version = 3.5.0.0 : Assembly, Static, Literal, HasDefault
Class FXAssembly: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String Version = 3.5.0.0 : Assembly, Static, Literal, HasDefault
Class ThisAssembly: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String Title = System.Core.dll : Assembly, Static, Literal, HasDefault
    System.String Description = System.Core.dll : Assembly, Static, Literal, HasDefault
    System.String DefaultAlias = System.Core.dll : Assembly, Static, Literal, HasDefault
    System.String Copyright = © Microsoft Corporation.  All rights reserved. : Assembly, Static, Literal, HasDefault
    System.String Version = 3.5.0.0 : Assembly, Static, Literal, HasDefault
    System.String InformationalVersion = 3.5.30729.5420 : Assembly, Static, Literal, HasDefault
    Int32 DailyBuildNumber = 30729 : Assembly, Static, Literal, HasDefault
Class AssemblyRef: AutoLayout, AnsiClass, Class, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.String EcmaPublicKey = b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String EcmaPublicKeyToken = b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String EcmaPublicKeyFull = 00000000000000000400000000000000 : Assembly, Static, Literal, HasDefault
    System.String Mscorlib = mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String SystemData = System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String SystemDataOracleClient = System.Data.OracleClient, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String System = System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String SystemRuntimeRemoting = System.Runtime.Remoting, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String SystemWindowsForms = System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String SystemXml = System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String MicrosoftPublicKey = b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String MicrosoftPublicKeyToken = b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String MicrosoftPublicKeyFull = 002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293 : Assembly, Static, Literal, HasDefault
    System.String SharedLibPublicKey = 31bf3856ad364e35 : Assembly, Static, Literal, HasDefault
    System.String SharedLibPublicKeyToken = 31bf3856ad364e35 : Assembly, Static, Literal, HasDefault
    System.String SharedLibPublicKeyFull = 0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9 : Assembly, Static, Literal, HasDefault
    System.String SystemComponentModelDataAnnotations = System.ComponentModel.DataAnnotations, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 : Assembly, Static, Literal, HasDefault
    System.String SystemConfiguration = System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemConfigurationInstall = System.Configuration.Install, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemDeployment = System.Deployment, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemDesign = System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemDirectoryServices = System.DirectoryServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemDrawingDesign = System.Drawing.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemDrawing = System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemEnterpriseServices = System.EnterpriseServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemManagement = System.Management, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemMessaging = System.Messaging, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemRuntimeSerializationFormattersSoap = System.Runtime.Serialization.Formatters.Soap, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemSecurity = System.Security, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemServiceProcess = System.ServiceProcess, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemWeb = System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemWebAbstractions = System.Web.Abstractions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 : Assembly, Static, Literal, HasDefault
    System.String SystemWebDynamicData = System.Web.DynamicData, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 : Assembly, Static, Literal, HasDefault
    System.String SystemWebDynamicDataDesign = System.Web.DynamicData.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 : Assembly, Static, Literal, HasDefault
    System.String SystemWebEntityDesign = System.Web.Entity.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089 : Assembly, Static, Literal, HasDefault
    System.String SystemWebExtensions = System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 : Assembly, Static, Literal, HasDefault
    System.String SystemWebExtensionsDesign = System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 : Assembly, Static, Literal, HasDefault
    System.String SystemWebMobile = System.Web.Mobile, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemWebRegularExpressions = System.Web.RegularExpressions, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String SystemWebRouting = System.Web.Routing, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 : Assembly, Static, Literal, HasDefault
    System.String SystemWebServices = System.Web.Services, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String MicrosoftVisualStudio = Microsoft.VisualStudio, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String MicrosoftVisualStudioWindowsForms = Microsoft.VisualStudio.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String VJSharpCodeProvider = VJSharpCodeProvider, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String ASPBrowserCapsPublicKey = b7bd7678b977bd8f : Assembly, Static, Literal, HasDefault
    System.String ASPBrowserCapsFactory = ASP.BrowserCapsFactory, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b7bd7678b977bd8f : Assembly, Static, Literal, HasDefault
    System.String MicrosoftVSDesigner = Microsoft.VSDesigner, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String MicrosoftVisualStudioWeb = Microsoft.VisualStudio.Web, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String MicrosoftWebDesign = Microsoft.Web.Design.Client, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String MicrosoftVSDesignerMobile = Microsoft.VSDesigner.Mobile, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
    System.String MicrosoftJScript = Microsoft.JScript, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a : Assembly, Static, Literal, HasDefault
Class System.SRDescriptionAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.ComponentModel.DescriptionAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class System.SRCategoryAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.ComponentModel.CategoryAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.SR: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String ArgumentOutOfRange_NeedNonNegNum = ArgumentOutOfRange_NeedNonNegNum : Assembly, Static, Literal, HasDefault
    System.String Argument_AdjustmentRulesNoNulls = Argument_AdjustmentRulesNoNulls : Assembly, Static, Literal, HasDefault
    System.String Argument_AdjustmentRulesOutOfOrder = Argument_AdjustmentRulesOutOfOrder : Assembly, Static, Literal, HasDefault
    System.String Argument_AdjustmentRulesAmbiguousOverlap = Argument_AdjustmentRulesAmbiguousOverlap : Assembly, Static, Literal, HasDefault
    System.String Argument_AdjustmentRulesrDaylightSavingTimeOverlap = Argument_AdjustmentRulesrDaylightSavingTimeOverlap : Assembly, Static, Literal, HasDefault
    System.String Argument_AdjustmentRulesrDaylightSavingTimeOverlapNonRuleRange = Argument_AdjustmentRulesrDaylightSavingTimeOverlapNonRuleRange : Assembly, Static, Literal, HasDefault
    System.String Argument_AdjustmentRulesInvalidOverlap = Argument_AdjustmentRulesInvalidOverlap : Assembly, Static, Literal, HasDefault
    System.String Argument_ConvertMismatch = Argument_ConvertMismatch : Assembly, Static, Literal, HasDefault
    System.String Argument_DateTimeHasTimeOfDay = Argument_DateTimeHasTimeOfDay : Assembly, Static, Literal, HasDefault
    System.String Argument_DateTimeIsInvalid = Argument_DateTimeIsInvalid : Assembly, Static, Literal, HasDefault
    System.String Argument_DateTimeIsNotAmbiguous = Argument_DateTimeIsNotAmbiguous : Assembly, Static, Literal, HasDefault
    System.String Argument_DateTimeOffsetIsNotAmbiguous = Argument_DateTimeOffsetIsNotAmbiguous : Assembly, Static, Literal, HasDefault
    System.String Argument_DateTimeKindMustBeUnspecified = Argument_DateTimeKindMustBeUnspecified : Assembly, Static, Literal, HasDefault
    System.String Argument_DateTimeHasTicks = Argument_DateTimeHasTicks : Assembly, Static, Literal, HasDefault
    System.String Argument_InvalidId = Argument_InvalidId : Assembly, Static, Literal, HasDefault
    System.String Argument_InvalidSerializedString = Argument_InvalidSerializedString : Assembly, Static, Literal, HasDefault
    System.String Argument_InvalidREG_TZI_FORMAT = Argument_InvalidREG_TZI_FORMAT : Assembly, Static, Literal, HasDefault
    System.String Argument_OutOfOrderDateTimes = Argument_OutOfOrderDateTimes : Assembly, Static, Literal, HasDefault
    System.String Argument_TimeSpanHasSeconds = Argument_TimeSpanHasSeconds : Assembly, Static, Literal, HasDefault
    System.String Argument_TransitionTimesAreIdentical = Argument_TransitionTimesAreIdentical : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_Day = ArgumentOutOfRange_Day : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_DayOfWeek = ArgumentOutOfRange_DayOfWeek : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_Month = ArgumentOutOfRange_Month : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_UtcOffset = ArgumentOutOfRange_UtcOffset : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_UtcOffsetAndDaylightDelta = ArgumentOutOfRange_UtcOffsetAndDaylightDelta : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_Week = ArgumentOutOfRange_Week : Assembly, Static, Literal, HasDefault
    System.String InvalidTimeZone_InvalidRegistryData = InvalidTimeZone_InvalidRegistryData : Assembly, Static, Literal, HasDefault
    System.String InvalidTimeZone_InvalidWin32APIData = InvalidTimeZone_InvalidWin32APIData : Assembly, Static, Literal, HasDefault
    System.String Security_CannotReadRegistryData = Security_CannotReadRegistryData : Assembly, Static, Literal, HasDefault
    System.String Serialization_CorruptField = Serialization_CorruptField : Assembly, Static, Literal, HasDefault
    System.String Serialization_InvalidData = Serialization_InvalidData : Assembly, Static, Literal, HasDefault
    System.String Serialization_InvalidEscapeSequence = Serialization_InvalidEscapeSequence : Assembly, Static, Literal, HasDefault
    System.String TimeZoneNotFound_MissingRegistryData = TimeZoneNotFound_MissingRegistryData : Assembly, Static, Literal, HasDefault
    System.String Argument_WrongAsyncResult = Argument_WrongAsyncResult : Assembly, Static, Literal, HasDefault
    System.String Argument_InvalidOffLen = Argument_InvalidOffLen : Assembly, Static, Literal, HasDefault
    System.String Argument_NeedNonemptyPipeName = Argument_NeedNonemptyPipeName : Assembly, Static, Literal, HasDefault
    System.String Argument_EmptyServerName = Argument_EmptyServerName : Assembly, Static, Literal, HasDefault
    System.String Argument_NonContainerInvalidAnyFlag = Argument_NonContainerInvalidAnyFlag : Assembly, Static, Literal, HasDefault
    System.String ArgumentNull_Buffer = ArgumentNull_Buffer : Assembly, Static, Literal, HasDefault
    System.String ArgumentNull_ServerName = ArgumentNull_ServerName : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_AdditionalAccessLimited = ArgumentOutOfRange_AdditionalAccessLimited : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_AnonymousReserved = ArgumentOutOfRange_AnonymousReserved : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_TransmissionModeByteOrMsg = ArgumentOutOfRange_TransmissionModeByteOrMsg : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_DirectionModeInOrOut = ArgumentOutOfRange_DirectionModeInOrOut : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_DirectionModeInOutOrInOut = ArgumentOutOfRange_DirectionModeInOutOrInOut : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_ImpersonationInvalid = ArgumentOutOfRange_ImpersonationInvalid : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_ImpersonationOptionsInvalid = ArgumentOutOfRange_ImpersonationOptionsInvalid : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_OptionsInvalid = ArgumentOutOfRange_OptionsInvalid : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_HandleInheritabilityNoneOrInheritable = ArgumentOutOfRange_HandleInheritabilityNoneOrInheritable : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_InvalidPipeAccessRights = ArgumentOutOfRange_InvalidPipeAccessRights : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_InvalidTimeout = ArgumentOutOfRange_InvalidTimeout : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_MaxNumServerInstances = ArgumentOutOfRange_MaxNumServerInstances : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_NeedValidPipeAccessRights = ArgumentOutOfRange_NeedValidPipeAccessRights : Assembly, Static, Literal, HasDefault
    System.String IndexOutOfRange_IORaceCondition = IndexOutOfRange_IORaceCondition : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_EndReadCalledMultiple = InvalidOperation_EndReadCalledMultiple : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_EndWriteCalledMultiple = InvalidOperation_EndWriteCalledMultiple : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_EndWaitForConnectionCalledMultiple = InvalidOperation_EndWaitForConnectionCalledMultiple : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_PipeNotYetConnected = InvalidOperation_PipeNotYetConnected : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_PipeDisconnected = InvalidOperation_PipeDisconnected : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_PipeHandleNotSet = InvalidOperation_PipeHandleNotSet : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_PipeNotAsync = InvalidOperation_PipeNotAsync : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_PipeReadModeNotMessage = InvalidOperation_PipeReadModeNotMessage : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_PipeMessageTypeNotSupported = InvalidOperation_PipeMessageTypeNotSupported : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_PipeAlreadyConnected = InvalidOperation_PipeAlreadyConnected : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_PipeAlreadyDisconnected = InvalidOperation_PipeAlreadyDisconnected : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_PipeClosed = InvalidOperation_PipeClosed : Assembly, Static, Literal, HasDefault
    System.String IO_FileTooLongOrHandleNotSync = IO_FileTooLongOrHandleNotSync : Assembly, Static, Literal, HasDefault
    System.String IO_EOF_ReadBeyondEOF = IO_EOF_ReadBeyondEOF : Assembly, Static, Literal, HasDefault
    System.String IO_FileNotFound = IO_FileNotFound : Assembly, Static, Literal, HasDefault
    System.String IO_FileNotFound_FileName = IO_FileNotFound_FileName : Assembly, Static, Literal, HasDefault
    System.String IO_IO_AlreadyExists_Name = IO_IO_AlreadyExists_Name : Assembly, Static, Literal, HasDefault
    System.String IO_IO_BindHandleFailed = IO_IO_BindHandleFailed : Assembly, Static, Literal, HasDefault
    System.String IO_IO_FileExists_Name = IO_IO_FileExists_Name : Assembly, Static, Literal, HasDefault
    System.String IO_IO_NoPermissionToDirectoryName = IO_IO_NoPermissionToDirectoryName : Assembly, Static, Literal, HasDefault
    System.String IO_IO_SharingViolation_File = IO_IO_SharingViolation_File : Assembly, Static, Literal, HasDefault
    System.String IO_IO_SharingViolation_NoFileName = IO_IO_SharingViolation_NoFileName : Assembly, Static, Literal, HasDefault
    System.String IO_IO_PipeBroken = IO_IO_PipeBroken : Assembly, Static, Literal, HasDefault
    System.String IO_IO_InvalidPipeHandle = IO_IO_InvalidPipeHandle : Assembly, Static, Literal, HasDefault
    System.String IO_DriveNotFound_Drive = IO_DriveNotFound_Drive : Assembly, Static, Literal, HasDefault
    System.String IO_PathNotFound_Path = IO_PathNotFound_Path : Assembly, Static, Literal, HasDefault
    System.String IO_PathNotFound_NoPathName = IO_PathNotFound_NoPathName : Assembly, Static, Literal, HasDefault
    System.String IO_PathTooLong = IO_PathTooLong : Assembly, Static, Literal, HasDefault
    System.String NotSupported_IONonFileDevices = NotSupported_IONonFileDevices : Assembly, Static, Literal, HasDefault
    System.String NotSupported_MemStreamNotExpandable = NotSupported_MemStreamNotExpandable : Assembly, Static, Literal, HasDefault
    System.String NotSupported_UnreadableStream = NotSupported_UnreadableStream : Assembly, Static, Literal, HasDefault
    System.String NotSupported_UnseekableStream = NotSupported_UnseekableStream : Assembly, Static, Literal, HasDefault
    System.String NotSupported_UnwritableStream = NotSupported_UnwritableStream : Assembly, Static, Literal, HasDefault
    System.String NotSupported_AnonymousPipeUnidirectional = NotSupported_AnonymousPipeUnidirectional : Assembly, Static, Literal, HasDefault
    System.String NotSupported_AnonymousPipeMessagesNotSupported = NotSupported_AnonymousPipeMessagesNotSupported : Assembly, Static, Literal, HasDefault
    System.String ObjectDisposed_FileClosed = ObjectDisposed_FileClosed : Assembly, Static, Literal, HasDefault
    System.String ObjectDisposed_PipeClosed = ObjectDisposed_PipeClosed : Assembly, Static, Literal, HasDefault
    System.String ObjectDisposed_ReaderClosed = ObjectDisposed_ReaderClosed : Assembly, Static, Literal, HasDefault
    System.String ObjectDisposed_StreamClosed = ObjectDisposed_StreamClosed : Assembly, Static, Literal, HasDefault
    System.String ObjectDisposed_WriterClosed = ObjectDisposed_WriterClosed : Assembly, Static, Literal, HasDefault
    System.String PlatformNotSupported_NamedPipeServers = PlatformNotSupported_NamedPipeServers : Assembly, Static, Literal, HasDefault
    System.String UnauthorizedAccess_IODenied_Path = UnauthorizedAccess_IODenied_Path : Assembly, Static, Literal, HasDefault
    System.String UnauthorizedAccess_IODenied_NoPathName = UnauthorizedAccess_IODenied_NoPathName : Assembly, Static, Literal, HasDefault
    System.String TraceAsTraceSource = TraceAsTraceSource : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_NeedValidLogRetention = ArgumentOutOfRange_NeedValidLogRetention : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_NeedMaxFileSizeGEBufferSize = ArgumentOutOfRange_NeedMaxFileSizeGEBufferSize : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_NeedValidMaxNumFiles = ArgumentOutOfRange_NeedValidMaxNumFiles : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_NeedValidId = ArgumentOutOfRange_NeedValidId : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_MaxArgExceeded = ArgumentOutOfRange_MaxArgExceeded : Assembly, Static, Literal, HasDefault
    System.String ArgumentOutOfRange_MaxStringsExceeded = ArgumentOutOfRange_MaxStringsExceeded : Assembly, Static, Literal, HasDefault
    System.String NotSupported_DownLevelVista = NotSupported_DownLevelVista : Assembly, Static, Literal, HasDefault
    System.String Argument_NeedNonemptyDelimiter = Argument_NeedNonemptyDelimiter : Assembly, Static, Literal, HasDefault
    System.String NotSupported_SetTextWriter = NotSupported_SetTextWriter : Assembly, Static, Literal, HasDefault
    System.String Perflib_PlatformNotSupported = Perflib_PlatformNotSupported : Assembly, Static, Literal, HasDefault
    System.String Perflib_Argument_CounterSetAlreadyRegister = Perflib_Argument_CounterSetAlreadyRegister : Assembly, Static, Literal, HasDefault
    System.String Perflib_Argument_InvalidCounterType = Perflib_Argument_InvalidCounterType : Assembly, Static, Literal, HasDefault
    System.String Perflib_Argument_InvalidCounterSetInstanceType = Perflib_Argument_InvalidCounterSetInstanceType : Assembly, Static, Literal, HasDefault
    System.String Perflib_Argument_InstanceAlreadyExists = Perflib_Argument_InstanceAlreadyExists : Assembly, Static, Literal, HasDefault
    System.String Perflib_Argument_CounterAlreadyExists = Perflib_Argument_CounterAlreadyExists : Assembly, Static, Literal, HasDefault
    System.String Perflib_Argument_CounterNameAlreadyExists = Perflib_Argument_CounterNameAlreadyExists : Assembly, Static, Literal, HasDefault
    System.String Perflib_Argument_ProviderNotFound = Perflib_Argument_ProviderNotFound : Assembly, Static, Literal, HasDefault
    System.String Perflib_Argument_InvalidInstance = Perflib_Argument_InvalidInstance : Assembly, Static, Literal, HasDefault
    System.String Perflib_Argument_EmptyInstanceName = Perflib_Argument_EmptyInstanceName : Assembly, Static, Literal, HasDefault
    System.String Perflib_Argument_EmptyCounterName = Perflib_Argument_EmptyCounterName : Assembly, Static, Literal, HasDefault
    System.String Perflib_InsufficientMemory_InstanceCounterBlock = Perflib_InsufficientMemory_InstanceCounterBlock : Assembly, Static, Literal, HasDefault
    System.String Perflib_InsufficientMemory_CounterSetTemplate = Perflib_InsufficientMemory_CounterSetTemplate : Assembly, Static, Literal, HasDefault
    System.String Perflib_InvalidOperation_CounterRefValue = Perflib_InvalidOperation_CounterRefValue : Assembly, Static, Literal, HasDefault
    System.String Perflib_InvalidOperation_CounterSetNotInstalled = Perflib_InvalidOperation_CounterSetNotInstalled : Assembly, Static, Literal, HasDefault
    System.String Perflib_InvalidOperation_InstanceNotFound = Perflib_InvalidOperation_InstanceNotFound : Assembly, Static, Literal, HasDefault
    System.String Perflib_InvalidOperation_AddCounterAfterInstance = Perflib_InvalidOperation_AddCounterAfterInstance : Assembly, Static, Literal, HasDefault
    System.String Perflib_InvalidOperation_NoActiveProvider = Perflib_InvalidOperation_NoActiveProvider : Assembly, Static, Literal, HasDefault
    System.String Perflib_InvalidOperation_CounterSetContainsNoCounter = Perflib_InvalidOperation_CounterSetContainsNoCounter : Assembly, Static, Literal, HasDefault
    System.String Arg_ArrayPlusOffTooSmall = Arg_ArrayPlusOffTooSmall : Assembly, Static, Literal, HasDefault
    System.String Arg_HSCapacityOverflow = Arg_HSCapacityOverflow : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_EnumFailedVersion = InvalidOperation_EnumFailedVersion : Assembly, Static, Literal, HasDefault
    System.String InvalidOperation_EnumOpCantHappen = InvalidOperation_EnumOpCantHappen : Assembly, Static, Literal, HasDefault
    System.String Serialization_MissingKeys = Serialization_MissingKeys : Assembly, Static, Literal, HasDefault
    System.String LockRecursionException_RecursiveReadNotAllowed = LockRecursionException_RecursiveReadNotAllowed : Assembly, Static, Literal, HasDefault
    System.String LockRecursionException_RecursiveWriteNotAllowed = LockRecursionException_RecursiveWriteNotAllowed : Assembly, Static, Literal, HasDefault
    System.String LockRecursionException_RecursiveUpgradeNotAllowed = LockRecursionException_RecursiveUpgradeNotAllowed : Assembly, Static, Literal, HasDefault
    System.String LockRecursionException_ReadAfterWriteNotAllowed = LockRecursionException_ReadAfterWriteNotAllowed : Assembly, Static, Literal, HasDefault
    System.String LockRecursionException_WriteAfterReadNotAllowed = LockRecursionException_WriteAfterReadNotAllowed : Assembly, Static, Literal, HasDefault
    System.String LockRecursionException_UpgradeAfterReadNotAllowed = LockRecursionException_UpgradeAfterReadNotAllowed : Assembly, Static, Literal, HasDefault
    System.String LockRecursionException_UpgradeAfterWriteNotAllowed = LockRecursionException_UpgradeAfterWriteNotAllowed : Assembly, Static, Literal, HasDefault
    System.String SynchronizationLockException_MisMatchedRead = SynchronizationLockException_MisMatchedRead : Assembly, Static, Literal, HasDefault
    System.String SynchronizationLockException_MisMatchedWrite = SynchronizationLockException_MisMatchedWrite : Assembly, Static, Literal, HasDefault
    System.String SynchronizationLockException_MisMatchedUpgrade = SynchronizationLockException_MisMatchedUpgrade : Assembly, Static, Literal, HasDefault
    System.String SynchronizationLockException_IncorrectDispose = SynchronizationLockException_IncorrectDispose : Assembly, Static, Literal, HasDefault
    System.String Cryptography_ArgECDHKeySizeMismatch = Cryptography_ArgECDHKeySizeMismatch : Assembly, Static, Literal, HasDefault
    System.String Cryptography_ArgECDHRequiresECDHKey = Cryptography_ArgECDHRequiresECDHKey : Assembly, Static, Literal, HasDefault
    System.String Cryptography_ArgECDsaRequiresECDsaKey = Cryptography_ArgECDsaRequiresECDsaKey : Assembly, Static, Literal, HasDefault
    System.String Cryptography_ArgExpectedECDiffieHellmanCngPublicKey = Cryptography_ArgExpectedECDiffieHellmanCngPublicKey : Assembly, Static, Literal, HasDefault
    System.String Cryptography_ArgMustBeCngAlgorithm = Cryptography_ArgMustBeCngAlgorithm : Assembly, Static, Literal, HasDefault
    System.String Cryptography_ArgMustBeCngAlgorithmGroup = Cryptography_ArgMustBeCngAlgorithmGroup : Assembly, Static, Literal, HasDefault
    System.String Cryptography_ArgMustBeCngKeyBlobFormat = Cryptography_ArgMustBeCngKeyBlobFormat : Assembly, Static, Literal, HasDefault
    System.String Cryptography_ArgMustBeCngProvider = Cryptography_ArgMustBeCngProvider : Assembly, Static, Literal, HasDefault
    System.String Cryptography_DecryptWithNoKey = Cryptography_DecryptWithNoKey : Assembly, Static, Literal, HasDefault
    System.String Cryptography_ECXmlSerializationFormatRequired = Cryptography_ECXmlSerializationFormatRequired : Assembly, Static, Literal, HasDefault
    System.String Cryptography_InvalidAlgorithmGroup = Cryptography_InvalidAlgorithmGroup : Assembly, Static, Literal, HasDefault
    System.String Cryptography_InvalidAlgorithmName = Cryptography_InvalidAlgorithmName : Assembly, Static, Literal, HasDefault
    System.String Cryptography_InvalidCipherMode = Cryptography_InvalidCipherMode : Assembly, Static, Literal, HasDefault
    System.String Cryptography_InvalidIVSize = Cryptography_InvalidIVSize : Assembly, Static, Literal, HasDefault
    System.String Cryptography_InvalidKeyBlobFormat = Cryptography_InvalidKeyBlobFormat : Assembly, Static, Literal, HasDefault
    System.String Cryptography_InvalidKeySize = Cryptography_InvalidKeySize : Assembly, Static, Literal, HasDefault
    System.String Cryptography_InvalidPadding = Cryptography_InvalidPadding : Assembly, Static, Literal, HasDefault
    System.String Cryptography_InvalidProviderName = Cryptography_InvalidProviderName : Assembly, Static, Literal, HasDefault
    System.String Cryptography_MissingDomainParameters = Cryptography_MissingDomainParameters : Assembly, Static, Literal, HasDefault
    System.String Cryptography_MissingPublicKey = Cryptography_MissingPublicKey : Assembly, Static, Literal, HasDefault
    System.String Cryptography_MissingIV = Cryptography_MissingIV : Assembly, Static, Literal, HasDefault
    System.String Cryptography_MustTransformWholeBlock = Cryptography_MustTransformWholeBlock : Assembly, Static, Literal, HasDefault
    System.String Cryptography_NonCompliantFIPSAlgorithm = Cryptography_NonCompliantFIPSAlgorithm : Assembly, Static, Literal, HasDefault
    System.String Cryptography_OpenInvalidHandle = Cryptography_OpenInvalidHandle : Assembly, Static, Literal, HasDefault
    System.String Cryptography_OpenEphemeralKeyHandleWithoutEphemeralFlag = Cryptography_OpenEphemeralKeyHandleWithoutEphemeralFlag : Assembly, Static, Literal, HasDefault
    System.String Cryptography_PartialBlock = Cryptography_PartialBlock : Assembly, Static, Literal, HasDefault
    System.String Cryptography_PlatformNotSupported = Cryptography_PlatformNotSupported : Assembly, Static, Literal, HasDefault
    System.String Cryptography_TlsRequiresLabelAndSeed = Cryptography_TlsRequiresLabelAndSeed : Assembly, Static, Literal, HasDefault
    System.String Cryptography_TransformBeyondEndOfBuffer = Cryptography_TransformBeyondEndOfBuffer : Assembly, Static, Literal, HasDefault
    System.String Cryptography_UnknownEllipticCurve = Cryptography_UnknownEllipticCurve : Assembly, Static, Literal, HasDefault
    System.String Cryptography_UnknownEllipticCurveAlgorithm = Cryptography_UnknownEllipticCurveAlgorithm : Assembly, Static, Literal, HasDefault
    System.String Cryptography_UnknownPaddingMode = Cryptography_UnknownPaddingMode : Assembly, Static, Literal, HasDefault
    System.String Cryptography_UnexpectedXmlNamespace = Cryptography_UnexpectedXmlNamespace : Assembly, Static, Literal, HasDefault
  Properties:
    System.Resources.ResourceManager Resources 'get ' : 
  Methods:
    get_Resources(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetString(String, Object[]): PrivateScope, Public, Static, HideBySig
    GetString(String): PrivateScope, Public, Static, HideBySig
    GetObject(String): PrivateScope, Public, Static, HideBySig
Class System.Linq.SRDescriptionAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.ComponentModel.DescriptionAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class System.Linq.SRCategoryAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.ComponentModel.CategoryAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Linq.SR: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String OwningTeam = OwningTeam : Assembly, Static, Literal, HasDefault
    System.String ArgumentArrayHasTooManyElements = ArgumentArrayHasTooManyElements : Assembly, Static, Literal, HasDefault
    System.String ArgumentNotIEnumerableGeneric = ArgumentNotIEnumerableGeneric : Assembly, Static, Literal, HasDefault
    System.String ArgumentNotSequence = ArgumentNotSequence : Assembly, Static, Literal, HasDefault
    System.String ArgumentNotValid = ArgumentNotValid : Assembly, Static, Literal, HasDefault
    System.String IncompatibleElementTypes = IncompatibleElementTypes : Assembly, Static, Literal, HasDefault
    System.String ArgumentNotLambda = ArgumentNotLambda : Assembly, Static, Literal, HasDefault
    System.String MoreThanOneElement = MoreThanOneElement : Assembly, Static, Literal, HasDefault
    System.String MoreThanOneMatch = MoreThanOneMatch : Assembly, Static, Literal, HasDefault
    System.String NoArgumentMatchingMethodsInQueryable = NoArgumentMatchingMethodsInQueryable : Assembly, Static, Literal, HasDefault
    System.String NoElements = NoElements : Assembly, Static, Literal, HasDefault
    System.String NoMatch = NoMatch : Assembly, Static, Literal, HasDefault
    System.String NoMethodOnType = NoMethodOnType : Assembly, Static, Literal, HasDefault
    System.String NoMethodOnTypeMatchingArguments = NoMethodOnTypeMatchingArguments : Assembly, Static, Literal, HasDefault
    System.String NoNameMatchingMethodsInQueryable = NoNameMatchingMethodsInQueryable : Assembly, Static, Literal, HasDefault
    System.String EmptyEnumerable = EmptyEnumerable : Assembly, Static, Literal, HasDefault
  Properties:
    System.Resources.ResourceManager Resources 'get ' : 
  Methods:
    get_Resources(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetString(String, Object[]): PrivateScope, Public, Static, HideBySig
    GetString(String): PrivateScope, Public, Static, HideBySig
    GetObject(String): PrivateScope, Public, Static, HideBySig
Class System.Linq.Expressions.SRDescriptionAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.ComponentModel.DescriptionAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String Description 'get ' : 
  Methods:
    get_Description(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class System.Linq.Expressions.SRCategoryAttribute: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
  :System.ComponentModel.CategoryAttribute
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class System.Linq.Expressions.SR: AutoLayout, AnsiClass, Class, Sealed, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.String OwningTeam = OwningTeam : Assembly, Static, Literal, HasDefault
    System.String UserDefinedOperatorMustBeStatic = UserDefinedOperatorMustBeStatic : Assembly, Static, Literal, HasDefault
    System.String UserDefinedOperatorMustNotBeVoid = UserDefinedOperatorMustNotBeVoid : Assembly, Static, Literal, HasDefault
    System.String CoercionOperatorNotDefined = CoercionOperatorNotDefined : Assembly, Static, Literal, HasDefault
    System.String UnaryOperatorNotDefined = UnaryOperatorNotDefined : Assembly, Static, Literal, HasDefault
    System.String BinaryOperatorNotDefined = BinaryOperatorNotDefined : Assembly, Static, Literal, HasDefault
    System.String OperandTypesDoNotMatchParameters = OperandTypesDoNotMatchParameters : Assembly, Static, Literal, HasDefault
    System.String ArgumentMustBeArray = ArgumentMustBeArray : Assembly, Static, Literal, HasDefault
    System.String ArgumentMustBeBoolean = ArgumentMustBeBoolean : Assembly, Static, Literal, HasDefault
    System.String ArgumentMustBeComparable = ArgumentMustBeComparable : Assembly, Static, Literal, HasDefault
    System.String ArgumentMustBeConvertible = ArgumentMustBeConvertible : Assembly, Static, Literal, HasDefault
    System.String ArgumentMustBeFieldInfoOrPropertInfo = ArgumentMustBeFieldInfoOrPropertInfo : Assembly, Static, Literal, HasDefault
    System.String ArgumentMustBeFieldInfoOrPropertInfoOrMethod = ArgumentMustBeFieldInfoOrPropertInfoOrMethod : Assembly, Static, Literal, HasDefault
    System.String ArgumentMustBeInstanceMember = ArgumentMustBeInstanceMember : Assembly, Static, Literal, HasDefault
    System.String ArgumentMustBeInteger = ArgumentMustBeInteger : Assembly, Static, Literal, HasDefault
    System.String ArgumentMustBeInt32 = ArgumentMustBeInt32 : Assembly, Static, Literal, HasDefault
    System.String ArgumentMustBeCheckable = ArgumentMustBeCheckable : Assembly, Static, Literal, HasDefault
    System.String ArgumentMustBeArrayIndexType = ArgumentMustBeArrayIndexType : Assembly, Static, Literal, HasDefault
    System.String ArgumentMustBeIntegerOrBoolean = ArgumentMustBeIntegerOrBoolean : Assembly, Static, Literal, HasDefault
    System.String ArgumentMustBeNumeric = ArgumentMustBeNumeric : Assembly, Static, Literal, HasDefault
    System.String ArgumentMustBeSingleDimensionalArrayType = ArgumentMustBeSingleDimensionalArrayType : Assembly, Static, Literal, HasDefault
    System.String ArgumentTypesMustMatch = ArgumentTypesMustMatch : Assembly, Static, Literal, HasDefault
    System.String CannotAutoInitializeValueTypeElementThroughProperty = CannotAutoInitializeValueTypeElementThroughProperty : Assembly, Static, Literal, HasDefault
    System.String CannotAutoInitializeValueTypeMemberThroughProperty = CannotAutoInitializeValueTypeMemberThroughProperty : Assembly, Static, Literal, HasDefault
    System.String CannotCastTypeToType = CannotCastTypeToType : Assembly, Static, Literal, HasDefault
    System.String IncorrectTypeForTypeAs = IncorrectTypeForTypeAs : Assembly, Static, Literal, HasDefault
    System.String CoalesceUsedOnNonNullType = CoalesceUsedOnNonNullType : Assembly, Static, Literal, HasDefault
    System.String ExpressionTypeCannotInitializeCollectionType = ExpressionTypeCannotInitializeCollectionType : Assembly, Static, Literal, HasDefault
    System.String ExpressionTypeCannotInitializeArrayType = ExpressionTypeCannotInitializeArrayType : Assembly, Static, Literal, HasDefault
    System.String ExpressionTypeDoesNotMatchArrayType = ExpressionTypeDoesNotMatchArrayType : Assembly, Static, Literal, HasDefault
    System.String ExpressionTypeDoesNotMatchConstructorParameter = ExpressionTypeDoesNotMatchConstructorParameter : Assembly, Static, Literal, HasDefault
    System.String ArgumentTypeDoesNotMatchMember = ArgumentTypeDoesNotMatchMember : Assembly, Static, Literal, HasDefault
    System.String ArgumentMemberNotDeclOnType = ArgumentMemberNotDeclOnType : Assembly, Static, Literal, HasDefault
    System.String ExpressionTypeDoesNotMatchMethodParameter = ExpressionTypeDoesNotMatchMethodParameter : Assembly, Static, Literal, HasDefault
    System.String ExpressionTypeDoesNotMatchParameter = ExpressionTypeDoesNotMatchParameter : Assembly, Static, Literal, HasDefault
    System.String ExpressionTypeDoesNotMatchReturn = ExpressionTypeDoesNotMatchReturn : Assembly, Static, Literal, HasDefault
    System.String ExpressionTypeNotInvocable = ExpressionTypeNotInvocable : Assembly, Static, Literal, HasDefault
    System.String FieldNotDefinedForType = FieldNotDefinedForType : Assembly, Static, Literal, HasDefault
    System.String IncorrectNumberOfIndexes = IncorrectNumberOfIndexes : Assembly, Static, Literal, HasDefault
    System.String IncorrectNumberOfLambdaArguments = IncorrectNumberOfLambdaArguments : Assembly, Static, Literal, HasDefault
    System.String IncorrectNumberOfLambdaDeclarationParameters = IncorrectNumberOfLambdaDeclarationParameters : Assembly, Static, Literal, HasDefault
    System.String IncorrectNumberOfMethodCallArguments = IncorrectNumberOfMethodCallArguments : Assembly, Static, Literal, HasDefault
    System.String IncorrectNumberOfConstructorArguments = IncorrectNumberOfConstructorArguments : Assembly, Static, Literal, HasDefault
    System.String IncorrectNumberOfMembersForGivenConstructor = IncorrectNumberOfMembersForGivenConstructor : Assembly, Static, Literal, HasDefault
    System.String IncorrectNumberOfArgumentsForMembers = IncorrectNumberOfArgumentsForMembers : Assembly, Static, Literal, HasDefault
    System.String LambdaParameterNotInScope = LambdaParameterNotInScope : Assembly, Static, Literal, HasDefault
    System.String LambdaTypeMustBeDerivedFromSystemDelegate = LambdaTypeMustBeDerivedFromSystemDelegate : Assembly, Static, Literal, HasDefault
    System.String MemberNotFieldOrProperty = MemberNotFieldOrProperty : Assembly, Static, Literal, HasDefault
    System.String MethodContainsGenericParameters = MethodContainsGenericParameters : Assembly, Static, Literal, HasDefault
    System.String MethodIsGeneric = MethodIsGeneric : Assembly, Static, Literal, HasDefault
    System.String MethodNotPropertyAccessor = MethodNotPropertyAccessor : Assembly, Static, Literal, HasDefault
    System.String PropertyDoesNotHaveGetter = PropertyDoesNotHaveGetter : Assembly, Static, Literal, HasDefault
    System.String PropertyDoesNotHaveSetter = PropertyDoesNotHaveSetter : Assembly, Static, Literal, HasDefault
    System.String NotAMemberOfType = NotAMemberOfType : Assembly, Static, Literal, HasDefault
    System.String OperatorNotImplementedForType = OperatorNotImplementedForType : Assembly, Static, Literal, HasDefault
    System.String ParameterExpressionNotValidAsDelegate = ParameterExpressionNotValidAsDelegate : Assembly, Static, Literal, HasDefault
    System.String ParameterNotCaptured = ParameterNotCaptured : Assembly, Static, Literal, HasDefault
    System.String PropertyNotDefinedForType = PropertyNotDefinedForType : Assembly, Static, Literal, HasDefault
    System.String MethodNotDefinedForType = MethodNotDefinedForType : Assembly, Static, Literal, HasDefault
    System.String TypeContainsGenericParameters = TypeContainsGenericParameters : Assembly, Static, Literal, HasDefault
    System.String TypeIsGeneric = TypeIsGeneric : Assembly, Static, Literal, HasDefault
    System.String TypeMissingDefaultConstructor = TypeMissingDefaultConstructor : Assembly, Static, Literal, HasDefault
    System.String ListInitializerWithZeroMembers = ListInitializerWithZeroMembers : Assembly, Static, Literal, HasDefault
    System.String ElementInitializerMethodNotAdd = ElementInitializerMethodNotAdd : Assembly, Static, Literal, HasDefault
    System.String ElementInitializerMethodNoRefOutParam = ElementInitializerMethodNoRefOutParam : Assembly, Static, Literal, HasDefault
    System.String ElementInitializerMethodWithZeroArgs = ElementInitializerMethodWithZeroArgs : Assembly, Static, Literal, HasDefault
    System.String ElementInitializerMethodStatic = ElementInitializerMethodStatic : Assembly, Static, Literal, HasDefault
    System.String TypeNotIEnumerable = TypeNotIEnumerable : Assembly, Static, Literal, HasDefault
    System.String TypeParameterIsNotDelegate = TypeParameterIsNotDelegate : Assembly, Static, Literal, HasDefault
    System.String UnexpectedCoalesceOperator = UnexpectedCoalesceOperator : Assembly, Static, Literal, HasDefault
    System.String InvalidCast = InvalidCast : Assembly, Static, Literal, HasDefault
    System.String UnhandledCall = UnhandledCall : Assembly, Static, Literal, HasDefault
    System.String UnhandledBinary = UnhandledBinary : Assembly, Static, Literal, HasDefault
    System.String UnhandledBinding = UnhandledBinding : Assembly, Static, Literal, HasDefault
    System.String UnhandledBindingType = UnhandledBindingType : Assembly, Static, Literal, HasDefault
    System.String UnhandledConvert = UnhandledConvert : Assembly, Static, Literal, HasDefault
    System.String UnhandledConvertFromDecimal = UnhandledConvertFromDecimal : Assembly, Static, Literal, HasDefault
    System.String UnhandledConvertToDecimal = UnhandledConvertToDecimal : Assembly, Static, Literal, HasDefault
    System.String UnhandledExpressionType = UnhandledExpressionType : Assembly, Static, Literal, HasDefault
    System.String UnhandledMemberAccess = UnhandledMemberAccess : Assembly, Static, Literal, HasDefault
    System.String UnhandledUnary = UnhandledUnary : Assembly, Static, Literal, HasDefault
    System.String UnknownBindingType = UnknownBindingType : Assembly, Static, Literal, HasDefault
    System.String LogicalOperatorMustHaveConsistentTypes = LogicalOperatorMustHaveConsistentTypes : Assembly, Static, Literal, HasDefault
    System.String LogicalOperatorMustHaveBooleanOperators = LogicalOperatorMustHaveBooleanOperators : Assembly, Static, Literal, HasDefault
    System.String MethodDoesNotExistOnType = MethodDoesNotExistOnType : Assembly, Static, Literal, HasDefault
    System.String MethodWithArgsDoesNotExistOnType = MethodWithArgsDoesNotExistOnType : Assembly, Static, Literal, HasDefault
    System.String MethodWithMoreThanOneMatch = MethodWithMoreThanOneMatch : Assembly, Static, Literal, HasDefault
    System.String IncorrectNumberOfTypeArgsForFunc = IncorrectNumberOfTypeArgsForFunc : Assembly, Static, Literal, HasDefault
    System.String IncorrectNumberOfTypeArgsForAction = IncorrectNumberOfTypeArgsForAction : Assembly, Static, Literal, HasDefault
    System.String ExpressionMayNotContainByrefParameters = ExpressionMayNotContainByrefParameters : Assembly, Static, Literal, HasDefault
    System.String ArgumentCannotBeOfTypeVoid = ArgumentCannotBeOfTypeVoid : Assembly, Static, Literal, HasDefault
  Properties:
    System.Resources.ResourceManager Resources 'get ' : 
  Methods:
    get_Resources(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetString(String, Object[]): PrivateScope, Public, Static, HideBySig
    GetString(String): PrivateScope, Public, Static, HideBySig
    GetObject(String): PrivateScope, Public, Static, HideBySig
Class System.Res: AutoLayout, AnsiClass, Class, BeforeFieldInit
    Void .ctor(): PrivateScope, Assembly, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Resources.ResourceManager ResourceManager 'get ' : 
    System.Globalization.CultureInfo Culture 'get set' : 
    System.String BigIntInfinity 'get ' : 
    System.String InvalidCharactersInString 'get ' : 
    System.String MustBeBigInt 'get ' : 
    System.String MustBePositive 'get ' : 
    System.String NonNegative 'get ' : 
    System.String NotANumber 'get ' : 
    System.String Overflow_Byte 'get ' : 
    System.String Overflow_Decimal 'get ' : 
    System.String Overflow_Double 'get ' : 
    System.String Overflow_Int16 'get ' : 
    System.String Overflow_Int32 'get ' : 
    System.String Overflow_Int64 'get ' : 
    System.String Overflow_SByte 'get ' : 
    System.String Overflow_Single 'get ' : 
    System.String Overflow_UInt16 'get ' : 
    System.String Overflow_UInt32 'get ' : 
    System.String Overflow_UInt64 'get ' : 
    System.String ParsedStringWasInvalid 'get ' : 
    System.String UnsupportedNumberStyle 'get ' : 
  Methods:
    get_ResourceManager(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Culture(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    set_Culture(CultureInfo): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_BigIntInfinity(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_InvalidCharactersInString(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_MustBeBigInt(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_MustBePositive(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_NonNegative(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_NotANumber(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Overflow_Byte(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Overflow_Decimal(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Overflow_Double(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Overflow_Int16(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Overflow_Int32(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Overflow_Int64(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Overflow_SByte(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Overflow_Single(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Overflow_UInt16(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Overflow_UInt32(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_Overflow_UInt64(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_ParsedStringWasInvalid(): PrivateScope, Assembly, Static, HideBySig, SpecialName
    get_UnsupportedNumberStyle(): PrivateScope, Assembly, Static, HideBySig, SpecialName
Class <PrivateImplementationDetails>{1ECE5C33-CE63-4E5F-876E-7A1E97F239E1}: NotPublic
  Fields:
    System.Collections.Generic.Dictionary`2[System.String,System.Int32] $$method0x6000720-1 : Assembly, Static
    __StaticArrayInitTypeSize=148 $$method0x6000d0b-1 : Assembly, Static, HasFieldRVA
    __StaticArrayInitTypeSize=148 $$method0x6000d0b-2 : Assembly, Static, HasFieldRVA
    __StaticArrayInitTypeSize=288 $$method0x6000d11-1 : Assembly, Static, HasFieldRVA
